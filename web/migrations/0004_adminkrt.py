# Generated by Django 4.2.16 on 2025-08-08 20:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("web", "0003_xmlfile_article_xml_file"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdminKRT",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("doi", models.CharField(db_index=True, max_length=255)),
                (
                    "epmc_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=50, null=True
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("openai", "OpenAI (GPT)"),
                            ("anthropic", "Anthropic (Claude)"),
                            ("gemini", "Google (Gemini)"),
                            (
                                "openai_compatible",
                                "OpenAI-compatible (Ollama, DeepSeek, Grok)",
                            ),
                        ],
                        max_length=50,
                    ),
                ),
                ("model_name", models.CharField(max_length=100)),
                ("base_url", models.URLField(blank=True, null=True)),
                ("processing_time", models.FloatField(blank=True, null=True)),
                ("token_usage", models.JSONField(blank=True, default=dict)),
                (
                    "cost_estimate",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                ("krt_data", models.JSONField(default=list)),
                ("resources_found", models.PositiveIntegerField(default=0)),
                ("new_resources", models.PositiveIntegerField(default=0)),
                ("reused_resources", models.PositiveIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Generation"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("reviewing", "Under Review"),
                            ("approved", "Approved"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "quality_rating",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("unrated", "Unrated"),
                        ],
                        default="unrated",
                        max_length=20,
                    ),
                ),
                ("admin_notes", models.TextField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("is_public", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_krts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "article",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_krts",
                        to="web.article",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="admin_krts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "xml_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_krts",
                        to="web.xmlfile",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["doi"], name="web_adminkr_doi_9c13ab_idx"),
                    models.Index(
                        fields=["epmc_id"], name="web_adminkr_epmc_id_724be1_idx"
                    ),
                    models.Index(
                        fields=["status"], name="web_adminkr_status_a8d7e3_idx"
                    ),
                    models.Index(
                        fields=["provider", "model_name"],
                        name="web_adminkr_provide_d877c4_idx",
                    ),
                    models.Index(
                        fields=["quality_rating"], name="web_adminkr_quality_576b7a_idx"
                    ),
                    models.Index(
                        fields=["is_public"], name="web_adminkr_is_publ_9e962c_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="web_adminkr_created_989863_idx"
                    ),
                ],
                "unique_together": {("doi", "provider", "model_name")},
            },
        ),
    ]
