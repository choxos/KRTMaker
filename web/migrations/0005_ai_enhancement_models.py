# Generated by Django 5.2.5 on 2025-08-12 10:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("web", "0004_adminkrt"),
    ]

    operations = [
        migrations.CreateModel(
            name="AIEnhancementUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feature_type",
                    models.CharField(
                        choices=[
                            ("rrid_suggestion", "RRID Suggestion"),
                            ("resource_recommendation", "Resource Recommendation"),
                            ("conversational_krt", "Conversational KRT"),
                            ("cross_validation", "Cross-Reference Validation"),
                            ("multimodal_processing", "Multimodal Processing"),
                            ("browser_extension", "Browser Extension"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "user_session",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("request_data", models.JSONField(default=dict)),
                ("response_data", models.JSONField(default=dict)),
                ("response_time", models.FloatField(blank=True, null=True)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "user_rating",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("user_feedback", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["feature_type"], name="web_aienhan_feature_445950_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="web_aienhan_created_bf86ab_idx"
                    ),
                    models.Index(
                        fields=["success"], name="web_aienhan_success_86e71c_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ConversationalKRTSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(db_index=True, max_length=32, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("current_krt_entries", models.JSONField(default=list)),
                ("pending_clarifications", models.JSONField(default=list)),
                ("user_preferences", models.JSONField(default=dict)),
                ("conversation_history", models.JSONField(default=list)),
                (
                    "last_intent",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("add_resource", "Add Resource"),
                            ("modify_resource", "Modify Resource"),
                            ("delete_resource", "Delete Resource"),
                            ("validate_resource", "Validate Resource"),
                            ("export_krt", "Export KRT"),
                            ("help", "Help Request"),
                            ("clarification", "Clarification"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("message_count", models.PositiveIntegerField(default=0)),
                ("resources_added", models.PositiveIntegerField(default=0)),
                ("clarifications_requested", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "completion_method",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
                "indexes": [
                    models.Index(
                        fields=["session_id"], name="web_convers_session_30facb_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="web_convers_is_acti_9e63b2_idx"
                    ),
                    models.Index(
                        fields=["updated_at"], name="web_convers_updated_de6d22_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CrossReferenceValidation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("resource_identifier", models.CharField(max_length=200)),
                ("resource_type", models.CharField(max_length=100)),
                (
                    "overall_status",
                    models.CharField(
                        choices=[
                            ("valid", "Valid"),
                            ("invalid", "Invalid"),
                            ("deprecated", "Deprecated"),
                            ("inconsistent", "Inconsistent"),
                            ("not_found", "Not Found"),
                            ("error", "Error"),
                            ("needs_review", "Needs Review"),
                        ],
                        max_length=20,
                    ),
                ),
                ("confidence_score", models.FloatField()),
                ("validation_results", models.JSONField(default=list)),
                ("discrepancies", models.JSONField(default=list)),
                ("recommendations", models.JSONField(default=list)),
                ("error_patterns", models.JSONField(default=list)),
                ("validation_sources", models.JSONField(default=list)),
                ("response_times", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["resource_identifier"],
                        name="web_crossre_resourc_0e0ed0_idx",
                    ),
                    models.Index(
                        fields=["overall_status"], name="web_crossre_overall_8be9f3_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="web_crossre_expires_48037c_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ResourceRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("original_resource", models.CharField(max_length=500)),
                (
                    "original_vendor",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "original_catalog",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("recommended_resource", models.CharField(max_length=500)),
                ("recommended_vendor", models.CharField(max_length=200)),
                (
                    "recommended_catalog",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("functional_equivalent", "Functional Equivalent"),
                            ("alternative_vendor", "Alternative Vendor"),
                            ("updated_version", "Updated Version"),
                            ("price_optimization", "Price Optimization"),
                            ("availability_alternative", "Availability Alternative"),
                        ],
                        max_length=30,
                    ),
                ),
                ("similarity_score", models.FloatField()),
                ("confidence_score", models.FloatField()),
                ("reasoning", models.TextField()),
                (
                    "availability_status",
                    models.CharField(default="unknown", max_length=50),
                ),
                ("price_comparison", models.JSONField(blank=True, default=dict)),
                ("scientific_evidence", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("user_feedback", models.JSONField(blank=True, default=list)),
            ],
            options={
                "ordering": ["-confidence_score", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["original_resource"],
                        name="web_resourc_origina_1878e9_idx",
                    ),
                    models.Index(
                        fields=["recommended_resource"],
                        name="web_resourc_recomme_9e0dd3_idx",
                    ),
                    models.Index(
                        fields=["recommendation_type"],
                        name="web_resourc_recomme_b467f4_idx",
                    ),
                    models.Index(
                        fields=["confidence_score"],
                        name="web_resourc_confide_ca1410_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RRIDSuggestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("resource_name", models.CharField(max_length=500)),
                ("resource_type", models.CharField(max_length=100)),
                ("vendor", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "catalog_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("suggested_rrid", models.CharField(max_length=100)),
                (
                    "suggestion_type",
                    models.CharField(
                        choices=[
                            ("functional_equivalent", "Functional Equivalent"),
                            ("updated_version", "Updated Version"),
                            ("alternative_vendor", "Alternative Vendor"),
                            ("similar_resource", "Similar Resource"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "validation_status",
                    models.CharField(
                        choices=[
                            ("valid", "Valid"),
                            ("deprecated", "Deprecated"),
                            ("invalid", "Invalid"),
                            ("not_found", "Not Found"),
                            ("needs_review", "Needs Review"),
                        ],
                        max_length=20,
                    ),
                ),
                ("validation_source", models.CharField(max_length=100)),
                ("confidence_score", models.FloatField()),
                ("reasoning", models.TextField()),
                ("additional_info", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_validated", models.DateTimeField(auto_now=True)),
                ("usage_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["-confidence_score", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["resource_name"], name="web_rridsug_resourc_0efc24_idx"
                    ),
                    models.Index(
                        fields=["suggested_rrid"], name="web_rridsug_suggest_69ece8_idx"
                    ),
                    models.Index(
                        fields=["validation_status"],
                        name="web_rridsug_validat_0ca715_idx",
                    ),
                    models.Index(
                        fields=["confidence_score"],
                        name="web_rridsug_confide_a167a2_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MultimodalProcessingResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(default="layoutlmv3-base", max_length=100),
                ),
                (
                    "processing_mode",
                    models.CharField(default="unified_text_image", max_length=50),
                ),
                ("total_pages", models.PositiveIntegerField()),
                ("pages_with_images", models.PositiveIntegerField(default=0)),
                ("pages_with_tables", models.PositiveIntegerField(default=0)),
                ("pages_with_figures", models.PositiveIntegerField(default=0)),
                ("text_resources", models.JSONField(default=list)),
                ("table_resources", models.JSONField(default=list)),
                ("figure_resources", models.JSONField(default=list)),
                ("supplementary_resources", models.JSONField(default=list)),
                ("processing_time", models.FloatField(blank=True, null=True)),
                ("confidence_scores", models.JSONField(default=dict)),
                ("document_sections", models.JSONField(default=list)),
                ("layout_analysis", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="multimodal_results",
                        to="web.krtsession",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["session"], name="web_multimo_session_eecb68_idx"
                    ),
                    models.Index(
                        fields=["status"], name="web_multimo_status_ba6c75_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="web_multimo_created_e2097b_idx"
                    ),
                ],
            },
        ),
    ]
