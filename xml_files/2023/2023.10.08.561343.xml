<!DOCTYPE article
 PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2 20190208//EN" "JATS-archivearticle1.dtd">
<article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="preprint"><?all-math-mml yes?><?use-mml?><?origin ukpmcpa?><front><journal-meta><journal-id journal-id-type="nlm-ta">bioRxiv</journal-id><journal-title-group><journal-title>bioRxiv : the preprint server for biology</journal-title></journal-title-group><issn pub-type="ppub"/></journal-meta><article-meta><article-id pub-id-type="manuscript">EMS189446</article-id><article-id pub-id-type="doi">10.1101/2023.10.08.561343</article-id><article-id pub-id-type="archive">PPR738888</article-id><article-version-alternatives><article-version article-version-type="status">preprint</article-version><article-version article-version-type="number">1</article-version></article-version-alternatives><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Graphite: painting genomes using a colored De Bruijn graph</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Beeloo</surname><given-names>Rick</given-names></name><xref ref-type="aff" rid="A1">1</xref></contrib><contrib contrib-type="author"><name><surname>Zomer</surname><given-names>Aldert L.</given-names></name><xref ref-type="aff" rid="A2">2</xref></contrib><contrib contrib-type="author"><name><surname>Dutilh</surname><given-names>Bas E.</given-names></name><xref ref-type="aff" rid="A1">1</xref><xref ref-type="aff" rid="A3">3</xref></contrib><aff id="A1"><label>1</label>Theoretical Biology and Bioinformatics, Utrecht University, Padualaan 8, 3584 CH Utrecht, the Netherlands</aff><aff id="A2"><label>2</label>Department of Infectious Diseases and Immunology, Faculty of Veterinary Medicine, Utrecht University, 3584 Utrecht, the Netherlands</aff><aff id="A3"><label>3</label>Institute of Biodiversity, Faculty of Biological Sciences, Cluster of Excellence Balance of the Microverse, Friedrich Schiller University Jena, 07743 Jena, Germany</aff></contrib-group><pub-date pub-type="nihms-submitted"><day>12</day><month>10</month><year>2023</year></pub-date><pub-date pub-type="preprint"><day>10</day><month>10</month><year>2023</year></pub-date><permissions><ali:free_to_read/><license><ali:license_ref>https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This work is licensed under a <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0 International license</ext-link>.</license-p></license></permissions><abstract><p id="P1">The recent growth of microbial sequence data allows comparisons at unprecedented scales, enabling tracking of strains, mobile genetic elements, or genes. Querying a genome against a large reference database can easily yield thousands of matches that are tedious to interpret and pose computational challenges. We developed Graphite that uses a colored De Bruijn graph (cDBG) to paint query genomes, selecting the local best matches along the full query length. By focusing on the closest genomic match of each query region, Graphite reduces the number of matches while providing promising leads for genomic forensics. When applied to hundreds of <italic>Campylobacter</italic> genomes we found extensive gene sharing, including a previously undetected <italic>C. coli</italic> plasmid that matched a <italic>C. jejuni</italic> chromosome. Together, genome painting using cDBGs as enabled by Graphite, can reveal new biological phenomena by mitigating computational hurdles. Graphite is implemented in Julia, available at <underline><ext-link ext-link-type="uri" xlink:href="https://github.com/MGXlab/Graphite">https://github.com/MGXlab/Graphite</ext-link></underline>.</p></abstract><kwd-group><kwd>chromosome painting</kwd><kwd><italic>Campylobacter</italic></kwd><kwd>antibiotic resistance genes</kwd><kwd>horizontal gene transfer</kwd><kwd>bioinformatic tool</kwd><kwd>suffix array</kwd></kwd-group></article-meta></front><body><sec id="S1" sec-type="intro"><title>Introduction</title><p id="P2">Tracking genetic sequences is crucial for understanding various biological phenomena, such as recombination and horizontal gene transfer (HGT) of genetic elements, as well as source attribution in epidemiology. Advances in DNA sequencing, coupled with the abundance of sequencing data in databases, enable us to reconstruct the movement of genetic information at different scales. For example, the rearrangement of chromosomes in a single cell<sup><xref ref-type="bibr" rid="R1">1</xref></sup>, exchange of plasmids or conjugative elements between different bacteria<sup><xref ref-type="bibr" rid="R2">2</xref>,<xref ref-type="bibr" rid="R3">3</xref></sup>, movement of plasmids through multiple environments<sup><xref ref-type="bibr" rid="R4">4</xref>,<xref ref-type="bibr" rid="R5">5</xref></sup>, and following microbes across continents<sup><xref ref-type="bibr" rid="R6">6</xref>,<xref ref-type="bibr" rid="R7">7</xref></sup>. Each genome or metagenome sequence serves as a snapshot at a specific time and place. Comparing these snapshots allows us to identify closely related sequences across geographic and ecological boundaries, and track genetic information at different scales, from within a patient to across the globe.</p><p id="P3">Several mechanisms can lead to the repeated observation of a given microbial sequence. First, the observed strains may be very closely related, suggesting a recent physical exchange between the sampling sites, or both from a third source<sup><xref ref-type="bibr" rid="R8">8</xref>–<xref ref-type="bibr" rid="R10">10</xref></sup>. Second, the sequence may reflect a conserved mobile genetic element (MGE), which is transferred between different microbial lineages independently of vertical inheritance<sup><xref ref-type="bibr" rid="R11">11</xref></sup>. Either way, the timescale of the events may be inferred from the similarity between the two sequences. Just after such events the sequences should be highly similar, but over time they increasingly accumulate mutations such as point mutations, loss of segments, and insertion of new information via recombination<sup><xref ref-type="bibr" rid="R11">11</xref>,<xref ref-type="bibr" rid="R12">12</xref></sup>. From the perspective of a given query, longer sequence matches reflect more recent exchanges. Thus, searches for the longest stretch of sequence identity in a database of target sequences can be used to identify the closest genomic link of the query.</p><p id="P4">Given the expanse and rates of exchange of DNA, especially in prokaryotes<sup><xref ref-type="bibr" rid="R13">13</xref>,<xref ref-type="bibr" rid="R14">14</xref></sup>, there can be different matches across a single chromosome. To establish such links, chromosome painting has been used within cells and across species. Originally, chromosome painting was performed experimentally, by probing specific regions of the chromosome with fluorescently labeled DNA<sup><xref ref-type="bibr" rid="R15">15</xref></sup>, and the resulting color patterns were used to compare chromosome structures. In case of genomic exchange or chromosomal rearrangements, the sequence segments can be traced back to their source based on their color. Experimental chromosomal painting has been applied to a variety of species such as plants<sup><xref ref-type="bibr" rid="R16">16</xref>,<xref ref-type="bibr" rid="R17">17</xref></sup> and fungi <sup><xref ref-type="bibr" rid="R18">18</xref></sup>.</p><p id="P5"><italic>In silico</italic> chromosome painting similarly identifies genomic links between a query sequence and reference database, and has been used to study the population structure in, e.g., humans<sup><xref ref-type="bibr" rid="R19">19</xref></sup> and <italic>Helicobacter pylori</italic> <sup><italic>20</italic></sup>. From a genomic forensics perspective, identifying the longest identical match of a given query segment would yield the closest genomic link, within the search frame of a given reference database. For example, in the case of a recent geographic migration or HGT, the best match might reflect the most likely origin or donor of a subsequence. Identical matches between two sequences are commonly defined as a maximal exact match (MEM), which cannot be extended without introducing mismatches<sup><xref ref-type="bibr" rid="R21">21</xref></sup>. Algorithms to identify MEMs can broadly be categorized into those using suffix arrays and their derivatives<sup><xref ref-type="bibr" rid="R21">21</xref>–<xref ref-type="bibr" rid="R24">24</xref></sup>, and those that use hashing<sup><xref ref-type="bibr" rid="R25">25</xref>,<xref ref-type="bibr" rid="R26">26</xref></sup>. MEM identification usually starts with partitioning the reference sequences into k-mers, which are indexed and queried for k-mers of the query sequence. Both methods, especially suffix arrays, are memory intensive when applied to large reference datasets. This was circumvented by bfMEM by only indexing k-mers present in the query<sup><xref ref-type="bibr" rid="R26">26</xref></sup>. These tools have shown excellent performance in resolving pairwise MEMs between a query and a large reference dataset. Still, pairwise comparisons of thousands of genomes remain computationally infeasible.</p><p id="P6">One data structure allowing efficient large-scale sequence comparison is the colored de Bruijn graph (cDBG). To construct a cDBG all the sequences are divided into k-mers that are used to build a de Bruijn graph, where edges represent the overlaps between adjacent k-mers in the sequences. The optimal k-mer size greatly depends on the question but generally ranges from 18-31 nucleotides<sup><xref ref-type="bibr" rid="R27">27</xref></sup>. Each sequence used to build the cDBG traverses a specific path of nodes that overlaps with other paths in regions of sequence identity. To further compress the cDBG, non-branching paths are merged into unitigs, resulting in a compacted cDBG (ccDBG) whose nodes are equal to or bigger than the original k-mer size. The compression feature of ccDBGs, combined with their ability to enable fast sequence comparisons, makes them suitable for tasks including sequence alignments<sup><xref ref-type="bibr" rid="R28">28</xref></sup>, variant calling<sup><xref ref-type="bibr" rid="R29">29</xref>,<xref ref-type="bibr" rid="R30">30</xref></sup>, homology detection<sup><xref ref-type="bibr" rid="R31">31</xref></sup>, and genome-wide association studies<sup><xref ref-type="bibr" rid="R32">32</xref></sup>. State-of-the-art ccDBG construction tools such as CuttleFish can process enormous amounts of sequences<sup><xref ref-type="bibr" rid="R33">33</xref></sup>. Most graph builders output a Graphical Fragment Assembly format (GFA), which represents the graph and serves as a widely accepted input for tools utilizing ccDBGs. This promotes efficient data sharing by removing the need to build separate indexes for every tool, which is often the most time-consuming part<sup><xref ref-type="bibr" rid="R34">34</xref></sup>.</p><p id="P7">Encoding a set of sequences into a ccDBG also implicitly resolves shared regions between the input sequences. For example, if two input sequences jointly traverse the same consecutive set of nodes, this indicates a shared identical subsequence or MEM. To identify MEMs for any given query, its path can be checked for intersections with paths of other sequences. In a large database, one query region could yield MEMs with thousands of different reference sequences, while we are often only interested in the longest match overall. Here we developed Graphite to find the longest MEM (LMEM) for each region in the query using a CDG. Resolving these LMEMS locally across a query provides unique insights into the origin of genetic segments that remain hidden in the wealth of matches. We demonstrate this by applying Graphite to a collection of <italic>Campylobacter</italic> genomes where we zoom in on two LMEMs that suggest an inter-species transfer of genetic material between <italic>C. coli</italic> and <italic>C. jejuni</italic> and <italic>C. coli</italic> and the emerging pathogen <italic>C. hyointestinalis subsp. hyointestinalis</italic><sup><italic>35</italic></sup></p></sec><sec id="S2" sec-type="results"><title>Results</title><p id="P8">We developed Graphite to identify the longest maximum exact matches (LMEMs) between one or more queries and multiple reference sequences. Below, we first validate LMEM identification by comparing our results to MEMs identified by E-MEM. Then we use an example dataset composed of 576 <italic>Campylobacter</italic> genomes to show how LMEMs can drastically reduce the number of matches and thus the output file size, and demonstrate how they shed light on relevant evolutionary events.</p><sec id="S3"><title>Validation of LMEM identification on three bacterial genomes</title><p id="P9">Graphite uses a ccDBG as input, in this case, we built them using Cuttlefish with a k-mer size of 31 nucleotides<sup><xref ref-type="bibr" rid="R33">33</xref></sup>. Node sizes in the ccDBG depend on the sequence variation in the input sequences. Mutations such as SNPs introduce bubbles in the cDBG and prevent merging adjacent k-mers into longer sequences during graph compaction. As nodes may be shared by all sequences that overlap by at least 31 nucleotides, a shared node rarely forms the entire MEM, as variations often occur in sequences other than those being compared (<xref ref-type="fig" rid="F1">Figure 1a</xref>). Graphite locates the shared nodes between a query sequence and each reference to bidirectionally extend these resolving a MEM. As all references in the database are compared, a given query region will match multiple MEMs, of which Graphite only retains the longest. To validate LMEM selection by Graphite we used both E-MEM and Graphite to query <italic>C. jejuni</italic> CP071576 against the CP071584 and CP085965 genomes. E-MEM identified 1,586 MEMs with CP071584, and 10,990 MEMs with CP085965. Graphite resolved 1,564 LMEMs, most selected from CP071584 with some exceptions (<xref ref-type="fig" rid="F3">Figure 3b</xref>). <xref ref-type="fig" rid="F3">Figure 3c</xref> shows how these exceptions support Graphite’s LMEM selection algorithm.</p></sec><sec id="S4"><title>Graphite efficiently identifies LMEMs in hundreds of genomes</title><p id="P10">To test Graphite on a medium-sized real world dataset, we downloaded all 579 complete <italic>Campylobacter</italic> genomes from BV-BRC<sup><xref ref-type="bibr" rid="R36">36</xref></sup>. After curation 576 remained (see <xref ref-type="sec" rid="S9">Online Methods</xref>, <xref ref-type="supplementary-material" rid="SD1">Figure S3</xref>, <xref ref-type="supplementary-material" rid="SD1">Table S1</xref>) which were used to construct a ccDBG using Cuttlefish<sup><xref ref-type="bibr" rid="R33">33</xref></sup> with 3,496,408 nodes and 115,691,195 edges. The genomes spanned 33 different species (excluding <italic>Campylobacter</italic> sp.) with the majority of genomes being derived from <italic>C. jejuni</italic> (n=363, 63%) and <italic>C. coli</italic> (n=86, 15%), while 29 species were represented by less than ten genomes. Next, we compared the performance of different tools for finding MEMs including E-MEM<sup><xref ref-type="bibr" rid="R25">25</xref></sup>, Bf-MEM<sup><xref ref-type="bibr" rid="R26">26</xref></sup>, and LMEMs by Graphite, querying all 86 <italic>C. coli</italic> genomes against the remaining 490 <italic>Campylobacter</italic> genomes (<xref ref-type="table" rid="T1">Table 1</xref>). Graphite ran almost four times faster than the next tool, E-MEM. Graphites runtime includes the time needed to construct the ccDBG (∼1.5 minutes), but unlike the MEM finders, the ccDBG can be reused for additional queries and other analyses such as variant calling and visualization. By focusing on finding LMEMs rather than all MEMs, we reduced the output by over 50x (<xref ref-type="table" rid="T1">Table 1</xref>, matches ≥31nt by Graphite and E-MEM). This demonstrates that LMEMs can significantly save storage space, especially when querying big reference datasets. As we are often only interested in the longest matches, for example for <italic>in silico</italic> chromosomal painting or HGT analysis, Graphite obsoletes post-processing of vast numbers of MEM results by already selecting the longest MEM during alignment.</p></sec><sec id="S5"><title>Discovery of unique nodes in the Graphite ccDBG reveals unexpected genomic entities</title><p id="P11">Generally, short nodes in the ccDBG were shared by more genomes than long ones (<xref ref-type="fig" rid="F2">Figure 2</xref>). For example, nodes present in at least half of the genomes (&gt;=288) were on average 64 nucleotides (nt) long with the longest being only 112nt. Of all 3.5 million nodes, 24.8%, 9.6%, and 0.07% were present in at least 10, 100, and 500 genomes, respectively. The abundant sharing of the nodes between different genomes illustrates how nodes can function as anchor points for MEM and LMEM detection. The top five longest nodes in the graph exceeded 25,000nt and were all present in a single genome. These large nodes represent non-branching paths in the graph, i.e. consisting of unique 31-mers that are never found in another genome in the dataset. They originated from <italic>C. jejuni</italic> (42,403nt), <italic>Campylobacter sp</italic>. (31,087nt) as well as under-represented species <italic>C. curvus</italic> (29,437nt, four genomes), and <italic>C. concisus</italic> (28,388nt and 27,886, eight genomes). The unique <italic>C. jejuni</italic> node corresponded to a sequence annotated as plasmid pFORC_083_2, found in <italic>C. jejuni</italic> strain FORC_083 that was isolated from chicken in South Korea. It is interesting to note that this plasmid probably represents a bacteriophage, as it encodes typical bacteriophage genes including structural and replication clusters, integrase, and a terminase large subunit that is related to sequences found in various <italic>Firmicutes</italic> (<xref ref-type="supplementary-material" rid="SD1">Figure S4</xref>), while <italic>Campylobacter</italic> belongs to the <italic>Epsilonproteobacteria</italic> class. It is also predicted as a member of the <italic>Caudoviricetes</italic> class by IMG/VR <sup><xref ref-type="bibr" rid="R37">37</xref></sup> and was found to match a 30nt CRISRPR spacer in the firmicute <italic>Lactobacillus delbrueckii</italic> subsp. <italic>delbrueckii</italic> strain KCTC 13731 with three mismatches (90% identity) by CRISPRimmunity<sup><xref ref-type="bibr" rid="R38">38</xref></sup>. Whether this is a case of contamination in this finished genome sequence or a bacteriophage with an unusually wide host range remains to be seen<sup><xref ref-type="bibr" rid="R39">39</xref></sup>, but the example illustrates that the detection of long, unique nodes in a pan-genome graph may quickly reveal unexpected or foreign sequences for follow-up.</p></sec><sec id="S6"><title>LMEMs quanitfy interspecies genetic transfer within the <italic>Campylobacter</italic> genus</title><p id="P12"><italic>Campylobacter</italic> is known to actively engage in horizontal gene transfer (HGT) via various mechanisms, such as the uptake of environmental DNA and the exchange of plasmids<sup><xref ref-type="bibr" rid="R40">40</xref></sup>. To demonstrate how LMEMs can contribute to the detection of such genomic links and zoom in on long regions that are likely recently acquired, we queried each individual genome against all others using Graphite, which took 5 hours and resulted in 2,109,030 LMEMs. One advantage of LMEMs is that they form a one-dimensional output containing, for each query region, the longest match in the database. This can be plotted to obtain a genome painting visualization for every genome in the <italic>Campylobacter</italic> genus, which reveals substantial HGT (<xref ref-type="fig" rid="F3">Figure 3</xref>). When considering all LMEMs, 5.29% of the <italic>C. coli</italic> sequence had the closest match in <italic>C. jejuni</italic>, and 2.64% of the <italic>C. jejuni</italic> DNA had the closest match in <italic>C. coli</italic>. The frequencies of shared DNA between these two species varied greatly depending on the contig, ranging from 0 to 99.93% for <italic>C. jejuni</italic> and from 0.000112% to 99.81% for <italic>C. coli</italic>. While high frequencies were mainly observed for shorter contigs (<xref ref-type="fig" rid="F3">Figure 3</xref>, <xref ref-type="supplementary-material" rid="SD1">Figure S5</xref>), the <italic>C. coli</italic> chromosome CP092025 matched 19% of its DNA with <italic>C. jejuni</italic> and the <italic>C. jejuni</italic> chromosome CP059964 matched 10% of its DNA with <italic>C. coli</italic>. These results confirm the high transfer frequency of genetic material between <italic>C. coli</italic> and <italic>C. jejuni</italic>.</p></sec><sec id="S7"><title>LMEMs highlight biologically relevant genomic transfer events</title><p id="P13">To further explore our results, we investigated long LMEMs that were shared by genomes from different species in search of striking cases of HGT. One LMEM of 16,417nt was shared between a <italic>C. jejuni</italic> chromosome (CP107256) and a <italic>C. coli</italic> plasmid (CP013035, <xref ref-type="fig" rid="F4">Figure 4a</xref>). This LMEM encoded several proteins including the <italic>tetO</italic> gene conferring resistance against tetracycline antibiotics. Inter-species LMEMs were also observed among other species (<xref ref-type="fig" rid="F3">Figure 3</xref>), for example, we detected a 2,068nt LMEM between <italic>C. jejuni</italic> (CP047082) and <italic>C. hyointestinalis subsp. hyointestinalis</italic> (CP015575), which encodes an ISChh1 transposon according to ISfinder <sup><xref ref-type="bibr" rid="R41">41</xref></sup> that disrupted the <italic>pycB</italic> gene in <italic>C. hyointestinalis subsp. hyointestinalis</italic> (<xref ref-type="fig" rid="F4">Figure 4b</xref>). We also explored other paths in the cDBG that traversed the LMEM nodes, showing that the transposon was present in twenty genomes in a variety of different contexts (<xref ref-type="fig" rid="F4">Figure 4b</xref>).</p></sec></sec><sec id="S8" sec-type="discussion"><title>Discussion</title><p id="P14"><italic>In silico</italic> chromosome painting allows source tracking of individual query sequences in high throughput. Here we present Graphite, an algorithm that efficiently identifies LMEMs between query and reference genome sequences by exploiting the ccDBG data format. Graphite addresses the challenge posed by traditional MEM finders, which often generate an overwhelming number of MEMs<sup><xref ref-type="bibr" rid="R25">25</xref></sup>, complicating downstream analysis. For example, while filtering MEMs based on a minimum length can effectively reduce the number of matches, it could also exclude MEMs in regions that are inherently more challenging to align. Graphite overcomes this by locally selecting the LMEM, reducing the number of MEMs by over 50 times compared to two established MEM finders (<xref ref-type="table" rid="T1">Table 1</xref>) while also retaining optimal query coverage (<xref ref-type="fig" rid="F1">Figure 1</xref>). Moreover, compared to E-MEM and bf-MEM, Graphite was faster and used less memory (<xref ref-type="table" rid="T1">Table 1</xref>).</p><p id="P15">We showed that LMEMs not only serve as an output filtering approach but also provide new insights to answer biological questions. For example, by using Graphite to identify LMEMs in an all-versus-all comparison involving 576 <italic>Campylobacter</italic> genomes, we quantified overall inter-species genomic transfer rates and highlighted interesting cases. Notably, inter-species LMEMs were particularly prevalent among shorter contigs (on the right in <xref ref-type="fig" rid="F3">Figure 3</xref>), which likely represent plasmids or other mobile genetic elements (MGEs) that are extensively shared within the <italic>Campylobacter</italic> genus<sup><xref ref-type="bibr" rid="R40">40</xref></sup>. We also found that inter-species LMEMs between <italic>C. coli</italic> and <italic>C. jejuni</italic> were common for chromosomal contigs sometimes covering up to 19% of the sequence. Interestingly, our LMEM analysis also reveals that <italic>C. coli</italic> shared a greater portion of its DNA with <italic>C. jejuni</italic> than vice versa, which is in line with previous observations that suggest a directionality in the transfer between these species<sup><xref ref-type="bibr" rid="R42">42</xref></sup>. <italic>C. jejuni</italic> was overrepresented in our dataset which might have affected this observation. The abundant exchange of genetic material between <italic>C. coli</italic> and <italic>C. jejuni</italic> has been proposed to result in a process of introgression or despeciation<sup><xref ref-type="bibr" rid="R42">42</xref></sup>.</p><p id="P16">Zooming in on the <italic>Campylobacter</italic> results supports the notion that LMEMs can effectively identify inter-species transfers. We found a 16,417nt tetracycline resistance encoding LMEM between a 44,064nt <italic>C. coli</italic> plasmid and <italic>C. jejuni</italic> chromosome (<xref ref-type="fig" rid="F4">Figure 4a</xref>). In addition, our subgraph visualization of the LMEM region showed that almost all nodes of the <italic>C. coli</italic> plasmid were present in the <italic>C. jejuni</italic> chromosome. Previously, this particular <italic>C. jejuni</italic> chromosomal segment had been theorized to arise from a conjugation event, wherein a <italic>tetO</italic> gene and a prophage were introduced into a plasmid, possibly from a common ancestor<sup><xref ref-type="bibr" rid="R43">43</xref></sup>. The fact that Graphite linked this <italic>C. jejuni</italic> region as an LMEM to a <italic>C. coli</italic> plasmid suggests that <italic>C. coli</italic> played a role in this event as a recent donor or recipient of the sequence from <italic>C. jejuni</italic> (<xref ref-type="fig" rid="F4">Figure 4b</xref>). Another example is the ISChh1 transposon-encoding LMEM between <italic>C. jejuni</italic> and <italic>C. hyointestinalis subsp. hyointestinalis</italic> (<xref ref-type="fig" rid="F4">Figure 4b</xref>). While horizontal gene transfer between these two species is not extensively researched, observations suggest that they engage in recombination when cohabiting in the same environment<sup><xref ref-type="bibr" rid="R44">44</xref></sup>. Although we did not observe it in this instance, transposons, including ISChh1-like transposons<sup><xref ref-type="bibr" rid="R45">45</xref></sup>, mediate the transfer of a variety of genes enhancing the pathogenicity of the host, such as resistance genes and virulence genes<sup><xref ref-type="bibr" rid="R46">46</xref></sup>. In this case, for <italic>C. hyointestinalis subsp. hyointestinalis</italic>, the transposon disrupts the <italic>pycB</italic> gene, potentially pseudogenizing it<sup><xref ref-type="bibr" rid="R47">47</xref></sup>. When visualizing the subgraph of the transposon, with all paths traversing ≥90% of the LMEM nodes, we found this transposon in twenty different genomes. While this information offers valuable insights in its abundance, it also underscores the challenges of large-scale analyses. For example, the use of less stringent aligners can lead to the generation of extensive collections of matches, making it more difficult to select the most similar link. LMEMs help address this challenge by selecting both maximum coverage and identity. As <italic>C. hyointestinalis subsp. hyointestinalis</italic> is an emerging pathogen<sup><xref ref-type="bibr" rid="R35">35</xref></sup> identifying MGEs and their genomic links with Graphite can help in understanding its genomic evolution and potentially inform surveillance strategies.</p><p id="P17">While the genetic exchange between different <italic>Campylobacter</italic> species warrants further investigation, the power of Graphite to rapidly detect such events in this example dataset showcases its flexibility in identifying DNA transfer events. The examples above include previously undetected transfers between genomes and chromosomes, showing that LMEM analysis is a treasure trove for evolutionary genomics analysis, and underscoring the value of fast and memory-efficient algorithms to enable exploration of the vast microbial sequence space.</p><sec id="S9"><title>Online Methods</title><p id="P18">We describe the Graphite algorithm which finds the longest maximum exact matches (LMEMs) between one or multiple queries and a reference database. Graphite builds on compacted colored De Bruijn graphs (ccDBGs)<sup><xref ref-type="bibr" rid="R48">48</xref></sup> and suffix arrays (SAs)<sup><xref ref-type="bibr" rid="R49">49</xref></sup>. These data structures are briefly described in the Supplementary Information. The ccDBG input format is a reduced GFA to save storage space, which we here produced with Cuttlefish (REF). Alternatively, the input can be derived from a regular GFA file. After Graphite takes a ccDBG and a set of query identifiers, the algorithm consists of three phases: query SA construction, reference alignment, and Graphite output generation.</p></sec><sec id="S10"><title>Query suffix array construction</title><p id="P19">Before efficiently searching the ccDBG for LMEMs we have to convert it into an SA. Similar to bf-MEM, we construct the SA from queries instead of references to avoid indexing portions of the graph that may not be used. To index the SA using the SA-IS algorithm<sup><xref ref-type="bibr" rid="R50">50</xref></sup>, node identifiers for all query paths should be concatenated. For textual data, the “$” character is often used to separate different queries as it is lexicographically smaller than the alphabet letters and therefore does not affect sorting. For numerical data, we used negative numbers each identifying the query following it. In regular ccDBGs, node identifiers can also be negative depending on the forward/reverse direction that a sequence traverses through it, which may conflict with negative separators. To resolve this and facilitate reverse complement matching, we use the second-to-last bit of the node identifier to indicate the traversal direction (<xref ref-type="fig" rid="F5">Figure 5</xref>). This caps the node identifiers at 2<sup><xref ref-type="bibr" rid="R30">30</xref></sup> instead of 2<sup><xref ref-type="bibr" rid="R31">31</xref></sup> which is validated when reading the graph file. After constructing the SA, the longest common prefix (LCP) and inverse SA (ISA) can be derived using standard algorithms<sup><xref ref-type="bibr" rid="R22">22</xref></sup>. The steps to construct the data structures from a graph file are given in <bold>Algorithm 1</bold>.</p><boxed-text id="BX1" position="anchor" content-type="below"><caption><title>Algorithm 1. Suffix array construction from graph file</title></caption><preformat preformat-type="dialog">
1. <bold>Input:</bold> GFA2 file: F, query ids: qids
2. <bold>Output:</bold> Suffix array of queries: SAqs, LCP array: LCPqs, inverse permutation of SA: ISAqs
3. Function <bold>ConstructSA</bold>(F, qids)
4.  Initialize Nqs and Qids as empty vectors
5.   <bold>for</bold> each contigID, path in F
6.    if contigID is in qids
7.     Initialize w as an empty vector
8.     for each node in path
9.      if node indicates reverse complement traversal
10.       Append (flip 2nd last bit of node) to w // Figure 5
11.     else
12.       Append node to w
13.    Append w to Nqs
14.    Append negative separator to w
15. Use libsais_int(Nqs) to construct Saqs
16. Calculate the longest common prefixes from SAqs to get the LCPqs
17. Calculate ISAqs as the inverse permutation of SAqs
</preformat></boxed-text></sec><sec id="S11"><title>Reference alignment</title><p id="P20">After constructing the SA of queries, we efficiently match reference sequence suffixes to identify LMEMs. Graphite processes reference nodes similarly to queries, converting reverse complement nodes to a positive number by using the second last bit. We locate MEMs between references and queries using the ISA and LCP (<bold>Algorithm 2</bold>). To find reverse complement matches, we reverse the reference path, flip the second last bit of the nodes, and then apply <bold>Algorithm 2</bold> again. For each identified MEM, we compare it to previously found LMEMs and replace them if the new MEM is longer (<xref ref-type="fig" rid="F6">Figure 6</xref>). Since nodes in the compacted graph can represent sequences of varying lengths, we calculate MEM length by summing node lengths and removing their k-1 overlap. After iterating over all references, we obtain all LMEMs between queries and references.</p><boxed-text id="BX2" position="anchor" content-type="below"><caption><title>Algorithm 2. Aligning references to the SA to discover LMEMs</title></caption><preformat preformat-type="dialog">
1. Input: SAqs, LCPqs (see Algo 1), and a reference: r, and current LMEMs: LMEMs
2. Output: Updated LMEMs
3. Function <bold>AlignRef</bold>(r, LMEMs, SAqs, LCPqs, ISAqs)
4.  refStart = 1
5.  <bold>while</bold> refStart &lt;= length(r)
6.   suffix = r[refStart:end]
7.   point = binarySearch(suffix, SAqs) // Locate suffix in SA
8.   <bold>while</bold> refStart &lt;= length(r)
9.    suffix = r[refStart:end]
10.    matching_prefix = comparePrefix(suffix, SAqs, point)
11.    <bold>if</bold>!matching_prefix: <bold>break</bold>
12.    MEMs = scanSA(r, refStart, point, SAqs, LCPqs, ISAqs) //LCP skips (Figure S2)
13.    <bold>for</bold> MEM in MEMs
14.     LMEMs = updateLMEMs(LMEMs, MEM)
15.    point = ISAqs[SAqs[point] + 1] // ISA jump (Figure S2)
16.    refStart += 1
17.   refStart += 1
</preformat></boxed-text></sec><sec id="S12"><title>Graphite output generation</title><p id="P21">We generate a tab-separated file containing the query identifier, the reference identifier, the LMEM start position, the LMEM end position, and the original MEM size. As the original MEM might be trimmed, its size compared to the LMEM size provides insight into the extent of trimming (<xref ref-type="fig" rid="F6">Figure 6</xref>).</p></sec><sec id="S13"><title>Updating LMEMs and speed-up algorithm</title><p id="P22">In our algorithm description, we omitted details on optimizing LMEM updates. LMEM sizes for each query node are stored in LMEMsizes (<bold>Algorithm 3</bold>, line 16), while their associated reference identifiers are in LMEMorigins (line 17). For example, an LMEM with reference X for nodes [A, B, C] of 35 nucleotides (nts) each is stored as LMEMsizes = [35, 35, 35] and LMEMorigins = [X, X, X]. This enables efficient updates of the flank overlaps. When a new MEM, 50 nts, with reference Y overlaps with the last node C, at position j of the previous LMEM, we observe that LMEMsizes[j] &lt; length(MEM). Consequently, we update part of the LMEM, resulting in LMEMsizes = [35, 35, 50, 50, 50] and LMEMorigins = [X, X, Y, Y, Y]. However, for long matches, comparing many positions for each MEM becomes computationally expensive, especially when searching all suffixes. To address this we apply <bold>Algorithm 3</bold> where we only update LMEMs after checking for a longer or equally long LMEM.</p><boxed-text id="BX3" position="anchor" content-type="below"><caption><title>Algorithm 3. Updating LMEMs</title></caption><preformat preformat-type="dialog">
1. <bold>Input:</bold> LMEMs, new MEM
2. <bold>Output:</bold> Updated LMEMs
3. Function <bold>updateLMEMs</bold>(LMEMs, MEM)
4.  StartOri = LMEMs.origins[MEM.start]
5.  EndOri = LMEMs.origins[MEM.end]
6.  // A longer or equally long LMEM exists already
7.  if StartOri.id &gt; 0 &amp;&amp; StartOri.id == EndOri.id &amp;&amp; StartOri.start == EndOri.start
8.   <bold>break</bold>
9. else
10.   MEMnts = nodesToNucleotides(MEM.start, MEM.end)
11.
12.   // Update LMEMs if the new MEM is longer
13.   <bold>for</bold> i in MEMstart to MEMend
14.    if LMEMs.sizes[i] &lt; MEMnts
15.     LMEMs.sizes[i] = MEMnts
16.     LMEMs.origins[i] = {id = StartOri.id, start = MEM.start}
</preformat></boxed-text></sec><sec id="S14"><title>Graphite validation and application to existing datasets</title><p id="P23">We collected all complete <italic>Campylobacter</italic> genomes, excluding those shorter than 1.5MB, from BV-BRC<sup><xref ref-type="bibr" rid="R36">36</xref></sup> and built a MashTree<sup><xref ref-type="bibr" rid="R51">51</xref></sup> that was rooted on the ancestor of <italic>C. coli</italic> and <italic>C. jejuni</italic> and visualized with iTOL<sup><xref ref-type="bibr" rid="R52">52</xref></sup>. We re-annotated species when their BV-BRC annotation deviated from that of the majority in the monophyletic clade (see <xref ref-type="supplementary-material" rid="SD1">Table S1</xref>). To use Graphite, we built a ccDBG of all <italic>Campylobacter</italic> genomes with Cuttlefish <sup><xref ref-type="bibr" rid="R33">33</xref></sup> (k-mer size: 31) and saved storage space using reduced GFA (-f 3) output format.</p><p id="P24">LMEM selection by Graphite was validated on three <italic>C. jejuni</italic> genomes (CP071576.1, CP071584.1, CP071578.1) and compared to E-MEM results with match size 31 (-l -b). Correct LMEMs were determined by their maximum length among all MEMs covering a position (<xref ref-type="fig" rid="F1">Figure 1</xref>).</p><p id="P25">To evaluate Graphite’s performance, we compared it to E-MEM<sup><xref ref-type="bibr" rid="R25">25</xref></sup> and bf-MEM<sup><xref ref-type="bibr" rid="R26">26</xref></sup>. We queried <italic>C. coli</italic> genomes against all other <italic>Campylobacter</italic> genomes using all three tools. E-MEM used the same settings as earlier, while bf-MEM used a minimum match size of 33 (-l) and a k-mer size of 32 (-k). This choice was due to restrictions in bf-MEM, requiring k%4 == 0 and l &gt; k. The computer setup was consistent: Gold-6240R CPU, 500GB RAM, and HDD storage drive.</p><p id="P26">To demonstrate Graphite’s ability to efficiently detect DNA exchange, we applied it to all <italic>Campylobacter</italic> genomes, comparing each genome to the others, and highlighting striking examples of HGT. Directly visualizing the LMEM region can result in an explosion of paths and nodes obfuscating the actual shared region and context. To simplify, in <xref ref-type="fig" rid="F4">Figure 4</xref> we visualized LMEMs using parameters for example n = 0.9 and l = 1000, where N determines the minimum fraction of nodes overlapping the LMEM for inclusion, and L specifies the number of extending nodes on each side. See <underline><ext-link ext-link-type="uri" xlink:href="https://github.com/rickbeeloo/subgraphs">https://github.com/rickbeeloo/subgraphs</ext-link></underline> for the implementation. The simplified subgraph was then visualized using Bandage<sup><xref ref-type="bibr" rid="R53">53</xref></sup> and gene plots were created using DNA Features viewer<sup><xref ref-type="bibr" rid="R54">54</xref></sup></p></sec></sec><sec sec-type="supplementary-material" id="SM"><title>Supplementary Material</title><supplementary-material content-type="local-data" id="SD1"><label>Supplementary data/figures</label><media xlink:href="EMS189446-supplement-Supplementary_data_figures.pdf" mimetype="application" mime-subtype="pdf" id="d39aAdDbB" position="anchor"/></supplementary-material></sec></body><back><ack id="S15"><title>Acknowledgments</title><p>This research was supported by ZonMw under project number 541003001, the European Research Council (ERC) Consolidator grant 865694: DiversiPHI, the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under Germany’s Excellence Strategy – EXC 2051 – Project-ID 390713860, and the Alexander von Humboldt Foundation in the context of an Alexander von Humboldt-Professorship founded by German Federal Ministry of Education and Research. Special thanks to the members of the Theoretical Biology and Bioinformatics group at Utrecht University and the Viral Ecology &amp; Omics Group at Friedrich Schiller University Jena, as well as to Yasas Wijesekara from the University of Medicine, Greifswald, for valuable input to develop the algorithm.</p></ack><ref-list><ref id="R1"><label>1</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Albert</surname><given-names>PS</given-names></name><etal/></person-group><article-title>Whole-chromosome paints in maize reveal rearrangements, nuclear domains, and chromosomal relationships</article-title><source>Proc Natl Acad Sci USA</source><year>2019</year><volume>116</volume><fpage>1679</fpage><lpage>1685</lpage><pub-id pub-id-type="pmcid">PMC6358699</pub-id><pub-id pub-id-type="pmid">30655344</pub-id><pub-id pub-id-type="doi">10.1073/pnas.1813957116</pub-id></element-citation></ref><ref id="R2"><label>2</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Redondo-Salvo</surname><given-names>S</given-names></name><etal/></person-group><article-title>Pathways for horizontal gene transfer in bacteria revealed by a global map of their plasmids</article-title><source>Nat Commun</source><year>2020</year><volume>11</volume><elocation-id>3602</elocation-id><pub-id pub-id-type="pmcid">PMC7367871</pub-id><pub-id pub-id-type="pmid">32681114</pub-id><pub-id pub-id-type="doi">10.1038/s41467-020-17278-2</pub-id></element-citation></ref><ref id="R3"><label>3</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Weber</surname><given-names>RE</given-names></name><etal/></person-group><article-title>IS26-Mediated Transfer of blaNDM-1 as the Main Route of Resistance Transmission During a Polyclonal, Multispecies Outbreak in a German Hospital</article-title><source>Front Microbiol</source><year>2019</year><volume>10</volume><elocation-id>2817</elocation-id><pub-id pub-id-type="pmcid">PMC6929489</pub-id><pub-id pub-id-type="pmid">31921015</pub-id><pub-id pub-id-type="doi">10.3389/fmicb.2019.02817</pub-id></element-citation></ref><ref id="R4"><label>4</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Conlan</surname><given-names>S</given-names></name><etal/></person-group><article-title>Single-molecule sequencing to track plasmid diversity of hospital-associated carbapenemase-producing Enterobacteriaceae</article-title><source>Sci Transl Med</source><year>2014</year><volume>6</volume><elocation-id>254ra126</elocation-id><pub-id pub-id-type="pmcid">PMC4203314</pub-id><pub-id pub-id-type="pmid">25232178</pub-id><pub-id pub-id-type="doi">10.1126/scitranslmed.3009845</pub-id></element-citation></ref><ref id="R5"><label>5</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Oppegaard</surname><given-names>H</given-names></name><name><surname>Steinum</surname><given-names>TM</given-names></name><name><surname>Wasteson</surname><given-names>Y</given-names></name></person-group><article-title>Horizontal transfer of a multi-drug resistance plasmid between coliform bacteria of human and bovine origin in a farm environment</article-title><source>Appl Environ Microbiol</source><year>2001</year><volume>67</volume><fpage>3732</fpage><lpage>3734</lpage><pub-id pub-id-type="pmcid">PMC93080</pub-id><pub-id pub-id-type="pmid">11472956</pub-id><pub-id pub-id-type="doi">10.1128/AEM.67.8.3732-3734.2001</pub-id></element-citation></ref><ref id="R6"><label>6</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kamel Boulos</surname><given-names>MN</given-names></name><name><surname>Geraghty</surname><given-names>EM</given-names></name></person-group><article-title>Geographical tracking and mapping of coronavirus disease COVID-19/severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) epidemic and associated events around the world: how 21st century GIS technologies are supporting the global fight against outbreaks and epidemics</article-title><source>Int J Health Geogr</source><year>2020</year><volume>19</volume><fpage>8</fpage><pub-id pub-id-type="pmcid">PMC7065369</pub-id><pub-id pub-id-type="pmid">32160889</pub-id><pub-id pub-id-type="doi">10.1186/s12942-020-00202-8</pub-id></element-citation></ref><ref id="R7"><label>7</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hadfield</surname><given-names>J</given-names></name><etal/></person-group><article-title>Nextstrain: real-time tracking of pathogen evolution</article-title><source>Bioinformatics</source><year>2018</year><volume>34</volume><fpage>4121</fpage><lpage>4123</lpage><pub-id pub-id-type="pmcid">PMC6247931</pub-id><pub-id pub-id-type="pmid">29790939</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/bty407</pub-id></element-citation></ref><ref id="R8"><label>8</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Laas</surname><given-names>P</given-names></name><etal/></person-group><article-title>Bacterial communities in ballast tanks of cargo vessels - Shaped by salinity, treatment and the point of origin of the water but hatch its typical microbiome</article-title><source>J Environ Manage</source><year>2022</year><volume>324</volume><elocation-id>116403</elocation-id><pub-id pub-id-type="pmid">36352729</pub-id></element-citation></ref><ref id="R9"><label>9</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sridhar</surname><given-names>S</given-names></name><name><surname>Turbett</surname><given-names>SE</given-names></name><name><surname>Harris</surname><given-names>JB</given-names></name><name><surname>LaRocque</surname><given-names>RC</given-names></name></person-group><article-title>Antimicrobial-resistant bacteria in international travelers</article-title><source>Curr Opin Infect Dis</source><year>2021</year><volume>34</volume><fpage>423</fpage><lpage>431</lpage><pub-id pub-id-type="pmcid">PMC8452315</pub-id><pub-id pub-id-type="pmid">34267046</pub-id><pub-id pub-id-type="doi">10.1097/QCO.0000000000000751</pub-id></element-citation></ref><ref id="R10"><label>10</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lääveri</surname><given-names>T</given-names></name><etal/></person-group><article-title>Bacterial, viral and parasitic pathogens analysed by qPCR: Findings from a prospective study of travellers’ diarrhoea</article-title><source>Travel Med Infect Dis</source><year>2021</year><volume>40</volume><elocation-id>101957</elocation-id><pub-id pub-id-type="pmid">33359433</pub-id></element-citation></ref><ref id="R11"><label>11</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sheinman</surname><given-names>M</given-names></name><etal/></person-group><article-title>Identical sequences found in distant genomes reveal frequent horizontal transfer across the bacterial domain</article-title><source>eLife</source><year>2021</year><volume>10</volume><pub-id pub-id-type="pmcid">PMC8270642</pub-id><pub-id pub-id-type="pmid">34121661</pub-id><pub-id pub-id-type="doi">10.7554/eLife.62719</pub-id></element-citation></ref><ref id="R12"><label>12</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>van Dijk</surname><given-names>B</given-names></name><etal/></person-group><article-title>Identifying and tracking mobile elements in evolving compost communities yields insights into the nanobiome</article-title><source>BioRxiv</source><year>2023</year><pub-id pub-id-type="pmcid">PMC10462680</pub-id><pub-id pub-id-type="pmid">37640834</pub-id><pub-id pub-id-type="doi">10.1038/s43705-023-00294-w</pub-id></element-citation></ref><ref id="R13"><label>13</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Thomas</surname><given-names>CM</given-names></name><name><surname>Nielsen</surname><given-names>KM</given-names></name></person-group><article-title>Mechanisms of, and barriers to, horizontal gene transfer between bacteria</article-title><source>Nat Rev Microbiol</source><year>2005</year><volume>3</volume><fpage>711</fpage><lpage>721</lpage><pub-id pub-id-type="pmid">16138099</pub-id></element-citation></ref><ref id="R14"><label>14</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Arnold</surname><given-names>BJ</given-names></name><name><surname>Huang</surname><given-names>I-T</given-names></name><name><surname>Hanage</surname><given-names>WP</given-names></name></person-group><article-title>Horizontal gene transfer and adaptive evolution in bacteria</article-title><source>Nat Rev Microbiol</source><year>2022</year><volume>20</volume><fpage>206</fpage><lpage>218</lpage><pub-id pub-id-type="pmid">34773098</pub-id></element-citation></ref><ref id="R15"><label>15</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ried</surname><given-names>T</given-names></name><name><surname>Schröck</surname><given-names>E</given-names></name><name><surname>Ning</surname><given-names>Y</given-names></name><name><surname>Wienberg</surname><given-names>J</given-names></name></person-group><article-title>Chromosome painting: a useful art</article-title><source>Hum Mol Genet</source><year>1998</year><volume>7</volume><fpage>1619</fpage><lpage>1626</lpage><pub-id pub-id-type="pmid">9735383</pub-id></element-citation></ref><ref id="R16"><label>16</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hou</surname><given-names>L</given-names></name><etal/></person-group><article-title>Chromosome painting and its applications in cultivated and wild rice</article-title><source>BMC Plant Biol</source><year>2018</year><volume>18</volume><fpage>110</fpage><pub-id pub-id-type="pmcid">PMC5991451</pub-id><pub-id pub-id-type="pmid">29879904</pub-id><pub-id pub-id-type="doi">10.1186/s12870-018-1325-2</pub-id></element-citation></ref><ref id="R17"><label>17</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>G</given-names></name><etal/></person-group><article-title>An efficient Oligo-FISH painting system for revealing chromosome rearrangements and polyploidization in Triticeae</article-title><source>Plant J</source><year>2021</year><volume>105</volume><fpage>978</fpage><lpage>993</lpage><pub-id pub-id-type="pmid">33210785</pub-id></element-citation></ref><ref id="R18"><label>18</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Taga</surname><given-names>M</given-names></name><name><surname>Murata</surname><given-names>M</given-names></name></person-group><article-title>Visualization of mitotic chromosomes in filamentous fungi by fluorescence staining and fluorescence in situ hybridization</article-title><source>Chromosoma</source><year>1994</year><volume>103</volume><fpage>408</fpage><lpage>413</lpage><pub-id pub-id-type="pmid">7859561</pub-id></element-citation></ref><ref id="R19"><label>19</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lawson</surname><given-names>DJ</given-names></name><name><surname>Hellenthal</surname><given-names>G</given-names></name><name><surname>Myers</surname><given-names>S</given-names></name><name><surname>Falush</surname><given-names>D</given-names></name></person-group><article-title>Inference of population structure using dense haplotype data</article-title><source>PLoS Genet</source><year>2012</year><volume>8</volume><elocation-id>e1002453</elocation-id><pub-id pub-id-type="pmcid">PMC3266881</pub-id><pub-id pub-id-type="pmid">22291602</pub-id><pub-id pub-id-type="doi">10.1371/journal.pgen.1002453</pub-id></element-citation></ref><ref id="R20"><label>20</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yahara</surname><given-names>K</given-names></name><etal/></person-group><article-title>Chromosome painting in silico in a bacterial species reveals fine population structure</article-title><source>Mol Biol Evol</source><year>2013</year><volume>30</volume><fpage>1454</fpage><lpage>1464</lpage><pub-id pub-id-type="pmcid">PMC3649679</pub-id><pub-id pub-id-type="pmid">23505045</pub-id><pub-id pub-id-type="doi">10.1093/molbev/mst055</pub-id></element-citation></ref><ref id="R21"><label>21</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khan</surname><given-names>Z</given-names></name><name><surname>Bloom</surname><given-names>JS</given-names></name><name><surname>Kruglyak</surname><given-names>L</given-names></name><name><surname>Singh</surname><given-names>M</given-names></name></person-group><article-title>A practical algorithm for finding maximal exact matches in large sequence datasets using sparse suffix arrays</article-title><source>Bioinformatics</source><year>2009</year><volume>25</volume><fpage>1609</fpage><lpage>1616</lpage><pub-id pub-id-type="pmcid">PMC2732316</pub-id><pub-id pub-id-type="pmid">19389736</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btp275</pub-id></element-citation></ref><ref id="R22"><label>22</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Manber</surname><given-names>U</given-names></name><name><surname>Myers</surname><given-names>G</given-names></name></person-group><article-title>Suffix Arrays: A New Method for On-Line String Searches</article-title><source>SIAM J Comput</source><year>1993</year><volume>22</volume><fpage>935</fpage><lpage>948</lpage></element-citation></ref><ref id="R23"><label>23</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Marçais</surname><given-names>G</given-names></name><etal/></person-group><article-title>MUMmer4: A fast and versatile genome alignment system</article-title><source>PLoS Comput Biol</source><year>2018</year><volume>14</volume><elocation-id>e1005944</elocation-id><pub-id pub-id-type="pmcid">PMC5802927</pub-id><pub-id pub-id-type="pmid">29373581</pub-id><pub-id pub-id-type="doi">10.1371/journal.pcbi.1005944</pub-id></element-citation></ref><ref id="R24"><label>24</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Vyverman</surname><given-names>M</given-names></name><name><surname>De Baets</surname><given-names>B</given-names></name><name><surname>Fack</surname><given-names>V</given-names></name><name><surname>Dawyndt</surname><given-names>P</given-names></name></person-group><article-title>essaMEM: finding maximal exact matches using enhanced sparse suffix arrays</article-title><source>Bioinformatics</source><year>2013</year><volume>29</volume><fpage>802</fpage><lpage>804</lpage><pub-id pub-id-type="pmid">23349213</pub-id></element-citation></ref><ref id="R25"><label>25</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khiste</surname><given-names>N</given-names></name><name><surname>Ilie</surname><given-names>L</given-names></name></person-group><article-title>E-MEM: efficient computation of maximal exact matches for very large genomes</article-title><source>Bioinformatics</source><year>2015</year><volume>31</volume><fpage>509</fpage><lpage>514</lpage><pub-id pub-id-type="pmid">25399029</pub-id></element-citation></ref><ref id="R26"><label>26</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>Y</given-names></name><name><surname>Zhang</surname><given-names>LY</given-names></name><name><surname>Li</surname><given-names>J</given-names></name></person-group><article-title>Fast detection of maximal exact matches via fixed sampling of query K-mers and Bloom filtering of index K-mers</article-title><source>Bioinformatics</source><year>2019</year><volume>35</volume><fpage>4560</fpage><lpage>4567</lpage><pub-id pub-id-type="pmid">30994891</pub-id></element-citation></ref><ref id="R27"><label>27</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chikhi</surname><given-names>R</given-names></name><name><surname>Medvedev</surname><given-names>P</given-names></name></person-group><article-title>Informed and automated k-mer size selection for genome assembly</article-title><source>Bioinformatics</source><year>2014</year><volume>30</volume><fpage>31</fpage><lpage>37</lpage><pub-id pub-id-type="pmid">23732276</pub-id></element-citation></ref><ref id="R28"><label>28</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Luhmann</surname><given-names>N</given-names></name><name><surname>Holley</surname><given-names>G</given-names></name><name><surname>Achtman</surname><given-names>M</given-names></name></person-group><article-title>BlastFrost: fast querying of 100,000s of bacterial genomes in Bifrost graphs</article-title><source>Genome Biol</source><year>2021</year><volume>22</volume><fpage>30</fpage><pub-id pub-id-type="pmcid">PMC7798312</pub-id><pub-id pub-id-type="pmid">33430919</pub-id><pub-id pub-id-type="doi">10.1186/s13059-020-02237-3</pub-id></element-citation></ref><ref id="R29"><label>29</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hickey</surname><given-names>G</given-names></name><etal/></person-group><article-title>Genotyping structural variants in pangenome graphs using the vg toolkit</article-title><source>Genome Biol</source><year>2020</year><volume>21</volume><fpage>35</fpage><pub-id pub-id-type="pmcid">PMC7017486</pub-id><pub-id pub-id-type="pmid">32051000</pub-id><pub-id pub-id-type="doi">10.1186/s13059-020-1941-7</pub-id></element-citation></ref><ref id="R30"><label>30</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Alipanahi</surname><given-names>B</given-names></name><name><surname>Muggli</surname><given-names>MD</given-names></name><name><surname>Jundi</surname><given-names>M</given-names></name><name><surname>Noyes</surname><given-names>NR</given-names></name><name><surname>Boucher</surname><given-names>C</given-names></name></person-group><article-title>Metagenome SNP calling via read-colored de Bruijn graphs</article-title><source>cBioinformatics</source><year>2021</year><volume>36</volume><fpage>5275</fpage><lpage>5281</lpage><pub-id pub-id-type="pmcid">PMC8016496</pub-id><pub-id pub-id-type="pmid">32049324</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btaa081</pub-id></element-citation></ref><ref id="R31"><label>31</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Minkin</surname><given-names>I</given-names></name><name><surname>Medvedev</surname><given-names>P</given-names></name></person-group><article-title>Scalable Pairwise Whole-Genome Homology Mapping of Long Genomes with BubbZ</article-title><source>iScience</source><year>2020</year><volume>23</volume><elocation-id>101224</elocation-id><pub-id pub-id-type="pmcid">PMC7303978</pub-id><pub-id pub-id-type="pmid">32563153</pub-id><pub-id pub-id-type="doi">10.1016/j.isci.2020.101224</pub-id></element-citation></ref><ref id="R32"><label>32</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Roux de Bézieux</surname><given-names>H</given-names></name><etal/></person-group><article-title>CALDERA: finding all significant de Bruijn subgraphs for bacterial GWAS</article-title><source>Bioinformatics</source><year>2022</year><volume>38</volume><fpage>i36</fpage><lpage>i44</lpage><pub-id pub-id-type="pmcid">PMC9235473</pub-id><pub-id pub-id-type="pmid">35758804</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btac238</pub-id></element-citation></ref><ref id="R33"><label>33</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khan</surname><given-names>J</given-names></name><name><surname>Patro</surname><given-names>R</given-names></name></person-group><article-title>Cuttlefish: fast, parallel and low-memory compaction of de Bruijn graphs from large-scale genome collections</article-title><source>Bioinformatics</source><year>2021</year><volume>37</volume><fpage>i177</fpage><lpage>i186</lpage><pub-id pub-id-type="pmcid">PMC8275350</pub-id><pub-id pub-id-type="pmid">34252958</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btab309</pub-id></element-citation></ref><ref id="R34"><label>34</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>H</given-names></name></person-group><article-title>Minimap and miniasm: fast mapping and de novo assembly for noisy long sequences</article-title><source>Bioinformatics</source><year>2016</year><volume>32</volume><fpage>2103</fpage><lpage>2110</lpage><pub-id pub-id-type="pmcid">PMC4937194</pub-id><pub-id pub-id-type="pmid">27153593</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btw152</pub-id></element-citation></ref><ref id="R35"><label>35</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Costa</surname><given-names>D</given-names></name><etal/></person-group><article-title>Pangenome analysis reveals genetic isolation in Campylobacter hyointestinalis subspecies adapted to different mammalian hosts</article-title><source>Sci Rep</source><year>2021</year><volume>11</volume><elocation-id>3431</elocation-id><pub-id pub-id-type="pmcid">PMC7873201</pub-id><pub-id pub-id-type="pmid">33564053</pub-id><pub-id pub-id-type="doi">10.1038/s41598-021-82993-9</pub-id></element-citation></ref><ref id="R36"><label>36</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Olson</surname><given-names>RD</given-names></name><etal/></person-group><article-title>Introducing the Bacterial and Viral Bioinformatics Resource Center (BV-BRC): a resource combining PATRIC, IRD and ViPR</article-title><source>Nucleic Acids Res</source><year>2023</year><volume>51</volume><fpage>D678</fpage><lpage>D689</lpage><pub-id pub-id-type="pmcid">PMC9825582</pub-id><pub-id pub-id-type="pmid">36350631</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkac1003</pub-id></element-citation></ref><ref id="R37"><label>37</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Camargo</surname><given-names>AP</given-names></name><etal/></person-group><article-title>IMG/VR v4: an expanded database of uncultivated virus genomes within a framework of extensive functional, taxonomic, and ecological metadata</article-title><source>Nucleic Acids Res</source><year>2023</year><volume>51</volume><fpage>D733</fpage><lpage>D743</lpage><pub-id pub-id-type="pmcid">PMC9825611</pub-id><pub-id pub-id-type="pmid">36399502</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkac1037</pub-id></element-citation></ref><ref id="R38"><label>38</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhou</surname><given-names>F</given-names></name><etal/></person-group><article-title>CRISPRimmunity: an interactive web server for CRISPR-associated Important Molecular events and Modulators Used in geNome edIting Tool identifYing</article-title><source>Nucleic Acids Res</source><year>2023</year><volume>51</volume><fpage>W93</fpage><lpage>W107</lpage><pub-id pub-id-type="pmcid">PMC10320192</pub-id><pub-id pub-id-type="pmid">37216595</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkad425</pub-id></element-citation></ref><ref id="R39"><label>39</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>de Jonge</surname><given-names>PA</given-names></name><name><surname>Nobrega</surname><given-names>FL</given-names></name><name><surname>Brouns</surname><given-names>SJJ</given-names></name><name><surname>Dutilh</surname><given-names>BE</given-names></name></person-group><article-title>Molecular and evolutionary determinants of bacteriophage host range</article-title><source>Trends Microbiol</source><year>2019</year><volume>27</volume><fpage>51</fpage><lpage>63</lpage><pub-id pub-id-type="pmid">30181062</pub-id></element-citation></ref><ref id="R40"><label>40</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Golz</surname><given-names>JC</given-names></name><name><surname>Stingl</surname><given-names>K</given-names></name></person-group><article-title>Natural competence and horizontal gene transfer in Campylobacter</article-title><source>Curr Top Microbiol Immunol</source><year>2021</year><volume>431</volume><fpage>265</fpage><lpage>292</lpage><pub-id pub-id-type="pmid">33620655</pub-id></element-citation></ref><ref id="R41"><label>41</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Siguier</surname><given-names>P</given-names></name><name><surname>Perochon</surname><given-names>J</given-names></name><name><surname>Lestrade</surname><given-names>L</given-names></name><name><surname>Mahillon</surname><given-names>J</given-names></name><name><surname>Chandler</surname><given-names>M</given-names></name></person-group><article-title>ISfinder: the reference centre for bacterial insertion sequences</article-title><source>Nucleic Acids Res</source><year>2006</year><volume>34</volume><fpage>D32</fpage><lpage>6</lpage><pub-id pub-id-type="pmcid">PMC1347377</pub-id><pub-id pub-id-type="pmid">16381877</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkj014</pub-id></element-citation></ref><ref id="R42"><label>42</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sheppard</surname><given-names>SK</given-names></name><name><surname>McCarthy</surname><given-names>ND</given-names></name><name><surname>Jolley</surname><given-names>KA</given-names></name><name><surname>Maiden</surname><given-names>MCJ</given-names></name></person-group><article-title>Introgression in the genus Campylobacter: generation and spread of mosaic alleles</article-title><source>Microbiology (Reading, Engl)</source><year>2011</year><volume>157</volume><fpage>1066</fpage><lpage>1074</lpage><pub-id pub-id-type="pmcid">PMC3139442</pub-id><pub-id pub-id-type="pmid">21212120</pub-id><pub-id pub-id-type="doi">10.1099/mic.0.045153-0</pub-id></element-citation></ref><ref id="R43"><label>43</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>French</surname><given-names>NP</given-names></name><etal/></person-group><article-title>Genomic Analysis of Fluoroquinolone- and Tetracycline-Resistant Campylobacter jejuni Sequence Type 6964 in Humans and Poultry, New Zealand, 2014-2016</article-title><source>Emerging Infect Dis</source><year>2019</year><volume>25</volume><fpage>2226</fpage><lpage>2234</lpage><pub-id pub-id-type="pmcid">PMC6874264</pub-id><pub-id pub-id-type="pmid">31742539</pub-id><pub-id pub-id-type="doi">10.3201/eid2512.190267</pub-id></element-citation></ref><ref id="R44"><label>44</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mourkas</surname><given-names>E</given-names></name><etal/></person-group><article-title>Host ecology regulates interspecies recombination in bacteria of the genus Campylobacter</article-title><source>eLife</source><year>2022</year><volume>11</volume><pub-id pub-id-type="pmcid">PMC8912921</pub-id><pub-id pub-id-type="pmid">35191377</pub-id><pub-id pub-id-type="doi">10.7554/eLife.73552</pub-id></element-citation></ref><ref id="R45"><label>45</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tang</surname><given-names>Y</given-names></name><etal/></person-group><article-title>Novel insertion sequence ISChh1-like mediating acquisition of optrA gene in foodborne pathogen Campylobacter coli of swine origin</article-title><source>Vet Microbiol</source><year>2020</year><volume>252</volume><elocation-id>108934</elocation-id><pub-id pub-id-type="pmid">33249367</pub-id></element-citation></ref><ref id="R46"><label>46</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tang</surname><given-names>Y</given-names></name><etal/></person-group><article-title>Genetic environments and related transposable elements of novel cfr(C) variants in Campylobacter coli isolates of swine origin</article-title><source>Vet Microbiol</source><year>2020</year><volume>247</volume><elocation-id>108792</elocation-id><pub-id pub-id-type="pmid">32768235</pub-id></element-citation></ref><ref id="R47"><label>47</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Velayudhan</surname><given-names>J</given-names></name><name><surname>Kelly</surname><given-names>DJ</given-names></name></person-group><article-title>Analysis of gluconeogenic and anaplerotic enzymes in Campylobacter jejuni: an essential role for phosphoenolpyruvate carboxykinase</article-title><source>Microbiology (Reading, Engl)</source><year>2002</year><volume>148</volume><fpage>685</fpage><lpage>694</lpage><pub-id pub-id-type="pmid">11882702</pub-id></element-citation></ref><ref id="R48"><label>48</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Iqbal</surname><given-names>Z</given-names></name><name><surname>Caccamo</surname><given-names>M</given-names></name><name><surname>Turner</surname><given-names>I</given-names></name><name><surname>Flicek</surname><given-names>P</given-names></name><name><surname>McVean</surname><given-names>G</given-names></name></person-group><article-title>De novo assembly and genotyping of variants using colored de Bruijn graphs</article-title><source>Nat Genet</source><year>2012</year><volume>44</volume><fpage>226</fpage><lpage>232</lpage><pub-id pub-id-type="pmcid">PMC3272472</pub-id><pub-id pub-id-type="pmid">22231483</pub-id><pub-id pub-id-type="doi">10.1038/ng.1028</pub-id></element-citation></ref><ref id="R49"><label>49</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shrestha</surname><given-names>AMS</given-names></name><name><surname>Frith</surname><given-names>MC</given-names></name><name><surname>Horton</surname><given-names>P</given-names></name></person-group><article-title>A bioinformatician’s guide to the forefront of suffix array construction algorithms</article-title><source>Brief Bioinformatics</source><year>2014</year><volume>15</volume><fpage>138</fpage><lpage>154</lpage><pub-id pub-id-type="pmcid">PMC3956071</pub-id><pub-id pub-id-type="pmid">24413184</pub-id><pub-id pub-id-type="doi">10.1093/bib/bbt081</pub-id></element-citation></ref><ref id="R50"><label>50</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Nong</surname><given-names>G</given-names></name><name><surname>Zhang</surname><given-names>S</given-names></name><name><surname>Chan</surname><given-names>WH</given-names></name></person-group><source>Linear Suffix Array Construction by Almost Pure Induced-Sorting</source><conf-name>2009 Data Compression Conference</conf-name><conf-sponsor>IEEE</conf-sponsor><year>2009</year><fpage>193</fpage><lpage>202</lpage><pub-id pub-id-type="doi">10.1109/DCC.2009.42</pub-id></element-citation></ref><ref id="R51"><label>51</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Katz</surname><given-names>LS</given-names></name><etal/></person-group><article-title>Mashtree: a rapid comparison of whole genome sequence files</article-title><source>J Open Source Softw</source><year>2019</year><volume>4</volume><pub-id pub-id-type="pmcid">PMC9380445</pub-id><pub-id pub-id-type="pmid">35978566</pub-id><pub-id pub-id-type="doi">10.21105/joss.01762</pub-id></element-citation></ref><ref id="R52"><label>52</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Letunic</surname><given-names>I</given-names></name><name><surname>Bork</surname><given-names>P</given-names></name></person-group><article-title>Interactive Tree Of Life (iTOL) v5: an online tool for phylogenetic tree display and annotation</article-title><source>Nucleic Acids Res</source><year>2021</year><volume>49</volume><fpage>W293</fpage><lpage>W296</lpage><pub-id pub-id-type="pmcid">PMC8265157</pub-id><pub-id pub-id-type="pmid">33885785</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkab301</pub-id></element-citation></ref><ref id="R53"><label>53</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wick</surname><given-names>RR</given-names></name><name><surname>Schultz</surname><given-names>MB</given-names></name><name><surname>Zobel</surname><given-names>J</given-names></name><name><surname>Holt</surname><given-names>KE</given-names></name></person-group><article-title>Bandage: interactive visualization of de novo genome assemblies</article-title><source>Bioinformatics</source><year>2015</year><volume>31</volume><fpage>3350</fpage><lpage>3352</lpage><pub-id pub-id-type="pmcid">PMC4595904</pub-id><pub-id pub-id-type="pmid">26099265</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btv383</pub-id></element-citation></ref><ref id="R54"><label>54</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zulkower</surname><given-names>V</given-names></name><name><surname>Rosser</surname><given-names>S</given-names></name></person-group><article-title>DNA Features Viewer: a sequence annotation formatting and plotting library for Python</article-title><source>Bioinformatics</source><year>2020</year><volume>36</volume><fpage>4350</fpage><lpage>4352</lpage><pub-id pub-id-type="pmid">32637988</pub-id></element-citation></ref><ref id="R55"><label>55</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Terzian</surname><given-names>P</given-names></name><etal/></person-group><article-title>PHROG: families of prokaryotic virus proteins clustered using remote homology</article-title><source>NAR Genom Bioinform</source><year>2021</year><volume>3</volume><elocation-id>lqab067</elocation-id><pub-id pub-id-type="pmcid">PMC8341000</pub-id><pub-id pub-id-type="pmid">34377978</pub-id><pub-id pub-id-type="doi">10.1093/nargab/lqab067</pub-id></element-citation></ref></ref-list></back><floats-group><fig id="F1" position="float"><label>Figure 1</label><caption><title>Longest maximum exact match (LMEM) selection.</title><p>(A) In a compacted graph, the variation in the overall sequence set determines the sequence fragmentation and node size. <bold>a.1</bold> shows a toy graph of three sequences Q1, R1, and R2 that overlap in four nodes i-iv (see <xref ref-type="supplementary-material" rid="SD1">Figure S1</xref> for further details). The k-1 overlap between nodes as seen in ccDBGs is not shown for simplicity. The sequence strands are indicated with arrows, the forward and reverse sequences are shown in the nodes. While Q1 and R2 share a MEM of 8nt (<bold>a.2</bold>) consisting of nodes i-ii, it does not show up as a single node since another sequence, R1 contains a subsequence of this MEM (node ii, <bold>a.1</bold>). Similarly, Q1 and R1 share a MEM of 9nt (<bold>a.3</bold>) consisting of nodes ii-iii. <bold>a.4</bold> shows how two LMEMs are resolved for this example. Each node is assigned to the longest MEM it is part of. Node ii is part of two MEMs and gets merged with node iii into LMEM 2 (9nt) which is 1 nucleotide longer than MEM 1 (8nt). As the remaining node i is only covered by MEM 1, it is assigned to LMEM 1, and the query sequence is painted accordingly (<bold>a.4</bold>). (<bold>b</bold>) To validate Graphite on real data we aligned <italic>C. jejuni</italic> CP071576 against CP071584 and CP085965 using E-MEM and Graphite. The majority of Graphite LMEMs originated from CP071584 (gray). (C) Close-up example of LMEM selection. First, MEM I is selected from CP071584 as it is longer than the multiple overlapping CP085965 MEMs. A part of MEM V is selected as the next LMEM, as V is longer than II. Likewise, a part of MEM III is selected over MEM VI before Graphite’s LMEMs continue into VII.</p></caption><graphic xlink:href="EMS189446-f001"/></fig><fig id="F2" position="float"><label>Figure 2</label><caption><title>Relation between the size of nodes and the number of genomes and species they occur in.</title><p>Short nodes may occur in many genomes and species, while long nodes over 120nt rarely occur in more than 100 genomes.</p></caption><graphic xlink:href="EMS189446-f002"/></fig><fig id="F3" position="float"><label>Figure 3</label><caption><title>LMEM painting of 576 Campylobacter genomes.</title><p>On the left is the Masthree clustering (<xref ref-type="supplementary-material" rid="SD1">Figure S3</xref>). To the right, each row represents a query genome along a colored line representing the species it belongs to. Based on the LMEMs, the genomes are painted above the line, colored according to the matched species, or gray when the LMEM was found in the same species. For example, <italic>C. coli</italic> LMEMs matching <italic>C. jejuni</italic> are black in the <italic>C. coli</italic> clade, while <italic>C. jejuni</italic> LMEMs matching <italic>C. coli</italic> are pink in the <italic>C. jejuni</italic> clade.</p></caption><graphic xlink:href="EMS189446-f003"/></fig><fig id="F4" position="float"><label>Figure 4</label><caption><title>Example subgraphs of two LMEMs.</title><p>(<bold>a</bold>) A 16,417 nt LMEM between a <italic>C. coli</italic> plasmid (CP013035, positions 23,541-39,957) and <italic>C. jejuni</italic> chromosome (CP107256:1,208,016-1,224,432). The parameter c specifies the fraction of LMEM nodes that a path has to traverse in order to be included in the subgraph visualization and n reflects the number of flanking nodes to display (see <xref ref-type="sec" rid="S9">online methods</xref>). The left panel in A shows the subgraph of the LMEM (n=1.0) with two genomes, 11,045 nodes, and 11,057 edges. The right panel shows a relaxed subgraph of the LMEM with paths sharing ≥90% (n=0.9) of the LMEM nodes. This relaxed subgraph contained 23,051 nodes and 23,665 edges, with paths from 18 genomes. In the left panel we zoom in on the bubbles that prevent further LMEM extension and for example, see that <italic>C. coli</italic> had aminoglycoside resistance gene (APH(3’)) flanking the LMEM which was absent in <italic>C. jejuni</italic> at this position. The gray-colored genes were annotated as hypothetical by BV-BRC and the light-colored genes encoded VirB proteins but their annotations were omitted for clearer visualization. (<bold>b</bold>) A subgraph with 4,103 nodes and 4,102 edges for a 2068nt LMEM encoding a transposon was found in two genomes from <italic>C. jejuni</italic> (CP047082: 58,822-60,889) and <italic>C. hyointestinalis subsp. hyointestinalis</italic> (CP015575: 1,258,714-1,260,781) abbreviated as <italic>C. hyo</italic>.. For the latter species, the transposon disrupted the <italic>pycB</italic> gene encoding a pyruvate carboxylase according to the NCBI annotation (light green). When we slightly relaxed the subgraph threshold to n=0.9 we obtained a subgraph with 20,255 nodes and 20,270 edges, with paths from 20 genomes. The extensive branching of paths outside the LMEM indicates the diverse genomic context of this transposon in different <italic>C. jejuni</italic> and <italic>C. hyointestinalis subsp. hyointestinalis</italic> genomes.</p></caption><graphic xlink:href="EMS189446-f004"/></fig><fig id="F5" position="float"><label>Figure 5</label><caption><title>Node bit flipping.</title><p>Node identifiers in the ccDBG can be either positive or negative, indicating traversal direction. To standardize them as positive, we use the second-to-last bit. For example, node “100” can be traversed forward (100) or in reverse complement (-100). To make -100 positive we can first make it positive and flip the second last bit (0 → 1), compare 100 versus 100(flip)). While 100(flip) binaries code now represents a different number (1073741924) we can derive the original (100) by flipping back the second last bit. This becomes useful when aligning forward and reverse complement matches as the forward and reverse traversal now have the same binary code, except for that second last bit.</p></caption><graphic xlink:href="EMS189446-f005"/></fig><fig id="F6" position="float"><label>Figure 6</label><caption><title>LMEM replacement criteria.</title><p>Upon discovering a new MEM, we compare its length to the previous LMEM candidates covering the same sites. Three columns indicate different possibilities. If the new MEM is longer or if there is no previous LMEM at those sites, it replaces the current LMEM (engufled). When the MEM and LMEM have overlapping regions, the overlapping region gets assigned to the longest of the two (flank overlap). If a MEM matches the LMEM’s length precisely, we retain the initially found LMEM (identical).</p></caption><graphic xlink:href="EMS189446-f006"/></fig><table-wrap id="T1" position="float" orientation="portrait"><label>Table 1</label><caption><title>Performance comparison of graphite and two MEM finding algorithms when querying 86 <italic>C. coli</italic> versus 490 other <italic>Campylobacter</italic> genomes using Graphite and two MEM finding algorithms.</title></caption><table frame="box" rules="groups"><thead><tr><th valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">Method</th><th valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">Result</th><th valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">Runtime (h:m:s)</th><th valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">Max. memory (GB)</th><th valign="middle" align="left" style="border:solid 1px #000000">Threads</th></tr></thead><tbody><tr><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">Graphite</td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">3,245,161 LMEMs ≥31nt</td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000"><bold>00:07:50</bold><sup><xref ref-type="table-fn" rid="TFN1">*</xref></sup></td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000"><bold>2.72</bold></td><td valign="middle" align="left" style="border:solid 1px #000000">1</td></tr><tr><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">Bf-MEM</td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">72,725,851 MEMs ≥33nt<sup><xref ref-type="table-fn" rid="TFN2">**</xref></sup></td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">1:02:00</td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">14.68</td><td valign="middle" align="left" style="border:solid 1px #000000">1</td></tr><tr><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">Bf-MEM</td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">72,725,851 MEMs ≥33nt<sup><xref ref-type="table-fn" rid="TFN2">**</xref></sup></td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">00:40:40</td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">14.63</td><td valign="middle" align="left" style="border:solid 1px #000000">20</td></tr><tr><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">E-MEM</td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">168,660,293 MEMs ≥31nt</td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">08:31:80</td><td valign="middle" align="left" style="border-top:solid 1px #000000;border-left:solid 1px #000000">11.28</td><td valign="middle" align="left" style="border:solid 1px #000000">1</td></tr><tr><td valign="middle" align="left" style="border:solid 1px #000000">E-MEM</td><td valign="middle" align="left" style="border:solid 1px #000000">168,660,293 MEMs ≥31nt</td><td valign="middle" align="left" style="border:solid 1px #000000">00:23:47</td><td valign="middle" align="left" style="border:solid 1px #000000">11.28</td><td valign="middle" align="left" style="border:solid 1px #000000">20</td></tr></tbody></table><table-wrap-foot><fn id="TFN1"><label>*</label><p id="P27">Includes ccDBG construction of 1 minute and 27 seconds on 20 threads.</p></fn><fn id="TFN2"><label>**</label><p id="P28">bf-MEM only supports k-mers of k%4==0 and the minimum match length should be greater than k. The number closest to 31 divisible by 4 is 32, so the minimum MEM length is 33.</p></fn></table-wrap-foot></table-wrap></floats-group></article>