<!DOCTYPE article
 PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2 20190208//EN" "JATS-archivearticle1.dtd">
<article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="preprint"><?all-math-mml yes?><?use-mml?><?origin ukpmcpa?><front><journal-meta><journal-id journal-id-type="nlm-ta">bioRxiv</journal-id><journal-title-group><journal-title>bioRxiv : the preprint server for biology</journal-title></journal-title-group><issn pub-type="epub">2692-8205</issn></journal-meta><article-meta><article-id pub-id-type="manuscript">EMS207388</article-id><article-id pub-id-type="doi">10.1101/2025.07.16.664196</article-id><article-id pub-id-type="archive">PPR1052264</article-id><article-version-alternatives><article-version article-version-type="status">preprint</article-version><article-version article-version-type="number">1</article-version></article-version-alternatives><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>A Thermodynamically Favoured Molecular Computer: Robust, Fast, Renewable, Scalable</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes" equal-contrib="yes"><name><surname>Stérin</surname><given-names>Tristan</given-names></name><xref ref-type="aff" rid="A1">*</xref><xref ref-type="aff" rid="A3">†</xref></contrib><contrib contrib-type="author" corresp="yes" equal-contrib="yes"><name><surname>Eshra</surname><given-names>Abeer</given-names></name><xref ref-type="aff" rid="A1">*</xref></contrib><contrib contrib-type="author"><name><surname>Adio</surname><given-names>Janet</given-names></name><xref ref-type="aff" rid="A1">*</xref><xref ref-type="aff" rid="A2">§</xref></contrib><contrib contrib-type="author"><name><surname>Evans</surname><given-names>Constantine Glen</given-names></name><xref ref-type="aff" rid="A1">*</xref><xref ref-type="aff" rid="A4">‖</xref></contrib><contrib contrib-type="author" corresp="yes"><name><surname>Woods</surname><given-names>Damien</given-names></name><xref ref-type="aff" rid="A1">*</xref></contrib></contrib-group><aff id="A1"><label>*</label>Hamilton Institute and Department of Computer Science,</aff><aff id="A2"><label>§</label>Department of Biology, <institution-wrap><institution-id institution-id-type="ror">https://ror.org/048nfjm95</institution-id><institution>Maynooth University</institution></institution-wrap>, <city>Co. Kildare</city>, <country country="IE">Ireland</country></aff><aff id="A3"><label>†</label>prgm.dev, 9 rue des colonnes, Paris, France</aff><aff id="A4"><label>‖</label>Evans Foundation for Molecular Medicine, Pasadena, CA, USA</aff><author-notes><corresp id="CR1">Corresponding authors. Correspondence should be addressed to: <email>tristan@prgm.dev</email>, <email>abeer.eshra@mu.ie</email>, and <email>damien.woods@mu.ie</email>.</corresp></author-notes><pub-date pub-type="nihms-submitted"><day>22</day><month>07</month><year>2025</year></pub-date><pub-date pub-type="preprint"><day>18</day><month>07</month><year>2025</year></pub-date><permissions><ali:free_to_read/><license><ali:license_ref>https://creativecommons.org/licenses/by-nc-nd/4.0/</ali:license_ref><license-p>This work is licensed under a <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc-nd/4.0/">CC BY-NC-ND 4.0 International license</ext-link>.</license-p></license></permissions><abstract><p id="P1">Like life, computers are out-of-equilibrium.<sup><xref ref-type="bibr" rid="R1">1</xref>,<xref ref-type="bibr" rid="R2">2</xref></sup> Thermodynamically favoured error states are thwarted by energetically-costly processes such as kinetic proofreading of biological polymers, error-correcting codes in computer data storage, and redundancy in molecular programming. Decades of theoretical work shows that unlike life thermodynamic computers can operate by drifting naturally to equilibrium.<sup><xref ref-type="bibr" rid="R3">3</xref>,<xref ref-type="bibr" rid="R4">4</xref></sup> Similar ideas underlie machine learning models<sup><xref ref-type="bibr" rid="R5">5</xref></sup> and search algorithms such as simulated annealing,<sup><xref ref-type="bibr" rid="R6">6</xref></sup> although executed on non-equilibrium architectures at enormous energy cost.<sup><xref ref-type="bibr" rid="R7">7</xref></sup> Physically implementing thermodynamically favoured computation is a decades-long challenge that could reduce dependence on fuel-consuming error-correction and precise kinetic control. Here, we demonstrate a thermodynamically favoured Scaffolded DNA Computer (SDC) on ten programs including <sc>MULTIPLICATION</sc>-by-3, D<sc>IVISION</sc>-by-2, 8-bit P<sc>ARITY</sc>-detection, and A<sc>DDITION</sc> of up to 25-bit numbers. SDC algorithms have simple experimental protocols, can be reused dozens of times and small instances run in under a minute. The SDC is grounded in mathematical, physical and computer science principles that explain why the output is thermodynamically favoured, why no error-correction nor precise step-by-step kinetic control are required and how it is programmable and scalable. This work creates a new way to think about equilibrium computation in all manner of synthetic systems.</p></abstract></article-meta></front><body><p id="P2">Like living systems that consume fuel to stave off thermodynamic heat death, computers are typically out-of-equilibrium, consuming energy to enforce data integrity. The massive gap between theoretical energy lower bounds,<sup><xref ref-type="bibr" rid="R1">1</xref>,<xref ref-type="bibr" rid="R2">2</xref>,<xref ref-type="bibr" rid="R4">4</xref>,<xref ref-type="bibr" rid="R8">8</xref></sup> and what modern computing systems consume,<sup><xref ref-type="bibr" rid="R9">9</xref></sup> leaves significant space to rethink computing infrastructure and algorithms.<sup><xref ref-type="bibr" rid="R4">4</xref>,<xref ref-type="bibr" rid="R10">10</xref>,<xref ref-type="bibr" rid="R11">11</xref></sup> To reduce this gap a perhaps counter-intuitive avenue is to design a programmable physical system whose equilibrium encodes the output of an algorithm, then allow the computer to simply drift to the right answer (<xref ref-type="fig" rid="F1">Fig. 1</xref>, <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S1</xref>). This notion has been presented in various forms<sup><xref ref-type="bibr" rid="R1">1</xref>,<xref ref-type="bibr" rid="R3">3</xref>,<xref ref-type="bibr" rid="R4">4</xref>,<xref ref-type="bibr" rid="R11">11</xref></sup> and stands in stark contrast to popular computing methods, so why is it not widely adopted?</p><p id="P3">The first challenge is finding a physical implementation that is computationally expressive yet suited to energy-landscape engineering and analysis. The second challenge is thermodynamic: the input state should be easy to prepare and the output state should be highly favoured, meanin the design avoids equilibria polluted by multiple off-target states. The final challenge is speed: the system needs reasonably good kinetics, evolving along a smooth energy landscape.</p><p id="P4">Using DNA<sup><xref ref-type="bibr" rid="R12">12</xref></sup> researchers have built self-assembling 6-bit programs,<sup><xref ref-type="bibr" rid="R13">13</xref></sup> pattern recognisers,<sup><xref ref-type="bibr" rid="R14">14</xref></sup> information-based self-replicators,<sup><xref ref-type="bibr" rid="R15">15</xref></sup> 4-bit square root calculators,<sup><xref ref-type="bibr" rid="R16">16</xref></sup> timers in cell culture,<sup><xref ref-type="bibr" rid="R17">17</xref></sup> analog dynamical systems,<sup><xref ref-type="bibr" rid="R18">18</xref>,<xref ref-type="bibr" rid="R19">19</xref></sup> Boolean circuits and surface-running walkers,<sup><xref ref-type="bibr" rid="R20">20</xref>–<xref ref-type="bibr" rid="R23">23</xref></sup> and DNA data storage.<sup><xref ref-type="bibr" rid="R24">24</xref></sup> Despite being among the most impressive molecular computers to date, there remain numerous difficulties due to the prevailing use of out-of-equilibrium architectures: logical errors and unintended nucleation for algorithmic self-assembly, signal leak to error states for strand displacement systems, tedious manual preparation and sensitivity to experimental conditions, and most are discarded as waste after one run (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S2</xref>).</p><p id="P5">However, there has been progress. One theory-driven approach shows how to encode computations in intentionally simplified chemical equilibria.<sup><xref ref-type="bibr" rid="R3">3</xref>,<xref ref-type="bibr" rid="R25">25</xref></sup> Also, small equilibrium Boolean circuits were demonstrated using weak molecular affinities.<sup><xref ref-type="bibr" rid="R26">26</xref></sup> Thermodynamic penalties to logical errors in DNA circuits were proposed.<sup><xref ref-type="bibr" rid="R27">27</xref></sup> DNA Origami<sup><xref ref-type="bibr" rid="R28">28</xref></sup> provides inspiration by exploiting a beautiful scaffolded principle to create complex be-spoke nanostructures<sup><xref ref-type="bibr" rid="R29">29</xref></sup> with a huge thermodynamic drive, but lacking any notion of computation (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S2</xref>).</p><p id="P6">To address the first challenge, we propose and experimentally demonstrate a thermodynamically favoured, programmable, Scaffolded DNA Computer (SDC). The SDC has thermodynamic costs but unlike typical forms of computation, avoids needing extra error-correction subsystems by naturally evolving to the desired output state at equilibrium (<xref ref-type="fig" rid="F1">Fig. 1b</xref>). Our approach to the second challenge is principled: mathematically, in simulation, and by molecular design, we show that the SDC output state is highly-favoured, outcompeting exponentially many other configurations in theory (but also verified experimentally). Finally, the SDC design has highly-parallel kinetics, with multiple potential pathways to the output, a novel thermodynamic form of molecular computing that, provides a well-structured and traversable energy landscape, but without tightly controling kinetics. By rethinking computation to be thermodynamically favoured, we get a conceptually simple system that is programmable, robust to errors, fast, and reusable.</p><sec id="S1"><title>Thermodynamic computing design principles</title><p id="P7">An <italic>N</italic>-position <italic>ℓ</italic>-bit SDC has a one-dimensional scaffold with <italic>N</italic> unique binding domains called <italic>scaffold positions</italic> (<xref ref-type="fig" rid="F2">Fig. 2a</xref>). A set of <italic>computing tiles</italic> is assigned to each scaffold position. No special out-of-equilibrium input state preparation is required. During a computation, computing tiles <italic>bind</italic> by their bottom <italic>position domain</italic> to a matching scaffold position. Information is processed by the binding of adjacent color-matching tile sides, or <italic>compute domains</italic>. Mismatching adjacent compute domains are permitted, but are an <italic>algorithmic error</italic>, implying an energetic cost that will be resolved by the future <italic>replacement</italic> of one or both tiles (<xref ref-type="fig" rid="F2">Fig. 2b</xref>).</p><p id="P8">For programming and algorithmic information processing, tiles encode ≤ <italic>ℓ</italic> bits per compute domain. Setting <italic>ℓ</italic> = 3 gives 2<sup>3</sup> <italic>×</italic> 2<sup>3</sup> = 64 possible computing tiles per scaffold position. SDC programming means selecting a subset of competing tiles per scaffold position that determine the left-to-right instructions computed per position. A typical <italic>deterministic</italic> computation has a single <italic>anchor tile</italic> at position <italic>A</italic>, multiple competing tiles at other positions but only one is correct per position. The molecular process of choosing the correct tile per position executes the computation.</p><p id="P9">A sequence of colour-matching tiles bound to the scaffold is a valid computation, or <italic>target configuration</italic>. <xref ref-type="fig" rid="F2">Fig. 2g</xref> shows an example P<sc>ARITY</sc> program that computes whether the number of <monospace>1</monospace>s in an 8-bit input is odd or even. There are 2<sup>8</sup> = 256 possible input strings each corresponding to a different subset of 7 tiles. Each of four compute domains encodes two input bits, and a variable parity bit computed by correct attachments. In general, a target configuration either outputs a single bit at the last position (e.g. P<sc>ARITY</sc>), or an <italic>N</italic>-bit output along the entire sequence of tiles (e.g. A<sc>DDITION</sc>, below). <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S4</xref> expands on SDC computational theory, in particular <xref ref-type="supplementary-material" rid="SD1">S4.2 and S4.4</xref> argue why mixing input and program bits on the same domain is computationally reasonable.</p><p id="P10"><xref ref-type="fig" rid="F2">Fig. 2b</xref> shows three key principles yielding the target configuration (output) being energetically favourable: (1) Inspired by DNA Origami,<sup><xref ref-type="bibr" rid="R28">28</xref></sup> computing tiles are at concentration excess (typically 10<italic>×</italic>) over scaffold, to ensure every scaffold position gets a tile. (2) Correct compute domain bindings are enthalpically favoured over algorithmic errors. (3) Compute domain duplex binding strength is weaker than scaffold position domain. Custom<sup><xref ref-type="bibr" rid="R30">30</xref></sup> minimum free energy (MFE) and partition function algorithms show the target having arbitrarily high probability over all other scaffolded configurations (<xref ref-type="fig" rid="F2">Fig. 2f</xref>, <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S3.5.1</xref>), using energetics estimated from our designed DNA sequences. Mathematically, the system scales well: compute domain strengths need only be logarithmic in <italic>N</italic> (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S3.5.2</xref>). The SDC model meets the abstract goal in <xref ref-type="fig" rid="F1">Fig. 1b</xref>.</p><p id="P11">At the more concrete strand-level of abstraction, the <italic>scaffold strand</italic> has <italic>N</italic> +1 position domains (extra domain for reporting), and each <italic>compute strand</italic> has two 12-base compute domains flanking a 24-base position domain (<xref ref-type="fig" rid="F2">Fig. 2d</xref>). <xref ref-type="fig" rid="F2">Fig. 2e</xref> shows the tile <italic>bind</italic> operation as hybridisation of the compute strand to a scaffold position and any adjacent matching compute domains. In <xref ref-type="fig" rid="F2">Fig. 2e</xref>, we intentionally leave DNA base-level kinetic details of <italic>replace</italic> unspecified: it can be <italic>any</italic> pathway that swaps scaffold-binding strands. We expect there to be many plausible, temperature-dependent, pathways.</p><p id="P12">Under bind/replace kinetics the expected computation time is upper-bounded by <italic>O</italic>(<italic>N</italic> <sup>2</sup>), the time for the leftmost compute domain mismatch (error) to disappear by a random walk to scaffold position <italic>N</italic> assuming a single anchor tile (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S3.3</xref>). However, although we defined one reasonable kinetic model, we intentionally do not experimentally enforce any particular kinetics, a <italic>laissez-faire</italic> approach that stands in contrast to DNA computing using toehold-mediated strand displacement where precise domain-level or even base-leve kinetic pathways are engineered.<sup><xref ref-type="bibr" rid="R16">16</xref>,<xref ref-type="bibr" rid="R31">31</xref></sup> We hypothesised that the combination of thermodynamic favourability and multiple plausible kinetic pathways would enable a straightforward temperature anneal to overcome kinetic traps, unlike previous carefully optimised systems that use temperature holds.<sup><xref ref-type="bibr" rid="R13">13</xref>–<xref ref-type="bibr" rid="R16">16</xref>,<xref ref-type="bibr" rid="R18">18</xref>,<xref ref-type="bibr" rid="R20">20</xref>,<xref ref-type="bibr" rid="R21">21</xref>,<xref ref-type="bibr" rid="R23">23</xref>,<xref ref-type="bibr" rid="R24">24</xref>,<xref ref-type="bibr" rid="R32">32</xref></sup></p><p id="P13">To avoid unintended hairpin formation within compute strands, each 3-bit sequence has two distinct compute domains (e.g. <monospace>000</monospace> and <inline-formula><mml:math id="M1"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mn>000</mml:mn></mml:mrow><mml:mo stretchy="true">¯</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>, see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S5.1</xref>), giving 2 <italic>×</italic> 2<sup>3</sup> = 16 distinct compute domains for <italic>ℓ</italic> = 3. A quenched-fluorescence reporting mechanism, operating at any scaffold position was designed. By convention, quenched (low) signals report output bit <monospace>0</monospace> and unquenched (high) signals bit <monospace>1</monospace>. Fluorescence- and quencher-labelled strands are 20 bases long.</p><p id="P14"><italic>N</italic> = 4 scaffold positions, and <italic>ℓ</italic> = 3 bits per compute domain implies 201 computing strands: one 120-base scaffold (named scaff-120, synthetically synthesised and purified), 64 strands at each position <italic>B, C</italic> and <italic>D</italic>, and 8 at anchor position <italic>A</italic> (unpurified). An additional 64 strands for reporting (purified), and 130 for renewable programs (unpurified), gives a pool of 395 strands for <italic>N</italic> ≤ 4, plus an additional 1,144 for <italic>N</italic> ≤ 25 (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S5.5</xref>). We used a thermodynamic-based sequence design approach for compute and reporting domains, building on previous work<sup><xref ref-type="bibr" rid="R13">13</xref></sup> with details in <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S6</xref>. The synthetic scaffold scaff-120 had domains from M13, and other longer scaffolds used biologically-sourced sub-sequences of M13 bacteriophage<sup><xref ref-type="bibr" rid="R28">28</xref></sup> chosen to give reasonably isoenergetic position domains. (see Methods).</p></sec><sec id="S2"><title>SDC Programming: A<sc>DDITION</sc> example</title><p id="P15">Any Finite State Machine (FSM)—an important sub-class of computer programs, amenable to molecular implementation<sup><xref ref-type="bibr" rid="R33">33</xref></sup>—can be compiled into a 1D SDC (<xref ref-type="fig" rid="F3">Fig. 3a</xref>, <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S4.1</xref>). The <italic>N</italic> = 4, <italic>ℓ</italic> = 3 SDC implements any 2-state 8-bit input FSM, such as 4-bit A<sc>DDITION</sc> (<xref ref-type="fig" rid="F3">Fig. 3b</xref>). In A<sc>DDITION</sc>, each compute domain stores two input bits <italic>x</italic><sub><italic>i</italic></sub>, <italic>y</italic><sub><italic>i</italic></sub>, and a carry <italic>c</italic><sub><italic>i</italic></sub> computed, via tile/strand choice, as the mod 2 sum, of the previous carry and input pair. The 4 output bits were read in 4 separate experiments as shown in <xref ref-type="fig" rid="F2">Figs. 2h</xref>, 3D and <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S5.2</xref>.</p><p id="P16">To test the hypothesis that our thermodynamically favoured computing system could be run using simple annealing protocols, experiments were single-pot and simple, a so-called <italic>typical-anneal</italic> dropped from 80 °C to 20 °C in three hours, with scaffold at 100 nM, then was held for 45 minutes to obtain a signal completion level (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S7.1</xref>). Flat completion levels and strong signal suggested a lack of kinetic traps and signal loss (leak); <xref ref-type="fig" rid="F3">Fig. 3e</xref>, analysis below.</p><p id="P17">Data was minimally processed: (1) Each raw fluorescence trace was normalised by dividing by the mean of its readings at 80 °C; (2) traces were averaged across at least 2 repeats; and (3) for scaff-120, traces were re-scaled to have the mean <italic>completion level</italic> of <monospace>0</monospace>- and <monospace>1</monospace>-reporting controls be 0.0 and 1.0, respectively; see Supplementary Notes S7.2.3 and S7.2.4. The rescaling step was not done for scaled-up systems using M13 for scaffold, where individual control completion levels are reported instead. Controls have one strand per scaffold position, and no per-position competition or computation; they should simply anneal to the ideal target configuration. The anchor position 1 is always non-competitive, and thus only a control.</p><p id="P18">We estimated SDC performance, or yield, in two ways: the ability to separate bit-<monospace>0</monospace> from bit-<monospace>1</monospace> and the proportion of correctly assembled target structures. Data for all typical-anneal computations for <italic>N</italic> = 4 are 100% linearly separable: all samples have completion levels closer to their target mean control level than off-target. We estimated yield as distance from completion levels to their target mean control level, or, for scaled-up M13 scaffold systems, their corresponding experiment-specific controls: <italic>N</italic> = 4 typical-anneals had mean 96.7% (SD=0.027) yield over all A<sc>DDITION</sc> inputs (the single worst A<sc>DDITION</sc> output bit gave 91.6%), with mean 95.3% (SD=0.035) over all computations, see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S7.2.6</xref>.</p></sec><sec id="S3"><title>SDC programming</title><p id="P19">We sought to test additional hypotheses about the <italic>N</italic> = 4 SDC system. First, we tested programmability on a further 9 programs, beginning with a simple B<sc>IT</sc>C<sc>OPY</sc> system that acts as a length-4 wire (<xref ref-type="fig" rid="F4">Fig. 4a</xref>). We programmed four FSMs, which were automatically compiled to tile/strand sets (<xref ref-type="fig" rid="F4">Fig. 4b–e</xref>) from our stock, including the P<sc>ARITY</sc> program from <xref ref-type="fig" rid="F2">Fig. 2</xref>. A single logical/computation step executes by an SDC choosing among competing tiles at a position. Programs tested thus far had two competing tiles per position (<italic>B, C, D</italic>), or <italic>competitive complexity</italic> 2. The M<sc>ULTIPLY</sc>B<sc>Y</sc>3 program multiplies by 3 in base 2, testing competitive complexity 3; average yields for competitive complexity 2 and 3 are similar: 96.2% (SD=0.033) and 95.3% (SD=0.041) respectively. 3-<sc>STATE</sc> N<sc>ONDETERMINISTIC</sc> F<sc>INITE</sc> A<sc>UTOMATON</sc> tests competitive complexity 4, nondeterministically assembling up to four distinct target structures in parallel reported using distinct signal levels (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S7.3.5</xref>). D<sc>I</sc>-<sc>V</sc>B<sc>Y</sc>2 divides by 2 in base 3, requiring ternary digit reporting. We used our usual scheme for reading <monospace>0</monospace> and <monospace>1</monospace>, and a novel, serendipitously-discovered, but carefully characterised, temperature-dependent spurious quenching technique for reading ternary digit <monospace>2</monospace> (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S5.2.2</xref>). <xref ref-type="fig" rid="F4">Fig. 4f–i</xref> tests programs with competitive complexity up to 8, without significant signal loss: average yield is 95.1% (SD=0.019), see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S7.3</xref> for analysis. Finally, a 20-hour postanneal temperature hold showed neither leak nor slow completion, <xref ref-type="supplementary-material" rid="SD1">Supplementary Fig. S27</xref>.</p></sec><sec id="S4"><title>Renewable SDC computations</title><p id="P20">We hypothesised that our method of programming SDC equilibria could facilitate <italic>renewable</italic> programs: simply switch equilibrium by adding two strands that swap old input <italic>x</italic> for new <italic>x</italic>′ (<xref ref-type="fig" rid="F5">Fig. 5a,b</xref>). The number of renews is limited only by the concentration decrease per re-run, which can be made arbitrarily small in the limit of large initial volume, small renew volume, or low concentrations.</p><p id="P21"><xref ref-type="fig" rid="F5">Fig. 5c</xref> shows B<sc>IT</sc>C<sc>OPY</sc> run once and then renewed 24 times, flipping between input bit-<monospace>1</monospace> and <monospace>0</monospace>. Each renewal added 0.2 <italic>μ</italic>L volume containing two strands using an acoustic liquid handler. For convenience, we ran fast 12 min anneals; lowering completion relative to typical 3-hour anneals, however the <monospace>0</monospace>/<monospace>1</monospace> signals were clearly separated. Renewals showed remarkably low signal degradation over time (we expected signal loss due to (i) dilution, (ii) buildup of strands/errors distorting the intended target equilibrium, (iii) insufficient equilibration time). We sought to renew more complex programs. Two A<sc>DDITION</sc> programs were renewed 8 times, <xref ref-type="fig" rid="F5">Fig. 5d</xref>, each had 8 tiles compete at position <italic>B</italic> allowing 8 distinct inputs at position <italic>A</italic> per program (see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S8.2</xref>). Finally, to evaluate a high competitive complexity program on a large number of renewals, we renewed C<sc>OUNTER</sc> on 24 successive inputs, <xref ref-type="fig" rid="F5">Fig. 5e</xref>. Despite 8 tiles per non-anchor scaffold position, and somewhat fast anneals, all 24 renews gave a clear output, with mean signal loss of 17.3% (SD=0.067) every 8 repeats, see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S8.2.4</xref>.</p></sec><sec id="S5"><title>SDC speed and size scale-up</title><p id="P22">We hypothesised that fast computations might be possible for short scaffold lengths, <italic>N</italic> ≤ 4. <italic>Super-fast</italic> anneals, dropping from 80 °C to 55 °C in under 1 minute resulted in clear separation of bits <monospace>0</monospace> and <monospace>1</monospace> (<xref ref-type="fig" rid="F6">Fig. 6a</xref>, <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S7.2.5</xref>). This demonstrates the SDC can compute as fast as one minute, or even half a minute, the fastest in the DNA literature and almost at our lab equipment speed-limit. In terms of our yield performance metric, super-fast anneals have mean 82.4% (SD=0.116) yield at 1-minute for A<sc>DDITION</sc> and 81.2% (SD=0.16) over all computations, and outputs are linearly separable with a perprogram-threshold, <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S7.2.6</xref>.</p><p id="P23">It is tempting to interpret fast kinetics as evidence that scale-up to <italic>N &gt;</italic> 4 is possible. As <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S3.3</xref> shows, if the SDC actually obeys the bind/replace kinetics proposed in <xref ref-type="fig" rid="F1">Fig. 1</xref>, computations would take time merely bounded by <italic>O</italic>(<italic>N</italic> <sup>2</sup>); the time for all compute domain mismatches to disappear by random-walk to position <italic>N</italic>. However, theory and naive optimism need tempering by some practical challenges.</p><p id="P24">We designed a rather ambitious and harsh scale-up test. Our choice of biologically-synthesised 7.2kb M13 meant having long and easily obtainable scaffold, but brought interesting non-idealities to the SDC model: (1) Scaffold domains have widely varying free-energies. (2) Experiments needed to run at 10 nM scaffold concentration, 10<italic>×</italic> lower than before, saving material but worsening signal-to-noise and lowering tile on-rate. (3) Potential unintended interactions from thousands of superfluous single-stranded M13 DNA bases. Additionally, all except two labelled strands were unpurified, to save time/cost.</p><p id="P25">We initially tested an <italic>N</italic> = 11 B<sc>IT</sc>C<sc>OPY</sc> system, on a 288 nt M13 region called scaff-288, chosen for backwards compatibility with scaff-120. Increasing anneal time from 3 to 14 hours improved results. To combat poor M13 scaffold domain energetics, we employed DNA base mismatches,<sup><xref ref-type="bibr" rid="R34">34</xref>,<xref ref-type="bibr" rid="R35">35</xref></sup> giving a clear yield improvement from 39% to 57% on 11-positions over an 8 hr anneal (<xref ref-type="fig" rid="F6">Fig. 6b</xref>, Supplementary Notes S9.2 and S9.3).</p><p id="P26">To achieve further scale-up, and improve kinetics we used thermodynamic sequence design principles to choose a good 624-base segment (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S9.1</xref>). But even our best choice, scaff-624, had large variability in scaffold domain duplex Δ<italic>G</italic> of −20.9 to −11.1 kcal/mol at 65°C, compared to designed compute domains (−9.42 to −6.61 kcal/mol).</p><p id="P27">Computational theory suggested two more systematic approaches to programming the energy landscape. First, SDC tile programs embed logic with good error-reduction properties. A pair of A<sc>DDITION</sc> inputs typically has positions where a <monospace>0</monospace> or <monospace>1</monospace> carry bit is absorbed; a <italic>sink</italic>. Non-sinks pass carries along increasing tile competition; making non-sinks more prone to logical bit-flip errors. Let <italic>M</italic> denote the longest run of non-sinks for a given input pair. A<sc>DDITION</sc> has low <italic>M</italic> values: for example, two 25-bit inputs have mean <italic>M</italic> of 3.0 (SD 1.1), meaning that its logical structure should be conducive to error suppression. An <italic>M</italic> = 3 computation is computed in only an hour, <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S9.4</xref>. A harder <italic>M</italic> = 5 example in <xref ref-type="fig" rid="F6">Fig. 6c</xref> has good completion within 14 hours, noting that <italic>M</italic> ≤ 5 covers over &gt; 97 % of pairs of 25-bit numbers, hence almost all of the <italic>M</italic>-hardness of A<sc>DDITION</sc>. <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S9.4</xref> has details and other computations.</p><p id="P28">Second, we developed a program-independent approach to isoenergtics: The I<sc>SOENERGETIC</sc>B<sc>IT</sc>C<sc>OPY</sc> program has the target configuration for inputs <monospace>0</monospace> and <monospace>1</monospace> being almost isoenergetic, since both reuse the same compute domains, respectively encoding <monospace>0101</monospace>…<monospace>01</monospace> and <monospace>1010</monospace> <monospace>10</monospace>. This form of compute domain relabelling can be systematically applied to many SDC programs, enforcing configurations with <italic>k</italic> compute domain mismatches to sit on a roughly flat energy plateau with Δ<italic>G</italic> of <italic>O</italic>(<italic>k</italic>) (<xref ref-type="fig" rid="F6">Fig. 6d</xref>, <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S9.5</xref>). This gave excellent results, copying a bit across 20 positions with 71% yield, or 25 positions with 59% yield, on a 14 hr anneal. DNA base mismatches were unable to further improve yield significantly.</p></sec><sec id="S6" sec-type="discussion"><title>Discussion</title><p id="P29">The conceptual step forward in Fig. 1 enabled robust, fast, renewable and scaled-up thermodynamically favoured molecular computing. The core concept was elucidated on 10 SDC programs on over 700 computations with binary input of up to 50-bits, as well as base-3 strings and graphs. Unlike out-of-equilibrium molecular computers, the SDC did not need explicit error correction via redundancy/scale-up<sup><xref ref-type="bibr" rid="R13">13</xref>,<xref ref-type="bibr" rid="R15">15</xref>,<xref ref-type="bibr" rid="R27">27</xref>,<xref ref-type="bibr" rid="R36">36</xref>–<xref ref-type="bibr" rid="R39">39</xref></sup> nor compute-strand purification, precisely-calibrated temperature holds,<sup><xref ref-type="bibr" rid="R13">13</xref>–<xref ref-type="bibr" rid="R15">15</xref>,<xref ref-type="bibr" rid="R37">37</xref>,<xref ref-type="bibr" rid="R38">38</xref></sup> multi-step manual protocols<sup><xref ref-type="bibr" rid="R16">16</xref>,<xref ref-type="bibr" rid="R20">20</xref>–<xref ref-type="bibr" rid="R24">24</xref></sup> or early experiment termination to avoid leak. Unlike previous computing systems, the SDC is concentration-robust, inheriting the beautiful principle from DNA Origami<sup><xref ref-type="bibr" rid="R28">28</xref></sup> of having staple (compute) strands in large concentration excess over the scaffold. We even repeated one experiment after 1.5 years, adding water as the 96-well plate had partially dried out, giving the data reported in Fig. 6a, M<sc>ULTIPLY</sc>B<sc>Y</sc>3 and P<sc>ARITY</sc>.</p><p id="P30">Intuition suggests equilibrium computation could be imprecise, since any desired output configuration competes with exponentially many off-target structures. We outline thermodynamic and kinetic arguments against this intuition for the SDC. Our thermodynamic design principles engineer the predicted target (MFE) structure to have probability approaching 1.0, driving the sum of probabilities of all other structures to 0 (Fig. 2f, <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S3.5.1</xref>). Indeed, the correct SDC output was reported in all experiments. Notably, average completion/yield on typical-anneals, at scaffold length ≤ 4, was 95.3 % (SD=0.035) of strict controls with fewer strands and simpler equilibria. Mean yield at scaffold positions <italic>B</italic> and <italic>C</italic> was 98.1 % (SD=0.014), dropping to 94.4 % (SD=0.034) at <italic>D</italic>. Increasing competitive complexity from 2 to 8 did not significantly degrade yield for typical 3-hour anneals.</p><p id="P31">For larger <italic>N</italic>, mere thermodynamic favourability may not be sufficient: we need a nicely-shaped and traversable energy landscape. The abstract SDC tile model gives a stepped landscape, efficiently explorable by random walks that ratchet forward via compute domain mismatch repair. Hence, in theory and practice, we took a somewhat liberal approach to kinetics. The bind/replace model in Fig. 2b and <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S3.3</xref> begins a computation by guessing one of a large set of 2<sup><italic>O</italic>(<italic>N</italic>)</sup> initial states, yet by mere random walk completes in only <italic>O</italic>(<italic>N</italic> <sup><xref ref-type="bibr" rid="R2">2</xref></sup>) time. However, experimentally, we did not enforce this particular kinetics, nor any other: we simply annealed the system, hypothesising that something akin to bind/replace is happening at higher temperatures. We used a strand design without intentional kinetic traps (Fig. 2), but did not carry out design optimisations, nor did we seek to characterise and prevent off-pathway interactions, approaches common in typical non-equilibrium molecular computing.<sup><xref ref-type="bibr" rid="R13">13</xref>,<xref ref-type="bibr" rid="R15">15</xref>,<xref ref-type="bibr" rid="R16">16</xref>,<xref ref-type="bibr" rid="R20">20</xref>,<xref ref-type="bibr" rid="R21">21</xref>,<xref ref-type="bibr" rid="R23">23</xref>,<xref ref-type="bibr" rid="R24">24</xref>,<xref ref-type="bibr" rid="R37">37</xref>,<xref ref-type="bibr" rid="R38">38</xref></sup> Our approach is perhaps akin to that in DNA Origami<sup><xref ref-type="bibr" rid="R28">28</xref></sup> where assembly kinetics is not precisely controlled yet works beautifully.<sup><xref ref-type="bibr" rid="R40">40</xref>–<xref ref-type="bibr" rid="R42">42</xref></sup> Super-fast 1-minute anneals ran at the speed limit of our laboratory equipment, and beat all previous speed records for non-trivial DNA computations.<sup><xref ref-type="bibr" rid="R26">26</xref>,<xref ref-type="bibr" rid="R43">43</xref>–<xref ref-type="bibr" rid="R45">45</xref></sup> Results for our super-fast, and typical, anneals suggest the SDC has fast, high-temperature, reversible assembly kinetics (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S3.6</xref>). Scaling-up to to scaffold length 25 systems required slower anneals. The awkward energetics of cheap biologically-derived scaffold (M13) slowed computation at some positions, but in a way that seems not unlike our proposed random-walk kinetics (<xref ref-type="supplementary-material" rid="SD1">Supplementary Note S3.3</xref>). We conclude that the SDC is robust by design despite much remaining to be understood.</p><p id="P32">Although the earliest DNA motor was reusable,<sup><xref ref-type="bibr" rid="R46">46</xref></sup> designing renewable molecular computers is a major challenge due to system complexity and out-of-equilibrium operation.<sup><xref ref-type="bibr" rid="R47">47</xref>–<xref ref-type="bibr" rid="R53">53</xref></sup> Here, three SDC programs were successfully renewed up to 24 times at a reasonable speed of 12 mins per annealing cycle (plus time to add inputs).</p><p id="P33">Overall the principle of thermodynamic favourability provided a simple and effective method for program renewal, beating previous records in: (i) number of cycles (we show 25 runs, previous was 6 for a small system,<sup><xref ref-type="bibr" rid="R50">50</xref></sup> or 3<sup><xref ref-type="bibr" rid="R47">47</xref>,<xref ref-type="bibr" rid="R48">48</xref></sup> and 2 for larger systems<sup><xref ref-type="bibr" rid="R49">49</xref></sup> or resetting the same computation<sup><xref ref-type="bibr" rid="R52">52</xref></sup>), and (ii) time per renewal,<sup><xref ref-type="bibr" rid="R48">48</xref></sup> without need of manual steps<sup><xref ref-type="bibr" rid="R48">48</xref>,<xref ref-type="bibr" rid="R49">49</xref></sup> or extra molecular technology beyond DNA<sup><xref ref-type="bibr" rid="R51">51</xref>,<xref ref-type="bibr" rid="R53">53</xref></sup>.</p><p id="P34">Thermodynamic computing principles are applicable to nanoscale engineering: Scaffolded DNA Origami<sup><xref ref-type="bibr" rid="R28">28</xref></sup> could be endowed with computational abilities<sup><xref ref-type="bibr" rid="R54">54</xref></sup> to algorithmically drive shape formation by leveraging work on folding dynamics,<sup><xref ref-type="bibr" rid="R41">41</xref>,<xref ref-type="bibr" rid="R42">42</xref></sup> or scaffolded DNA data storage platforms, like SIMD||DNA<sup><xref ref-type="bibr" rid="R24">24</xref></sup> could have thermodynamic biases against errors. Inherent robustness to temperature and concentration, and lack of leak/errors, could facilitate thermodynamic computing in complex biological environments, engineered in RNA or protein. Indeed, we used a biologically-sourced scaffold sequence as a proof-of-principle for under-designed DNA sequences.</p><p id="P35">Our work shows that DNA systems are amenable to ‘free-energy landscaping’ enabling equilibrium molecular computing to move from theory to practice. More theory<sup><xref ref-type="bibr" rid="R1">1</xref>,<xref ref-type="bibr" rid="R4">4</xref></sup> is needed to understand molecular equilibrium computation. The thermodynamic binding network model<sup><xref ref-type="bibr" rid="R3">3</xref></sup> provides some principles, and entropy-driven equilibrium programs have been implemented.<sup><xref ref-type="bibr" rid="R25">25</xref></sup> Also, equilibrium computing by strand commutation<sup><xref ref-type="bibr" rid="R26">26</xref></sup> encodes Boolean circuit layers as a cascade of weakly bound, base-mismatching, strands. The energy landscape is challenging to control due to DNA binding model uncertainties, but theory may show how to amplify the signal.<sup><xref ref-type="bibr" rid="R55">55</xref></sup> Fuel-consuming, infinite-time, out-of-equilibrium molecular dynamics<sup><xref ref-type="bibr" rid="R1">1</xref>,<xref ref-type="bibr" rid="R19">19</xref>,<xref ref-type="bibr" rid="R46">46</xref></sup> are, by definition, unsuited to thermodynamically favoured computation. However, even there, energy landscapes can be sculpted to encode complex, finite-time, dynamics while driving to a ground state—a fixed-count chemical oscillator<sup><xref ref-type="bibr" rid="R19">19</xref></sup> being an example. Beyond molecular programming, the theory of thermodynamics of computation<sup><xref ref-type="bibr" rid="R1">1</xref>–<xref ref-type="bibr" rid="R4">4</xref>,<xref ref-type="bibr" rid="R8">8</xref></sup> seeks to determine ultimate energetic costs for computation. The SDC has several costs (number of synthesised strands, strand length, heat/annealing, etc.), but so far has not required explicit error-correction scale-up/time/energy/material costs, which seem to dominate computing architectures be they molecular,<sup><xref ref-type="bibr" rid="R13">13</xref>,<xref ref-type="bibr" rid="R15">15</xref>,<xref ref-type="bibr" rid="R27">27</xref>,<xref ref-type="bibr" rid="R36">36</xref>–<xref ref-type="bibr" rid="R39">39</xref></sup> classical digital-electronic<sup><xref ref-type="bibr" rid="R2">2</xref>,<xref ref-type="bibr" rid="R4">4</xref>,<xref ref-type="bibr" rid="R8">8</xref>,<xref ref-type="bibr" rid="R9">9</xref></sup> or quantum.<sup><xref ref-type="bibr" rid="R56">56</xref></sup> With this work, we hope to stimulate dialogue<sup><xref ref-type="bibr" rid="R11">11</xref></sup> towards consideration of thermodynamically-favoured, energy-efficient, computing platforms.</p></sec><sec id="S7" sec-type="methods" specific-use="web-only"><title>Methods</title><sec id="S8"><title>Sequence design</title><p id="P36">For scaff-120, we intentionally chose <bold>not</bold> to use <italic>de novo</italic> designed DNA sequences for the scaffold since one goal is to prototype a system that is robust to sequence choice, even biologically sourced. We chose to have four scaffold position domains (<italic>A, B, C, D</italic>), and the additional reporting position <italic>E</italic>, of 24-base each giving a 120-base scaffold sequence, scaff-120, somewhat arbitrarily chosen to be two contiguous subsequences of biologically-sourced M13 (see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S6</xref>). For scaff-288, we moved to a subregion of M13, using full M13 in solution instead of a synthetic strand, and used the same domain sequences from scaff-120, (<italic>B, C, D, E</italic>), extended by eight 24-base contiguous M13 domains scaling up the computation length to 11 positions, (see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S9.3</xref>. For scaff-624, a 624-base subregion of M13 (still using full M13 in solution) was chosen based on criteria given in <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S9</xref>. We used a thermodynamic sequence design approach<sup><xref ref-type="bibr" rid="R13">13</xref></sup> for compute and reporting domains.</p><p id="P37">For the compute domains, we used a 3-letter ATC code with at most one G as an exception, motifs CCCC, GGGG, AAAAA, TTTTT were forbidden, and isoenergetic complementary binding interactions of −11.7 <italic>±</italic> 0.1 kcal/mol (chosen simply by our metric). −11.6 is the computed mean for a pool of 10,000 length 12 sequences. As soft constraints (i.e. enforced with potential exceptions), orthogonal interactions (unintended binding) &gt; −2 kcal/mol evaluated using <monospace>binding(A,B) = pfunc(A,B)-pfunc(A)-pfunc(B)</monospace> as in reference<sup><xref ref-type="bibr" rid="R13">13</xref></sup>’s SI Section S4.2.1 p. 43, with <monospace>pfunc()</monospace> given by <monospace>NUPACK4</monospace>.<sup><xref ref-type="bibr" rid="R57">57</xref></sup> Secondary structure within each sequence compute domain was optimised to be &gt; −0.25 kcal/mol. Reporter domains were designed using similar principles (isoenergetic binding between −21.7 and −21.95 kcal/mol at 53 °C and no G was permitted to be within 4 bases of a fluorophore.<sup><xref ref-type="bibr" rid="R58">58</xref>,<xref ref-type="bibr" rid="R59">59</xref></sup> Software packages <monospace>nuad</monospace><sup><xref ref-type="bibr" rid="R60">60</xref></sup> and NUPACK4<sup><xref ref-type="bibr" rid="R57">57</xref></sup> were used for DNA sequence design.</p></sec><sec id="S9"><title>DNA synthesis and fluorophore/quencher labelling</title><p id="P38">All 1,539 DNA strands were ordered in 384-well plates and 96-well plates from Integrated DNA Technologies (IDT) unpurified and normalised to 200 μM in IDTE pH 8.0 Buffer except for 9 strands which are the 120-base synthetic scaffold (Ultramer™ DNA Oligo PAGE purified and dry, see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S7.7</xref>), the four labelled strands (HPLC purified and normalised to 100 μM in IDTE pH 8.0 Buffer), and the four strands that the fluorophore-labelled strands bind to scaff-120 for reporting (PAGE purified and normalised to 100 μM in IDTE pH 8.0 Buffer). Of the four labelled strands, two had an ‘ATTO590’ fluorescent label at the 5′ prime end and the other two an ‘Iowa Black® FQ’ quencher label at the 3′ prime end.</p></sec><sec id="S10"><title>Sample mixing and buffer conditions</title><p id="P39">Most experimental mixes were automatedly generated using a custom code pipeline (Cosmix); some were prepared using alhambra-mixes library.<sup><xref ref-type="bibr" rid="R61">61</xref></sup> SDC programs and their controls were mixed using an Echo 525 acoustic liquid handler (Beck-man Coulter, supplied by Labplan Ltd. Ireland) for the data reported in <xref ref-type="fig" rid="F3">Figures 3</xref>–<xref ref-type="fig" rid="F6">6</xref>, and by hand for some of the data in the Supplementary information. Also, earlier versions of <xref ref-type="fig" rid="F3">Figs. 3</xref>–<xref ref-type="fig" rid="F5">5</xref> were mixed by single/multi-channel hand pipettes. The liquid handler is not necessary to run SDC programs, but we found it gave more consistent results (lower signal variance) than hand-mixing. Picklists specifying the liquid transfer sequence and volumes from the 384-well source plates to the 96 destination plates were automatedly generated using Python. Mixes using synthetic scaff-120 were prepared with a scaffold concentration of 100nM, while scaff-288 and scaff-624 directly used M13 at 10 nM concentration. Scaffold concentration in all experiments is set to the standard 1<italic>×</italic> baseline. All systems used 10<italic>×</italic> of every competing strand, 0.93<italic>×</italic> of the fluorophore binding strand, 0.79<italic>×</italic> of the fluorophore strand and 17.86<italic>×</italic> of the quencher strand. DNA strands for an SDC program were placed in a single 0.1 mL 96-well PCR plate (or tube) to a volume of 35 <italic>μ</italic>L in 12.5mM Mg++ in a tris acetate EDTA (TAE) buffer with 0.01 % tween buffer.</p></sec><sec id="S11"><title>Fluorescence spectroscopy and temperature protocols</title><p id="P40">Bulk fluorescence data was run in a quantitative 96-well PCR machine (QuantStudio™ 5 Real-Time PCR System operated using the open-source python library <monospace>qslib</monospace><sup><xref ref-type="bibr" rid="R62">62</xref></sup>) for fluorescence measurement over time. All experiments used the ATTO590 with excitation/emission at 593/622 nm. Seven plates were used to run the experiments of the ten programs shown in <xref ref-type="fig" rid="F3">Figs. 3</xref>–<xref ref-type="fig" rid="F4">4</xref> including controls and repeats. Anneals essentially consist of dropping temperature from 80 °C to 20 °C over durations ranging from 30 seconds to 24 hours, then holding at 20 °C where <italic>completion levels</italic> are computed, see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S7.1</xref>. Often, temperature is dropped at a quicker rate in the 75 °C to 55 °C range than in the 55 °C to 20 °C range. All temperature protocols are made available, see “Data and code availability” below. As discussed in <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S7.2.3</xref>, the data undergoes minimal processing. Performance metrics calculations are discussed in Supplementary Notes S7.2.3, S7.2.4 and S9.2.</p></sec></sec><sec sec-type="supplementary-material" id="SM"><title>Supplementary Material</title><supplementary-material content-type="local-data" id="SD1"><label>Supplementary Information</label><media xlink:href="EMS207388-supplement-Supplementary_Information.pdf" mimetype="application" mime-subtype="pdf" id="d20aAcMbB" position="anchor"/></supplementary-material></sec></body><back><ack id="S13"><title>Acknowledgements</title><p>We thank Ahmed Shalaby for fast partition function and MFE code used for thermodynamic prediction, and Angel Cervera Roldan for his work on an SDC kinetic simulator used in sequence design. Also, Boya Wang for sharing data on tween; Chris Thachuk, David Soloveichik, David Doty and Doan Dai Nguyen for helpful conversations on theory and design, and Erik Winfree, David Soloveichik, Lulu Qian, Kim Reilly, Nathan Ronceray, Sébastien Ohleyer, for valuable feedback. Funding: Research supported by the European Union’s European Research Council (ERC, Active-DNA, no 772766); European Innovation Council (EIC, DISCO, No 101115422); and Science Foundation Ireland (SFI) under grant numbers 18/ERCS/5746 and 20/FFP-P/8843. Views and opinions expressed are however those of the author(s) only and do not necessarily reflect those of the European Union, European Research Council, European Innovation Council or Science Foundation Ireland. Neither the European Union nor the granting authority can be held responsible for them.</p></ack><sec id="S12" sec-type="data-availability"><title>Data and code availability</title><p id="P41">Python code and libraries for sequence design, Echo mixing automation, qPCR protocols, and data analysis and processing are available as supplementary files to this submission, at doi:<ext-link ext-link-type="uri" xlink:href="https://zenodo.org/records/15869378">10.5281/zenodo.15869378</ext-link>.</p></sec><fn-group><fn fn-type="con" id="FN1"><p id="P42"><bold>Author Contributions</bold></p><p id="P43">All authors participated in all aspects of the work: TS, AE, JA, CGE, DW designed experiments, carried out data analysis, and wrote the paper; TS, CGE and DW focused on theoretical concepts, AE, JA on experiments, TS, DW on DNA sequence design, DW, CGE on thermodynamic and kinetic analysis.</p></fn><fn id="FN2" fn-type="conflict"><p id="P44"><bold>Author Information</bold></p><p id="P45">The authors declare competing financial interest: TS, AE and DW are listed as inventors on pending patents.</p></fn></fn-group><ref-list><ref id="R1"><label>1</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ouldridge</surname><given-names>TE</given-names></name></person-group><article-title>The importance of thermodynamics for molecular systems, and the importance of molecular systems for thermodynamics</article-title><source>Natural Computing</source><year>2018</year><volume>17</volume><fpage>3</fpage><lpage>29</lpage><pub-id pub-id-type="doi">10.1007/s11047-017-9646-x</pub-id><pub-id pub-id-type="pmcid">PMC5856891</pub-id><pub-id pub-id-type="pmid">29576756</pub-id></element-citation></ref><ref id="R2"><label>2</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wolpert</surname><given-names>DH</given-names></name></person-group><article-title>The stochastic thermodynamics of computation</article-title><source>Journal of Physics A: Mathematical and Theoretical</source><year>2019</year><volume>52</volume><elocation-id>193001</elocation-id><pub-id pub-id-type="doi">10.1088/1751-8121/ab0850</pub-id></element-citation></ref><ref id="R3"><label>3</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Doty</surname><given-names>D</given-names></name><name><surname>Rogers</surname><given-names>TA</given-names></name><name><surname>Soloveichik</surname><given-names>D</given-names></name><name><surname>Thachuk</surname><given-names>C</given-names></name><name><surname>Woods</surname><given-names>D</given-names></name></person-group><source>Thermodynamic binding networks</source><conf-name>DNA23: The 23rd International Conference on DNA Computing and Molecular Programming</conf-name><year>2017</year><volume>10467</volume><fpage>249</fpage><lpage>266</lpage><pub-id pub-id-type="doi">10.48550/arXiv.1709.07922</pub-id></element-citation></ref><ref id="R4"><label>4</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bennett</surname><given-names>CH</given-names></name></person-group><article-title>The thermodynamics of computation—a review</article-title><source>International Journal of Theoretical Physics</source><year>1982</year><volume>21</volume><fpage>905</fpage><lpage>940</lpage><pub-id pub-id-type="doi">10.1007/BF02084158</pub-id></element-citation></ref><ref id="R5"><label>5</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Du</surname><given-names>Y</given-names></name><name><surname>Mordatch</surname><given-names>I</given-names></name></person-group><chapter-title>Implicit Generation and Modeling with Energy Based Models</chapter-title><person-group person-group-type="editor"><name><surname>Wallach</surname><given-names>H</given-names></name><etal/></person-group><source>Advances in Neural Information Processing Systems</source><publisher-name>Curran Associates, Inc</publisher-name><year>2019</year><volume>32</volume></element-citation></ref><ref id="R6"><label>6</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kirkpatrick</surname><given-names>S</given-names></name><name><surname>Gelatt</surname><given-names>CD</given-names><suffix>Jr</suffix></name><name><surname>Vecchi</surname><given-names>MP</given-names></name></person-group><article-title>Optimization by simulated annealing</article-title><source>Science</source><year>1983</year><volume>220</volume><fpage>671</fpage><lpage>680</lpage><pub-id pub-id-type="pmid">17813860</pub-id></element-citation></ref><ref id="R7"><label>7</label><element-citation publication-type="other"><person-group person-group-type="author"><name><surname>Touvron</surname><given-names>H</given-names></name><etal/></person-group><source>LLaMA: Open and Efficient Foundation Language Models</source><year>2023</year></element-citation></ref><ref id="R8"><label>8</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Landauer</surname><given-names>R</given-names></name></person-group><article-title>Irreversibility and Heat Generation in the Computing Process</article-title><source>IBM Journal of Research and Development</source><year>1961</year><volume>5</volume><fpage>183</fpage><lpage>191</lpage><pub-id pub-id-type="doi">10.1147/rd.53.0183</pub-id></element-citation></ref><ref id="R9"><label>9</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Buyya</surname><given-names>R</given-names></name><name><surname>Ilager</surname><given-names>S</given-names></name><name><surname>Arroba</surname><given-names>P</given-names></name></person-group><article-title>Energy-efficiency and sustainability in new generation cloud computing: A vision and directions for integrated management of data centre resources and workloads</article-title><source>Software: Practice and Experience</source><year>2023</year><month>Aug</month><volume>54</volume><fpage>24</fpage><lpage>38</lpage><pub-id pub-id-type="doi">10.1002/spe.3248</pub-id></element-citation></ref><ref id="R10"><label>10</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Demaine</surname><given-names>ED</given-names></name><name><surname>Lynch</surname><given-names>JF</given-names></name><name><surname>Mirano</surname><given-names>S</given-names></name><name><surname>Tyagi</surname><given-names>A</given-names></name></person-group><source>Energy-Efficient Algorithms</source><conf-name>Proc ACM Conf on Innovations in Theoretical Computer Science</conf-name><year>2016</year></element-citation></ref><ref id="R11"><label>11</label><element-citation publication-type="report"><person-group person-group-type="author"><name><surname>Frank</surname><given-names>MP</given-names></name><name><surname>Conte</surname><given-names>TM</given-names></name></person-group><source>Reversible Computing Technology is Essential for Sustainable Growth of the Digital Economy. Sandia Position Paper</source><year>2022</year></element-citation></ref><ref id="R12"><label>12</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Adleman</surname><given-names>LM</given-names></name></person-group><article-title>Molecular computation of solutions to combinatorial problems</article-title><source>Science</source><year>1994</year><volume>266</volume><fpage>1021</fpage><lpage>1024</lpage><pub-id pub-id-type="pmid">7973651</pub-id></element-citation></ref><ref id="R13"><label>13</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Woods</surname><given-names>D</given-names></name><etal/></person-group><article-title>Diverse and robust molecular algorithms using reprogrammable DNA self-assembly</article-title><source>Nature</source><year>2019</year><volume>567</volume><fpage>366</fpage><lpage>372</lpage><pub-id pub-id-type="pmid">30894725</pub-id></element-citation></ref><ref id="R14"><label>14</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Evans</surname><given-names>CG</given-names></name><name><surname>O’Brien</surname><given-names>J</given-names></name><name><surname>Winfree</surname><given-names>E</given-names></name><name><surname>Murugan</surname><given-names>A</given-names></name></person-group><article-title>Pattern recognition in the nucleation kinetics of non-equilibrium self-assembly</article-title><source>Nature</source><year>2024</year><volume>625</volume><fpage>500</fpage><lpage>507</lpage><pub-id pub-id-type="doi">10.1038/s41586-023-06890-z</pub-id><pub-id pub-id-type="pmcid">PMC10794147</pub-id><pub-id pub-id-type="pmid">38233621</pub-id></element-citation></ref><ref id="R15"><label>15</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schulman</surname><given-names>R</given-names></name><name><surname>Yurke</surname><given-names>B</given-names></name><name><surname>Winfree</surname><given-names>E</given-names></name></person-group><article-title>Robust self-replication of combinatorial information via crystal growth and scission</article-title><source>PNAS</source><year>2012</year><volume>109</volume><fpage>6405</fpage><lpage>6410</lpage><pub-id pub-id-type="doi">10.1073/pnas.1117813109</pub-id><pub-id pub-id-type="pmcid">PMC3340064</pub-id><pub-id pub-id-type="pmid">22493232</pub-id></element-citation></ref><ref id="R16"><label>16</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Qian</surname><given-names>L</given-names></name><name><surname>Winfree</surname><given-names>E</given-names></name></person-group><article-title>Scaling up digital circuit computation with DNA strand displacement cascades</article-title><source>Science</source><year>2011</year><volume>332</volume><fpage>1196</fpage><lpage>1201</lpage><pub-id pub-id-type="pmid">21636773</pub-id></element-citation></ref><ref id="R17"><label>17</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fern</surname><given-names>J</given-names></name><name><surname>Schulman</surname><given-names>R</given-names></name></person-group><article-title>Design and Characterization of DNA Strand-Displacement Circuits in Serum-Supplemented Cell Medium</article-title><source>ACS Synthetic Biology</source><year>2017</year><volume>6</volume><fpage>1774</fpage><lpage>1783</lpage><pub-id pub-id-type="pmid">28558208</pub-id></element-citation></ref><ref id="R18"><label>18</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Song</surname><given-names>T</given-names></name><name><surname>Garg</surname><given-names>S</given-names></name><name><surname>Mokhtar</surname><given-names>R</given-names></name><name><surname>Bui</surname><given-names>H</given-names></name><name><surname>Reif</surname><given-names>J</given-names></name></person-group><article-title>Analog Computation by DNA Strand Displacement Circuits</article-title><source>ACS Synthetic Biology</source><year>2016</year><volume>5</volume><fpage>898</fpage><lpage>912</lpage><pub-id pub-id-type="pmid">27363950</pub-id></element-citation></ref><ref id="R19"><label>19</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Srinivas</surname><given-names>N</given-names></name><name><surname>Parkin</surname><given-names>J</given-names></name><name><surname>Seelig</surname><given-names>G</given-names></name><name><surname>Winfree</surname><given-names>E</given-names></name><name><surname>Soloveichik</surname><given-names>D</given-names></name></person-group><article-title>Enzyme-free nucleic acid dynamical systems</article-title><source>Science</source><year>2017</year><volume>358</volume><elocation-id>eaal2052</elocation-id><pub-id pub-id-type="pmid">29242317</pub-id></element-citation></ref><ref id="R20"><label>20</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bui</surname><given-names>H</given-names></name><etal/></person-group><article-title>Localized DNA Hybridization Chain Reactions on DNA Origami</article-title><source>ACS Nano</source><year>2018</year><month>Feb</month><volume>12</volume><fpage>1146</fpage><lpage>1155</lpage><pub-id pub-id-type="pmid">29357217</pub-id></element-citation></ref><ref id="R21"><label>21</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chatterjee</surname><given-names>G</given-names></name><name><surname>Dalchau</surname><given-names>N</given-names></name><name><surname>Muscat</surname><given-names>RA</given-names></name><name><surname>Phillips</surname><given-names>A</given-names></name><name><surname>Seelig</surname><given-names>G</given-names></name></person-group><article-title>A spatially localized architecture for fast and modular DNA computing</article-title><source>Nature Nanotechnology</source><year>2017</year><month>Sept</month><volume>12</volume><fpage>920</fpage><lpage>927</lpage><pub-id pub-id-type="pmid">28737747</pub-id></element-citation></ref><ref id="R22"><label>22</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wickham</surname><given-names>SFJ</given-names></name><etal/></person-group><article-title>A DNA-based molecular motor that can navigate a network of tracks</article-title><source>Nature Nanotechnology</source><year>2012</year><month>Mar</month><volume>7</volume><fpage>169</fpage><lpage>173</lpage><pub-id pub-id-type="pmid">22266636</pub-id></element-citation></ref><ref id="R23"><label>23</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Thubagere</surname><given-names>AJ</given-names></name><etal/></person-group><article-title>A cargo-sorting DNA robot</article-title><source>Science</source><year>2017</year><volume>357</volume><pub-id pub-id-type="pmid">28912216</pub-id></element-citation></ref><ref id="R24"><label>24</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>B</given-names></name><name><surname>Wang</surname><given-names>SS</given-names></name><name><surname>Chalk</surname><given-names>C</given-names></name><name><surname>Ellington</surname><given-names>AD</given-names></name><name><surname>Soloveichik</surname><given-names>D</given-names></name></person-group><article-title>Parallel molecular computation on digital data stored in DNA</article-title><source>PNAS</source><year>2023</year><volume>120</volume><elocation-id>e2217330120</elocation-id><pub-id pub-id-type="doi">10.1073/pnas.2217330120</pub-id><pub-id pub-id-type="pmcid">PMC10500265</pub-id><pub-id pub-id-type="pmid">37669382</pub-id></element-citation></ref><ref id="R25"><label>25</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>B</given-names></name><name><surname>Chalk</surname><given-names>C</given-names></name><name><surname>Doty Soloveichik</surname><given-names>D</given-names></name></person-group><article-title>Molecular computation at equilibrium via programmable entropy</article-title><source>Tech rep Arxiv preprint: bioRxiv</source><year>2024</year><elocation-id>2024.09.13.612990</elocation-id><pub-id pub-id-type="doi">10.1101/2024.09.13.612990</pub-id></element-citation></ref><ref id="R26"><label>26</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nikitin</surname><given-names>MP</given-names></name></person-group><article-title>Non-complementary strand commutation as a fundamental alternative for information processing by DNA and gene regulation</article-title><source>Nature Chemistry</source><year>2023</year><volume>15</volume><fpage>70</fpage><lpage>82</lpage><pub-id pub-id-type="pmid">36604607</pub-id></element-citation></ref><ref id="R27"><label>27</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>B</given-names></name><name><surname>Thachuk</surname><given-names>C</given-names></name><name><surname>Soloveichik</surname><given-names>D</given-names></name></person-group><article-title>Speed and correctness guarantees for programmable enthalpy-neutral DNA reactions</article-title><source>ACS Synthetic Biology</source><year>2023</year><volume>12</volume><fpage>993</fpage><lpage>1006</lpage><pub-id pub-id-type="doi">10.1021/acssynbio.2c00356</pub-id><pub-id pub-id-type="pmcid">PMC10127273</pub-id><pub-id pub-id-type="pmid">37014808</pub-id></element-citation></ref><ref id="R28"><label>28</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rothemund</surname><given-names>PW</given-names></name></person-group><article-title>Folding DNA to create nanoscale shapes and patterns</article-title><source>Nature</source><year>2006</year><volume>440</volume><fpage>297</fpage><lpage>302</lpage><pub-id pub-id-type="pmid">16541064</pub-id></element-citation></ref><ref id="R29"><label>29</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Castro</surname><given-names>CE</given-names></name><etal/></person-group><article-title>A primer to scaffolded DNA origami</article-title><source>Nature Methods</source><year>2011</year><volume>8</volume><fpage>221</fpage><lpage>229</lpage><pub-id pub-id-type="pmid">21358626</pub-id></element-citation></ref><ref id="R30"><label>30</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Shalaby</surname><given-names>A</given-names></name><name><surname>Thachuk</surname><given-names>C</given-names></name><name><surname>Woods</surname><given-names>D</given-names></name></person-group><source>Thermodynamics and kinetics of a multistranded scaffolded DNA computer</source><conf-name>DNA 29: Proceedings of the 29th International Meeting on DNA Computing and Molecular Programming</conf-name><year>2023</year><volume>276</volume><fpage>11</fpage><lpage>122</lpage><pub-id pub-id-type="doi">10.4230/LIPIcs.DNA.29.1</pub-id></element-citation></ref><ref id="R31"><label>31</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>DY</given-names></name><name><surname>Seelig</surname><given-names>G</given-names></name></person-group><article-title>Dynamic DNA nanotechnology using strand-displacement reactions</article-title><source>Nature Chemistry</source><year>2011</year><volume>3</volume><fpage>103</fpage><lpage>113</lpage><pub-id pub-id-type="pmid">21258382</pub-id></element-citation></ref><ref id="R32"><label>32</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Thachuk</surname><given-names>C</given-names></name><name><surname>Winfree</surname><given-names>E</given-names></name><name><surname>Soloveichik</surname><given-names>D</given-names></name></person-group><source>Leakless DNA strand displacement systems</source><conf-name>DNA21: Proceedings of the 21st International Conference on DNA Computing and Molecular Programming</conf-name><year>2015</year><fpage>133</fpage><lpage>153</lpage></element-citation></ref><ref id="R33"><label>33</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Benenson</surname><given-names>Y</given-names></name><etal/></person-group><article-title>Programmable and autonomous computing machine made of biomolecules</article-title><source>Nature</source><year>2001</year><month>Nov</month><volume>414</volume><fpage>430</fpage><lpage>434</lpage><pub-id pub-id-type="doi">10.1038/35106533</pub-id><pub-id pub-id-type="pmcid">PMC3838952</pub-id><pub-id pub-id-type="pmid">11719800</pub-id></element-citation></ref><ref id="R34"><label>34</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Machinek</surname><given-names>RR</given-names></name><name><surname>Ouldridge</surname><given-names>TE</given-names></name><name><surname>Haley</surname><given-names>NE</given-names></name><name><surname>Bath</surname><given-names>J</given-names></name><name><surname>Turberfield</surname><given-names>AJ</given-names></name></person-group><article-title>Programmable energy landscapes for kinetic control of DNA strand displacement</article-title><source>Nature Communications</source><year>2014</year><volume>5</volume><elocation-id>5324</elocation-id><pub-id pub-id-type="pmid">25382214</pub-id></element-citation></ref><ref id="R35"><label>35</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Olson</surname><given-names>X</given-names></name><etal/></person-group><article-title>Availability: A metric for nucleic acid strand displacement systems</article-title><source>ACS synthetic biology</source><year>2017</year><volume>6</volume><fpage>84</fpage><lpage>93</lpage><pub-id pub-id-type="doi">10.1021/acssynbio.5b00231</pub-id><pub-id pub-id-type="pmcid">PMC5259754</pub-id><pub-id pub-id-type="pmid">26875531</pub-id></element-citation></ref><ref id="R36"><label>36</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Winfree</surname><given-names>E</given-names></name><name><surname>Bekbolatov</surname><given-names>R</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Chen</surname><given-names>J</given-names></name><name><surname>Reif</surname><given-names>J</given-names></name></person-group><source>Proofreading tile sets: Error correction for algorithmic self-assembly</source><conf-name>DNA9: Proceedings of the 9th International Conference on DNA Computing</conf-name><year>2004</year><volume>2943</volume><fpage>126</fpage><lpage>144</lpage><pub-id pub-id-type="doi">10.1007/978-3-540-24628-2_13</pub-id></element-citation></ref><ref id="R37"><label>37</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Evans</surname><given-names>CG</given-names></name></person-group><source>Crystals that count! Physical principles and experimental investigations of DNA tile self-assembly</source><publisher-name>PhD thesis, Caltech</publisher-name><year>2014</year><pub-id pub-id-type="doi">10.7907/7FMK-9403</pub-id></element-citation></ref><ref id="R38"><label>38</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schulman</surname><given-names>R</given-names></name><name><surname>Wright</surname><given-names>C</given-names></name><name><surname>Winfree</surname><given-names>E</given-names></name></person-group><article-title>Increasing redundancy exponentially reduces error rates during algorithmic self-assembly</article-title><source>ACS nano</source><year>2015</year><volume>9</volume><fpage>5760</fpage><lpage>5771</lpage><pub-id pub-id-type="pmid">25965580</pub-id></element-citation></ref><ref id="R39"><label>39</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>B</given-names></name><name><surname>Thachuk</surname><given-names>C</given-names></name><name><surname>Ellington</surname><given-names>AD</given-names></name><name><surname>Winfree</surname><given-names>E</given-names></name><name><surname>Soloveichik</surname><given-names>D</given-names></name></person-group><article-title>Effective design principles for leakless strand displacement systems</article-title><source>Proceedings of the National Academy of Sciences (PNAS)</source><year>2018</year><volume>115</volume><elocation-id>E12182-E12191</elocation-id><pub-id pub-id-type="doi">10.1073/pnas.1806859115</pub-id><pub-id pub-id-type="pmcid">PMC6310779</pub-id><pub-id pub-id-type="pmid">30545914</pub-id></element-citation></ref><ref id="R40"><label>40</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lee Tin Wah</surname><given-names>J</given-names></name><name><surname>David</surname><given-names>C</given-names></name><name><surname>Rudiuk</surname><given-names>S</given-names></name><name><surname>Baigl</surname><given-names>D</given-names></name><name><surname>Estevez-Torres</surname><given-names>A</given-names></name></person-group><article-title>Observing and controlling the folding pathway of DNA origami at the nanoscale</article-title><source>ACS nano</source><year>2016</year><volume>10</volume><fpage>1978</fpage><lpage>1987</lpage><pub-id pub-id-type="pmid">26795025</pub-id></element-citation></ref><ref id="R41"><label>41</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dunn</surname><given-names>KE</given-names></name><etal/></person-group><article-title>Guiding the folding pathway of DNA origami</article-title><source>Nature</source><year>2015</year><volume>525</volume><fpage>82</fpage><lpage>86</lpage><pub-id pub-id-type="pmid">26287459</pub-id></element-citation></ref><ref id="R42"><label>42</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rossi-Gendron</surname><given-names>C</given-names></name><etal/></person-group><article-title>Isothermal self-assembly of multicomponent and evolutive DNA nanostructures</article-title><source>Nature Nanotechnology</source><year>2023</year><volume>18</volume><fpage>1311</fpage><lpage>1318</lpage><pub-id pub-id-type="doi">10.1038/s41565-023-01468-2</pub-id><pub-id pub-id-type="pmcid">PMC10656289</pub-id><pub-id pub-id-type="pmid">37524905</pub-id></element-citation></ref><ref id="R43"><label>43</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhu</surname><given-names>Y</given-names></name><etal/></person-group><article-title>Accelerating DNA computing via freeze-thaw cycling</article-title><source>Science Advances</source><year>2023</year><volume>9</volume><elocation-id>eaax7983</elocation-id><pub-id pub-id-type="doi">10.1126/sciadv.aax7983</pub-id><pub-id pub-id-type="pmcid">PMC10456841</pub-id><pub-id pub-id-type="pmid">37624882</pub-id></element-citation></ref><ref id="R44"><label>44</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Kennedy</surname><given-names>T</given-names></name><name><surname>Pearce</surname><given-names>C</given-names></name><name><surname>Thachuk</surname><given-names>C</given-names></name></person-group><source>Fast and robust strand displacement cascades via systematic design strategies</source><conf-name>28th International Conference on DNA Computing and Molecular Programming (DNA 28)</conf-name><conf-sponsor>Schloss Dagstuhl– Leibniz-Zentrum für Informatik</conf-sponsor><conf-loc>Dagstuhl, Germany</conf-loc><year>2022</year><volume>238</volume><fpage>11</fpage><lpage>117</lpage><pub-id pub-id-type="doi">10.4230/LIPIcs.DNA.28.1</pub-id></element-citation></ref><ref id="R45"><label>45</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Song</surname><given-names>T</given-names></name><etal/></person-group><article-title>Fast and compact DNA logic circuits based on single-stranded gates using strand-displacing polymerase</article-title><source>Nature nanotechnology</source><year>2019</year><volume>14</volume><fpage>1075</fpage><lpage>1081</lpage><pub-id pub-id-type="pmid">31548688</pub-id></element-citation></ref><ref id="R46"><label>46</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yurke</surname><given-names>B</given-names></name><name><surname>Turberfield</surname><given-names>AJ</given-names></name><name><surname>Mills</surname><given-names>AP</given-names><suffix>Jr</suffix></name><name><surname>Simmel</surname><given-names>FC</given-names></name><name><surname>Neumann</surname><given-names>JL</given-names></name></person-group><article-title>A DNA-fuelled molecular machine made of DNA</article-title><source>Nature</source><year>2000</year><volume>406</volume><fpage>605</fpage><lpage>608</lpage><pub-id pub-id-type="pmid">10949296</pub-id></element-citation></ref><ref id="R47"><label>47</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>L</given-names></name><etal/></person-group><article-title>Multifunctional clip strand for the regulation of DNA strand displacement and construction of complex DNA nanodevices</article-title><source>ACS nano</source><year>2021</year><volume>15</volume><fpage>11573</fpage><lpage>11584</lpage><pub-id pub-id-type="pmid">34213302</pub-id></element-citation></ref><ref id="R48"><label>48</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Eshra</surname><given-names>A</given-names></name><name><surname>Shah</surname><given-names>S</given-names></name><name><surname>Song</surname><given-names>T</given-names></name><name><surname>Reif</surname><given-names>J</given-names></name></person-group><article-title>Renewable DNA Hairpin-Based Logic Circuits</article-title><source>IEEE Transactions on Nanotechnology</source><year>2019</year><volume>18</volume><fpage>252</fpage><lpage>259</lpage></element-citation></ref><ref id="R49"><label>49</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Garg</surname><given-names>S</given-names></name><etal/></person-group><article-title>Renewable Time-Responsive DNA Circuits</article-title><source>Small</source><year>2018</year><volume>14</volume><elocation-id>1801470</elocation-id><pub-id pub-id-type="pmid">30022600</pub-id></element-citation></ref><ref id="R50"><label>50</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Genot</surname><given-names>AJ</given-names></name><name><surname>Bath</surname><given-names>J</given-names></name><name><surname>Turberfield</surname><given-names>AJ</given-names></name></person-group><article-title>Reversible logic circuits made of DNA</article-title><source>Journal of the American Chemical Society</source><year>2011</year><volume>133</volume><fpage>20080</fpage><lpage>20083</lpage><pub-id pub-id-type="pmid">22111514</pub-id></element-citation></ref><ref id="R51"><label>51</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Song</surname><given-names>X</given-names></name><name><surname>Eshra</surname><given-names>A</given-names></name><name><surname>Dwyer</surname><given-names>C</given-names></name><name><surname>Reif</surname><given-names>J</given-names></name></person-group><article-title>Renewable DNA seesaw logic circuits enabled by photoregulation of toehold-mediated strand displacement</article-title><source>RSC Adv</source><year>2017</year><day>45</day><volume>7</volume><fpage>28130</fpage><lpage>28144</lpage></element-citation></ref><ref id="R52"><label>52</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hahn</surname><given-names>J</given-names></name><name><surname>Shih</surname><given-names>WM</given-names></name></person-group><article-title>Thermal strand displacement</article-title><source>Nucleic Acids Research</source><year>2019</year><month>Oct</month><volume>47</volume><fpage>10968</fpage><lpage>10975</lpage><pub-id pub-id-type="doi">10.1093/nar/gkz844</pub-id><pub-id pub-id-type="pmcid">PMC6847259</pub-id><pub-id pub-id-type="pmid">31584082</pub-id></element-citation></ref><ref id="R53"><label>53</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>X</given-names></name><etal/></person-group><article-title>Enzyme-assisted renewable DNA circuits</article-title><source>Chem Commun</source><year>2019</year><day>77</day><volume>55</volume><fpage>11615</fpage><lpage>11618</lpage><pub-id pub-id-type="pmid">31501837</pub-id></element-citation></ref><ref id="R54"><label>54</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Cook</surname><given-names>M</given-names></name><name><surname>Stérin</surname><given-names>T</given-names></name><name><surname>Woods</surname><given-names>D</given-names></name></person-group><source>Small tile sets that compute while solving mazes</source><person-group person-group-type="editor"><name><surname>Lakin</surname><given-names>M</given-names></name><name><surname>Sulc</surname><given-names>P</given-names></name></person-group><conf-name>27th International Conference on DNA Computing and Molecular Programming (DNA 27)</conf-name><year>2021</year><volume>205</volume><fpage>1</fpage><lpage>20</lpage><elocation-id>8</elocation-id></element-citation></ref><ref id="R55"><label>55</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name><surname>Berleant</surname><given-names>JD</given-names></name></person-group><source>Rational Design of DNA Sequences with Non-Orthogonal Binding Interactions</source><conf-name>DNA 29: The 29th International Conference on DNA Computing and Molecular Programming</conf-name><year>2023</year></element-citation></ref><ref id="R56"><label>56</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>King</surname><given-names>AD</given-names></name><etal/></person-group><article-title>Quantum critical dynamics in a 5,000-qubit programmable spin glass</article-title><source>Nature</source><year>2023</year><fpage>1</fpage><lpage>6</lpage><pub-id pub-id-type="pmid">37076625</pub-id></element-citation></ref></ref-list><ref-list><ref id="R57"><label>57</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fornace</surname><given-names>ME</given-names></name><name><surname>Porubsky</surname><given-names>NJ</given-names></name><name><surname>Pierce</surname><given-names>NA</given-names></name></person-group><article-title>A unified dynamic programming framework for the analysis of interacting nucleic acid strands: Enhanced models, scalability, and speed</article-title><source>ACS Synthetic Biology</source><year>2020</year><volume>9</volume><fpage>2665</fpage><lpage>2678</lpage><pub-id pub-id-type="pmid">32910644</pub-id></element-citation></ref><ref id="R58"><label>58</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Padirac</surname><given-names>A</given-names></name><name><surname>Fujii</surname><given-names>T</given-names></name><name><surname>Rondelez</surname><given-names>Y</given-names></name></person-group><article-title>Quencher-Free Multiplexed Monitoring of DNA Reaction Circuits</article-title><source>Nucleic Acids Research</source><year>2012</year><month>Aug</month><volume>40</volume><elocation-id>e118</elocation-id><pub-id pub-id-type="doi">10.1093/nar/gks621</pub-id><pub-id pub-id-type="pmcid">PMC3424586</pub-id><pub-id pub-id-type="pmid">22753028</pub-id></element-citation></ref><ref id="R59"><label>59</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>You</surname><given-names>Y</given-names></name><name><surname>Tataurov</surname><given-names>AV</given-names></name><name><surname>Owczarzy</surname><given-names>R</given-names></name></person-group><article-title>Measuring Thermodynamic Details of DNA Hybridization Using Fluorescence</article-title><source>Biopolymers</source><year>2011</year><volume>95</volume><fpage>472</fpage><lpage>486</lpage><pub-id pub-id-type="doi">10.1002/bip.21615</pub-id><pub-id pub-id-type="pmcid">PMC3082624</pub-id><pub-id pub-id-type="pmid">21384337</pub-id></element-citation></ref><ref id="R60"><label>60</label><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Doty</surname><given-names>D</given-names></name><name><surname>Lee</surname><given-names>B</given-names></name></person-group><article-title>nuad: NUcleic Acid Designer. Version version as of 2021. Uses, and generalises, sequence design principles from <sup>11</sup></article-title><year>2022</year><month>Mar</month><comment><ext-link ext-link-type="uri" xlink:href="https://github.com/UC-Davis-molecular-computing/nuad">https://github.com/UC-Davis-molecular-computing/nuad</ext-link></comment></element-citation></ref><ref id="R61"><label>61</label><element-citation publication-type="web"><person-group person-group-type="author"><name><surname>Evans</surname><given-names>CG</given-names></name></person-group><article-title>alhambra-mixes. Software library for assisting and automating experiments with DNA tile sets</article-title><year>2022</year><comment><ext-link ext-link-type="uri" xlink:href="https://github.com/cgevans/mixes">https://github.com/cgevans/mixes</ext-link></comment></element-citation></ref><ref id="R62"><label>62</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Evans</surname><given-names>C</given-names></name></person-group><article-title>QSLib v0.11.0. Version v0.11.0. Python package for interacting with Applied Biosystems’ QuantStudio qPCR machines</article-title><year>2023</year><month>Nov</month><pub-id pub-id-type="doi">10.5281/zenodo.10072151</pub-id></element-citation></ref></ref-list></back><floats-group><fig id="F1" position="float"><label>Fig. 1</label><caption><title>Classical versus thermodynamically favoured computation.</title><p><bold>a</bold>. Classical molecular computers have an intended target/final state that is out-of-equilibrium. Errors show up as unintended nucleation of incorrect structures in algorithmic self-assembly<sup><xref ref-type="bibr" rid="R13">13</xref></sup> or leak in strand displacement circuits.<sup><xref ref-type="bibr" rid="R16">16</xref></sup> Digital electronic computers have similar issues, where decades of research have lowered error rates but with large energetic costs.<sup><xref ref-type="bibr" rid="R9">9</xref></sup> <bold>b</bold>. Thermodynamically favoured computation has the output state being the energetically most favoured. Also, the input state should be easy to prepare. Hence, computation happens by the system naturally and automatically going to equilibrium (Supplementary Notes S1, S2).</p></caption><graphic xlink:href="EMS207388-f001"/></fig><fig id="F2" position="float"><label>Fig. 2</label><caption><title>Scaffolded DNA computer (SDC) design principles.</title><p><bold>a</bold>. Reprogrammable SDC architecture: scaffold with <italic>N</italic> positions, each position has a set of competing tiles with compute domains on left/right sides. <bold>b</bold>. Key concepts: (1) Tiles at high excess concentration over the scaffold, ensuring each position gets a tile. (2) Errors (mismatching-colours) have an enthalpic penalty that leads to their correction via replacement. (3) Weak-affinity compute domains, to minimise unintended interactions such as off-scaffold assembly. <bold>c</bold>. From an easily-prepared start state the computation eventually leads to an enthalpically favoured fully-bound target configuration. <bold>d</bold>. Abstraction levels. <bold>e</bold>. Strand-level abstraction of bind and replace primitives. <bold>f</bold>. Probability of target configuration at equilibrium for a given temperature via a partition function (PF) algorithm.<sup><xref ref-type="bibr" rid="R30">30</xref></sup> <bold>g</bold>. Compute domains encode program instructions (top) and input bits (bottom). P<sc>ARITY</sc> program computes whether an 8-bit input <monospace>10100100</monospace> has an odd or even number of 1’s using program/parity bits <monospace>0</monospace> or <monospace>1</monospace> (top) and 4 input bit-pairs (<monospace>10</monospace>, <monospace>10</monospace>, <monospace>01</monospace>, <monospace>00</monospace>, bottom). <bold>h</bold>. Reprogrammability by choosing strands from a large pool. Two P<sc>ARITY</sc> examples emphasise that output depends on every bit of input (orange panel: input <monospace>10100100</monospace> reports output <monospace>1</monospace>; gray: input <monospace>00100100</monospace> reports output <monospace>0</monospace>). Right: intended fluorescence readout cartoon, with no signal loss.</p></caption><graphic xlink:href="EMS207388-f002"/></fig><fig id="F3" position="float"><label>Fig. 3</label><caption><title>Programming and implementation of the A<sc>DDITION</sc> FSM.</title><p><bold>a</bold>. General compilation scheme from FSM into tiles, each compute domain encodes an FSM state and transition. <bold>b</bold>. The A<sc>DDITION</sc> FSM adds two binary numbers <italic>x</italic> + <italic>y</italic> = <italic>z</italic>: each transition reads two bits, <italic>x</italic><sub><italic>i</italic></sub> and <italic>y</italic><sub><italic>i</italic></sub>, writes output bit <italic>z</italic><sub><italic>i</italic></sub> and enters carry state <italic>c</italic><sub><italic>i</italic></sub> ∈ {0, 1}. The A<sc>DDITION</sc> FSM is compiled to an SDC with two tiles per scaffold position. <bold>c</bold>. Example: 10+3 = 13, using colour to illustrate how bit positions map to scaffold positions. The target configuration is the most favourable as it is the only configuration with zero mismatches. <bold>d</bold>. Strand diagrams for reporting at each of positions A (output bit = <monospace>1</monospace>), B (= <monospace>0</monospace>), C (= <monospace>1</monospace>), and D (= <monospace>1</monospace>). Unused positions are covered with a single-domain complementary strand. <bold>e</bold>. Experimental result for 10+3 = 13, as well as three other A<sc>DDITION</sc> experiments. In each case the traces show signal with respect to time/temperature, and the dot plot shows completion level as mean of 22 datapoints at 20 °C.</p></caption><graphic xlink:href="EMS207388-f003"/></fig><fig id="F4" position="float"><label>Fig. 4</label><caption><title>Programming 10 SDC programs of increasing complexity.</title><p><bold>a</bold>. Simple B<sc>IT</sc>C<sc>OPY</sc> program that acts as a distance-4 wire; 8 traces show copying of input <monospace>0</monospace> or <monospace>1</monospace>, to positions <italic>A, B, C</italic> or <italic>D</italic>. <bold>b</bold>. P<sc>ARITY</sc> program: 8-bit binary input (2 input bits per compute domain), outputs <monospace>1</monospace> if the number of <monospace>1</monospace>s is odd and outputs <monospace>0</monospace> otherwise. <bold>c</bold>. M<sc>ULTIPLY</sc>B<sc>Y</sc>3, multiplies a base 2 number by 3. <bold>d</bold>. 3-<sc>STATE</sc> N<sc>ONDETERMINISTIC</sc> F<sc>INITE</sc> A<sc>UTOMATON</sc>: each 4-bit input causes some fraction of Yes/No outputs (giving different ratios of target structures). <bold>e</bold>. D<sc>IV</sc>B<sc>Y</sc>2 divides a 4-digit base-3 number by 2, giving output in base 3 (ternary) using a novel temperature-dependent spurious-quenching system. Ternary output ‘<monospace>2</monospace>’ should roughly track the <italic>trit-2 control</italic> in dashed-purple (i.e. orange curve in 38/2 = 19 (left), red in 76/2 = 38 (right). <bold>f</bold>. Given a value <italic>x</italic> ∈ 0, 1 …, 7 in binary, C<sc>OUNTER</sc> counts <italic>x</italic> + 4 steps (e.g. input 2 at <italic>A</italic> yields output 6 at <italic>D</italic>). <bold>g</bold>. R<sc>ULE</sc>110 simulates 4 steps of a 3-bit instance of the cellular automaton Rule 110 (with boundary condition <monospace>0</monospace> on the sides). <bold>h</bold>. G<sc>RAPH</sc>R<sc>EACH</sc>: finding if there is a path from start vertex <italic>s</italic> to goal/quench vertex <italic>q</italic> by forming a target structure for each path from <italic>s</italic>. <bold>i</bold>. B<sc>ALANCED</sc>B<sc>RACKETS</sc>: accepts balanced brackets, e.g. (()) and rejects unbalanced brackets, e.g. ())): increments for an open bracket and decrements for a matching close bracket, quenching only if the count is 0 at <italic>D</italic>.</p></caption><graphic xlink:href="EMS207388-f004"/></fig><fig id="F5" position="float"><label>Fig. 5</label><caption><title>Renewable SDC programs.</title><p><bold>a</bold>. Principles for renewable SDC programs: At each cycle, to switch the target equilibrium we add new input <italic>x</italic>′ and blocker (complement) of old input <italic>x</italic> and reanneal to quickly reach the new target equilibrium. <bold>b</bold>. Strand-level renewable design: at each cycle add two strands, and reanneal. <bold>c</bold>. Renewable B<sc>IT</sc>C<sc>OPY</sc> data: 25 runs, starting with input bit <italic>x</italic> = <monospace>1</monospace>, repeatedly cycling between input bit-<monospace>0</monospace> and <monospace>1</monospace> as in panel B: the blocker and new input were added at ~ 5.7× over scaffold (1× = 100 nM) in a 0.2 <italic>μ</italic>L droplet at each renewing cycle (0 mins). Sample was reannealed from 80 to 48 °C in 12 mins (holding at 80 and 48 °C for 1 min (shown), and (not shown) a 3−15 mins gap for inter-renew sample-handling). <bold>d</bold>. Two renewable A<sc>DDITION</sc> programs: to facilitate renewing a large number (8) of distinct inputs at position <italic>A</italic>, the programs have 8 tiles competing at <italic>B</italic>, see <xref ref-type="supplementary-material" rid="SD1">Supplementary Note S8.2</xref>). <bold>e</bold>. 24 runs of renewable C<sc>OUNTER</sc> that counts from input <italic>x</italic> to <italic>x</italic> + 4. Although conceptually simple, C<sc>OUNTER</sc> has high competitive complexity with 8 tiles competing at scaffold positions <italic>B, C, D</italic> for base-8 counting. Each plot shows 8 samples, each sample ran 24 times: row 1 had 8 distinct inputs <italic>x</italic> ∈ {0, 1, …, 7} in each of the 8 samples, then row 2 and 3 repeat those 8 inputs in order (192 traces total).</p></caption><graphic xlink:href="EMS207388-f005"/></fig><fig id="F6" position="float"><label>Fig. 6</label><caption><title>Speed-up and system scale-up.</title><p><bold>a</bold>. Super-fast anneal (3 mins) for 4 programs, with the dot plot showing readout at ~1 min. <bold>b</bold>. Scale-up of B<sc>IT</sc>C<sc>OPY</sc> program to an 11-domain scaffold (scaff-288), yields are improved by longer anneal times, and DNA-base mismatches to improve the scaffold energy landscape. <bold>c</bold>. Scale-up of A<sc>DDITION</sc> program to a 25-domain scaffold (scaff-624). The program logic uses sinks/non-sinks to provide explicit error-correction by absorbing carry bits in green regions of the plot, which truncates error pathways in the energy landscape. <bold>d</bold>. The I<sc>SOENERGETIC</sc>B<sc>IT</sc>C<sc>OPY</sc> program was explicitly designed to have isoenergetic configurations: each scaffold position’s competing tiles have the same set of domains, but ordered differently. The 25-domain experiments used scaff-624. In (b) and (d), high and low controls at each position allowed sample readouts to be scaled per-position between their respective controls, while in (c), controls are shown directly.</p></caption><graphic xlink:href="EMS207388-f006"/></fig></floats-group></article>