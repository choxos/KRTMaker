<!DOCTYPE article
 PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2 20190208//EN" "JATS-archivearticle1.dtd">
<article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="preprint"><?all-math-mml yes?><?use-mml?><?origin ukpmcpa?><front><journal-meta><journal-id journal-id-type="nlm-ta">bioRxiv</journal-id><journal-title-group><journal-title>bioRxiv : the preprint server for biology</journal-title></journal-title-group><issn pub-type="ppub"/></journal-meta><article-meta><article-id pub-id-type="manuscript">EMS156263</article-id><article-id pub-id-type="doi">10.1101/2022.10.21.513318</article-id><article-id pub-id-type="archive">PPR562311</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group><subj-group subj-group-type="europepmc-category"><subject>Covid-19</subject></subj-group></article-categories><title-group><article-title>ViReaDB: A user-friendly database for compactly storing viral sequence data and rapidly computing consensus genome sequences</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Moshiri</surname><given-names>Niema</given-names></name><xref ref-type="aff" rid="A1">1</xref><xref ref-type="corresp" rid="CR1">*</xref></contrib></contrib-group><aff id="A1"><label>1</label>Department of Computer Science &amp; Engineering, UC San Diego, La Jolla, 92093, USA</aff><author-notes><corresp id="CR1"><label>*</label>To whom correspondence should be addressed</corresp></author-notes><pub-date pub-type="nihms-submitted"><day>28</day><month>10</month><year>2022</year></pub-date><pub-date pub-type="preprint"><day>24</day><month>10</month><year>2022</year></pub-date><permissions><ali:free_to_read/><license><ali:license_ref>https://creativecommons.org/licenses/by-nd/4.0/</ali:license_ref><license-p>This work is licensed under a <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nd/4.0/">CC BY-ND 4.0 International license</ext-link>.</license-p></license></permissions><abstract><sec id="S1"><title>Motivation</title><p id="P1">In viral molecular epidemiology, reconstruction of consensus genomes from sequence data is critical for tracking mutations and variants of concern. However, storage of the raw sequence data can become prohibitively large, and computing consensus genome from sequence data can be slow and requires bioinformatics expertise.</p></sec><sec id="S2"><title>Results</title><p id="P2">ViReaDB is a user-friendly database system for compactly storing viral sequence data and rapidly computing consensus genome sequences. From a dataset of 1 million trimmed mapped SARS-CoV-2 reads, it is able to compute the base counts and the consensus genome in 16 minutes, store the reads alongside the base counts and consensus in 50 MB, and optionally store just the base counts and consensus (without the reads) in 300 KB.</p></sec><sec id="S3"><title>Availability</title><p id="P3">ViReaDB is freely available on PyPI (<ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/vireadb">https://pypi.org/project/vireadb</ext-link>) and on GitHub (<ext-link ext-link-type="uri" xlink:href="https://github.com/niemasd/ViReaDB">https://github.com/niemasd/ViReaDB</ext-link>) as an open-source Python software project.</p></sec><sec id="S4"><title>Contact</title><p id="P4"><email>niema@ucsd.edu</email></p></sec></abstract></article-meta></front><body><sec id="S5" sec-type="intro"><label>1</label><title>Introduction</title><p id="P5">Viral molecular surveillance, a technique in which viral genomes are reconstructed from sequence data generated by samples collected from patients as well as the environment (e.g. wastewater) and are monitored in real-time or near real-time, has been critical throughout the COVID-19 pandemic (<xref ref-type="bibr" rid="R9">Oude Munnink <italic>et al</italic>., 2021</xref>; <xref ref-type="bibr" rid="R5">Karthikeyan <italic>et al</italic>., 2022</xref>). The reconstruction of consensus genome sequences from raw sequence data requires the use of various bioinformatics pipelines, which can be slow and can require non-trivial computational expertise (<xref ref-type="bibr" rid="R12">Truong Nguyen <italic>et al</italic>., 2021</xref>; <xref ref-type="bibr" rid="R10">Posada-Céspedes <italic>et al</italic>., 2021</xref>; <xref ref-type="bibr" rid="R8">Moshiri <italic>et al</italic>., 2022</xref>).</p><p id="P6">To minimize the need for redundant reanalysis of raw data, final consensus genomes can be stored in databases such as GISAID, which currently stores over 13.5 million SARS-CoV-2 genome sequences, over 5.5 million of which are complete genomes with high coverage (<xref ref-type="bibr" rid="R11">Shu &amp; McCauley, 2017</xref>). However, the GISAID database, which is currently the most prominent database to which researchers submit SARS-CoV-2 and Monkeypox genome sequences, relies on the submitter to verify the validity of the genome sequence. Because the database does not store raw sequence data or base counts (likely due to storage limitations), errors in genome sequences resulting from bioinformatics errors cannot be detected and corrected purely from data stored within the database. Instead, individuals must request raw data directly from the submitting lab (Pekar <italic>et al</italic>., 2022).</p><p id="P7">Here, we introduce ViReaDB, a user-friendly database for compactly storing viral sequence data and rapidly computing consensus genome sequences. By providing a user-friendly interface to rapidly compute base counts and consensus genomes directly within the database itself, ViReaDB aims to minimize the potential for bioinformatics error, and by storing raw data and base counts alongside the final consensus genomes, ViReaDB aims to improve reproducibility and validation of viral consensus genome sequences.</p></sec><sec id="S6" sec-type="results | discussion"><label>2</label><title>Results and discussion</title><p id="P8">ViReaDB is a cross-platform database interface written in Python 3 and depends on Pysam (<xref ref-type="bibr" rid="R1">Bonfield <italic>et al</italic>., 2021</xref>) and NumPy (<xref ref-type="bibr" rid="R4">Harris <italic>et al</italic>., 2020</xref>). ViReaDB optionally depends on Samtools (<xref ref-type="bibr" rid="R7">Li <italic>et al</italic>., 2009</xref>) to add support for input files in the SAM or BAM format, and it optionally depends on Minimap2 (<xref ref-type="bibr" rid="R6">Li, 2018</xref>) to add support for input files in the FASTQ format (which ViReaDB will map to the reference genome).</p><p id="P9">The underlying ViReaDB database format is a SQLite database with two tables: “meta” and “seqs”. The “meta” table stores metadata about the database: the ViReaDB version number that created it as well as the reference genome name, sequence, and Minimap2 index (if Minimap2 is installed). The “seqs” table stores the viral sequence data added to the database, where each entry has the following items: the raw sequence data stored as an LZMA-compressed CRAM 3.0 file (<xref ref-type="bibr" rid="R3">Fritz <italic>et al</italic>., 2011</xref>), an LZMA-compressed NumPy array containing base counts at all positions of the reference genome, an LZMA-compressed JSON containing insertion counts, and the LZMA-compressed consensus genome sequenced.</p><p id="P10">A new ViReaDB can be created via <bold>create_db</bold><monospace>(db_fn,ref_fn)</monospace>, where <monospace>db_fn</monospace> is the desired output SQLite file, and <monospace>ref_fn</monospace> is the reference genome FASTA. Alternatively, an existing ViReaDB can be loaded via <bold>load_db</bold><monospace>(db_fn)</monospace>, or multiple ViReaDBs can be merged via <bold>merge_dbs</bold><monospace>(out_db_fn, in_db_fns)</monospace>, where <monospace>in_db_fns</monospace> is a list of input ViReaDB SQLite files. The user can then add a new entry to a ViReaDB via <bold>add_entry</bold><monospace>(ID, reads_fn)</monospace>, where ID is the unique identifier of this sample, and <monospace>reads_fn</monospace> is the raw sequence data of this sample in the CRAM, BAM, SAM, or FASTQ format. CRAM files are added as-is, BAM and SAM files are converted to LZMA-compressed CRAM using Samtools, and FASTQ files are mapped to the reference genome using Minimap2 and are converted to LZMA-compressed CRAM using Samtools. After an entry is added to a ViReaDB, base counts and insertion counts can be computed from the CRAM using Pysam via <bold>compute_counts</bold><monospace>(ID)</monospace>: counters are pre-allocated for all positions of the reference genome, and read mappings are processed on-the-fly to increment the corresponding base counts of the positions covered by the read and to increment insertion counts. Once base and insertion counts have been computed, which is the most computationally-expensive aspect of ViReaDB, a consensus genome can be computed from the counts via <bold>compute_consensus</bold><monospace>(ID)</monospace>. Comprehensive usage details can be found in the ViReaDB documentation, and example commands can be found in the ViReaDB Cookbook, both of which can be found on the GitHub repository.</p><p id="P11">Because of LZMA compression, base counts, insertion counts, and consensus genome sequences are extremely small when stored in a ViReaDB and are constant in file size with respect to sequencing depth (they scale linearly with reference genome length): the vast majority of ViReaDB file size is due to the raw reads. In order to provide a highly-compact manner in which data can be shared, ViReaDB allows the user to remove reads from a given entry, resulting in just base/insertion counts and consensus genome sequence that occupy less than 400 KB total. This provides a middle-ground for data sharing: rather than being forced to choose between sharing final consensus genome sequences (which provide no contextual information about the raw data) or sharing the raw CRAM/BAM/SAM/FASTQ data (which can be prohibitively large), users can share the consensus sequence packaged with base/insertion counts to provide context about coverage and confidence in base calls, but without the burden of large file sizes.</p><p id="P12">In order to benchmark ViReaDB with respect to file size runtime, we obtained a SARS-CoV-2 amplicon sequencing dataset in which 2,607 samples were sequenced PE150 across four lanes of an S4 flow cell to an average read count of 4.58 M read pairs per sample using the SWIFT v2 protocol on an Illumina NovaSeq 6000 (<xref ref-type="bibr" rid="R8">Moshiri <italic>et al</italic>., 2022</xref>). Samples were mapped to the NC_045512.2 reference genome using Minimap2 and were trimmed using iVar Trim (Grubaugh <italic>et al</italic>., 2019). We selected the single highest-depth sample and randomly subsampled it to <italic>n</italic> = 100, 1K, 10K, 100K, and 1M successfully-mapped reads, with 10 replicates for each <italic>n</italic>. We then built ViReaDB databases, computed base/insertion counts, and computed consensus sequences from each subsampled replicate.</p><p id="P13">When including reads, ViReaDB file size grows roughly linearly for large <italic>n</italic>, and a ViReaDB storing 1 million mapped reads is ~50 MB. After computing base/insertion counts and consensus genomes, removing reads from the ViReaDB results in files smaller than 400 KB. Computing base/insertion counts scales roughly linearly with the number of mapped reads and takes ~660 seconds (~11 minutes) on a dataset of 1 million reads. Computing the consensus genome from base/insertion counts takes less than 1 second, even with 1 million reads (<xref ref-type="fig" rid="F1">Fig. 1</xref>).</p><p id="P14">Future ViReaDB updates will (1) migrate to CRAM 3.1 and 4.0 upon official release for improved compression (<xref ref-type="bibr" rid="R2">Bonfield, 2022</xref>), and (2) implement multithreading in computing base/insertion counts.</p></sec></body><back><ack id="S7"><title>Acknowledgements</title><p>We would like to thank Rob Knight, Louise Laurent, Kristian Andersen, and Karthik Gangavarapu for fruitful conversations.</p><sec id="S8"><title>Funding</title><p>This work has been supported by UC San Diego faculty research funds.</p></sec></ack><fn-group><fn id="FN1" fn-type="conflict"><p id="P15"><italic>Conflict of Interest:</italic> none declared.</p></fn></fn-group><ref-list><ref id="R1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bonfield</surname><given-names>JK</given-names></name><etal/></person-group><article-title>HTSlib: C library for reading/writing high-throughput sequencing data</article-title><source>GigaScience</source><year>2021</year><volume>10</volume><issue>2</issue><elocation-id>giab007</elocation-id></element-citation></ref><ref id="R2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bonfield</surname><given-names>JK</given-names></name></person-group><article-title>CRAM 3.1: advances in the CRAM file format</article-title><source>Bioinformatics</source><year>2022</year><volume>38</volume><issue>6</issue><fpage>1497</fpage><lpage>1503</lpage></element-citation></ref><ref id="R3"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fritz</surname><given-names>MHY</given-names></name><etal/></person-group><article-title>Efficient storage of high throughput DNA sequencing data using reference-based compression</article-title><source>Genome Res</source><year>2011</year><volume>21</volume><issue>5</issue><fpage>734</fpage><lpage>740</lpage></element-citation></ref><ref id="R4"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Harris</surname><given-names>CR</given-names></name><etal/></person-group><article-title>Array programming with NumPy</article-title><source>Nature</source><year>2020</year><volume>585</volume><fpage>357</fpage><lpage>362</lpage></element-citation></ref><ref id="R5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Karthikeyan</surname><given-names>S</given-names></name><etal/></person-group><article-title>Wastewater sequencing reveals early cryptic SARS-CoV-2 variant transmission</article-title><source>Nature</source><year>2022</year><volume>609</volume><fpage>101</fpage><lpage>108</lpage></element-citation></ref><ref id="R6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>H</given-names></name></person-group><article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title><source>Bioinformatics</source><year>2018</year><volume>34</volume><issue>18</issue><fpage>3094</fpage><lpage>3100</lpage></element-citation></ref><ref id="R7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>H</given-names></name><etal/></person-group><article-title>The Sequence Alignment/Map format and SAMtools</article-title><source>Bioinformatics</source><year>2009</year><volume>25</volume><issue>16</issue><fpage>2078</fpage><lpage>2079</lpage></element-citation></ref><ref id="R8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Moshiri</surname><given-names>N</given-names></name><etal/></person-group><article-title>The ViReflow pipeline enables user friendly large scale viral consensus genome reconstruction</article-title><source>Sci Rep</source><year>2022</year><volume>12</volume><fpage>5077</fpage></element-citation></ref><ref id="R9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Oude Munnink</surname><given-names>BB</given-names></name><etal/></person-group><article-title>The next phase of SARS-CoV-2 surveillance: real-time molecular epidemiology</article-title><source>Nat Med</source><year>2021</year><volume>27</volume><fpage>1518</fpage><lpage>1524</lpage></element-citation></ref><ref id="R10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Posada-Céspedes</surname><given-names>S</given-names></name><etal/></person-group><article-title>V-pipe: a computational pipeline for assessing viral genetic diversity from high-throughput data</article-title><source>Bioinformatics</source><year>2021</year><volume>37</volume><issue>12</issue><fpage>1673</fpage><lpage>1680</lpage></element-citation></ref><ref id="R11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shu</surname><given-names>Y</given-names></name><name><surname>McCauley</surname><given-names>J</given-names></name></person-group><article-title>GISAID: Global initiative on sharing all influenza data - from vision to reality</article-title><source>Euro Surveill</source><year>2017</year><volume>22</volume><issue>13</issue><elocation-id>30494</elocation-id></element-citation></ref><ref id="R12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Truong Nguyen</surname><given-names>PT</given-names></name><etal/></person-group><article-title>HAVoC, a bioinformatic pipeline for reference-based consensus assembly and lineage assignment for SARS-CoV-2 sequences</article-title><source>BMC Bioinf</source><year>2021</year><volume>22</volume><fpage>373</fpage></element-citation></ref></ref-list></back><floats-group><fig id="F1" position="float"><label>Fig. 1</label><caption><title>Benchmark results.</title><p>File size (top) and execution time (bottom) for SARS-CoV-2 sequence datasets with <italic>n</italic> = 100, 1K, 10K, 100K, and 1M mapped reads. All runs were executed sequentially on a 2.8 GHz Intel i7-1165G7 CPU with 16 GB of memory.</p></caption><graphic xlink:href="EMS156263-f001"/></fig></floats-group></article>