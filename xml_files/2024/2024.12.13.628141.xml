<!DOCTYPE article
 PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2 20190208//EN" "JATS-archivearticle1.dtd">
<article xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" article-type="preprint"><?all-math-mml yes?><?use-mml?><?origin ukpmcpa?><front><journal-meta><journal-id journal-id-type="nlm-ta">bioRxiv</journal-id><journal-title-group><journal-title>bioRxiv : the preprint server for biology</journal-title></journal-title-group><issn pub-type="epub">2692-8205</issn></journal-meta><article-meta><article-id pub-id-type="manuscript">EMS202294</article-id><article-id pub-id-type="doi">10.1101/2024.12.13.628141</article-id><article-id pub-id-type="archive">PPR957503</article-id><article-version-alternatives><article-version article-version-type="status">preprint</article-version><article-version article-version-type="number">1</article-version></article-version-alternatives><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Genotyping Short Tandem Repeats Across Copy Number Alterations, Aneuploidies, and Polyploid Organisms</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-3424-0136</contrib-id><name><surname>Verbiest</surname><given-names>Max A.</given-names></name><xref ref-type="aff" rid="A1">1</xref><xref ref-type="aff" rid="A2">2</xref><xref ref-type="aff" rid="A3">3</xref><xref ref-type="corresp" rid="CR1">*</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid">https://orcid.org/0000-0003-1066-927X</contrib-id><name><surname>Grassi</surname><given-names>Elena</given-names></name><xref ref-type="aff" rid="A4">4</xref><xref ref-type="aff" rid="A5">5</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8196-7608</contrib-id><name><surname>Bertotti</surname><given-names>Andrea</given-names></name><xref ref-type="aff" rid="A4">4</xref><xref ref-type="aff" rid="A5">5</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid">https://orcid.org/0000-0001-8145-7966</contrib-id><name><surname>Anisimova</surname><given-names>Maria</given-names></name><xref ref-type="aff" rid="A1">1</xref><xref ref-type="aff" rid="A3">3</xref><xref ref-type="corresp" rid="CR1">*</xref></contrib></contrib-group><aff id="A1"><label>1</label>Institute of Computational Life Sciences, <institution-wrap><institution-id institution-id-type="ror">https://ror.org/05pmsvm27</institution-id><institution>Zurich University of Applied Sciences</institution></institution-wrap>, <postal-code>8820</postal-code><city>Wädenswil</city>, <country country="CH">Switzerland</country></aff><aff id="A2"><label>2</label>Department of Molecular Life Sciences, <institution-wrap><institution-id institution-id-type="ror">https://ror.org/02crff812</institution-id><institution>University of Zurich</institution></institution-wrap>, <postal-code>8057</postal-code><city>Zürich</city>, <country country="CH">Switzerland</country></aff><aff id="A3"><label>3</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/002n09z45</institution-id><institution>Swiss Institute of Bioinformatics</institution></institution-wrap>, <postal-code>1015</postal-code><city>Lausanne</city>, <country country="CH">Switzerland</country></aff><aff id="A4"><label>4</label>Department of Oncology, <institution-wrap><institution-id institution-id-type="ror">https://ror.org/048tbm396</institution-id><institution>University of Torino</institution></institution-wrap>, <postal-code>10060</postal-code><city>Candiolo, Torino</city>, <country country="IT">Italy</country></aff><aff id="A5"><label>5</label><institution-wrap><institution-id institution-id-type="ror">https://ror.org/04wadq306</institution-id><institution>Candiolo Cancer Institute - FPO IRCCS</institution></institution-wrap>, <postal-code>10060</postal-code><city>Candiolo, Torino</city>, <country country="IT">Italy</country></aff><author-notes><corresp id="CR1">
<label>*</label>Corresponding authors <email>max.verbiest@zhaw.ch</email>, <email>maria.anisimova@zhaw.ch</email></corresp></author-notes><pub-date pub-type="nihms-submitted"><day>17</day><month>01</month><year>2025</year></pub-date><pub-date pub-type="preprint"><day>17</day><month>12</month><year>2024</year></pub-date><permissions><ali:free_to_read/><license><ali:license_ref>https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>This work is licensed under a <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0 International license</ext-link>.</license-p></license></permissions><abstract><p id="P1">Short tandem repeats (STRs) are a rich source of genetic variation, but are difficult to genotype. While specialized repeat variant callers exist, they typically assume a euploid human genome. This means recent findings regarding phenotypic effects of STR variants in human health and disease cannot be readily extended to polyploid organisms or cancer, which is characterised by copy number alterations (CNAs). Here we present ConSTRain, a novel STR variant caller that explicitly accounts for the copy number of loci in its genotyping approach. We benchmark ConSTRain using a euploid human 100X whole genome sequencing sample where it calls STR allele lengths for over 1.7×10<sup>6</sup> loci in under 20 minutes with an accuracy of 98.28%. Subsequently, we show that ConSTRain resolves complex STR genotypes in an artificial trisomy 21 sample and a polyploid Dwarf Cavendish banana harbouring a large duplication. Finally, we analyse a microsatellite instable colorectal cancer tumoroid, where ConSTRain tackles CNAs and whole-genome duplications. ConSTRain is the first STR variant caller that allows for the investigation of repeats affected by CNAs, aneuploidies, and polyploid genomes. This unlocks the investigation of STRs across a wide range of contexts and organisms where they previously could not be easily studied.</p></abstract><kwd-group><kwd>Short tandem repeat</kwd><kwd>Microsatellite</kwd><kwd>Variant calling</kwd><kwd>Cancer</kwd><kwd>Copy number alteration</kwd><kwd>Polyploidy</kwd></kwd-group></article-meta></front><body><sec id="S1" sec-type="intro"><title>Introduction</title><p id="P2">Short tandem repeats (STRs), also known as microsatellites, are genomic regions where a DNA motif one to six base pairs (bp) in length is repeated consecutively. STRs are highly variable. Especially prevalent are insertion and deletion (indel) mutations that expand or contract the repeat by one or more unit [<xref ref-type="bibr" rid="R1">1</xref>]. Such STR variants may cause frameshift mutations or affect the phenotype by regulating gene expression levels in health and disease [<xref ref-type="bibr" rid="R2">2</xref>, <xref ref-type="bibr" rid="R3">3</xref>, <xref ref-type="bibr" rid="R4">4</xref>]. STR loci for which the allele length is associated with gene expression levels are called expression STRs (eSTRs).</p><p id="P3">The distinct mutational characteristics of STRs cause issues when genotyping them with general-purpose variant calling tools. To this end, specialized STR variant calling algorithms have been developed [<xref ref-type="bibr" rid="R5">5</xref>, <xref ref-type="bibr" rid="R6">6</xref>, <xref ref-type="bibr" rid="R7">7</xref>, <xref ref-type="bibr" rid="R8">8</xref>]. While these tools enable accurate variant calling of STR loci from human sequencing samples, there are several key points they do not address. Notably, current STR genotypers were developed with the euploid human genome in mind. This means such tools expect two copies of each repeat locus to be present, with some tools supporting a ploidy of one for sex chromosomes.</p><p id="P4">While this may generally hold for mammalian genomes, it is not representative of the full range of genomic variation. Copy number alterations (CNAs) can change the ploidy of parts of a chromosome — and thus of the STRs located in those regions. CNAs can be present in the germline of healthy individuals [<xref ref-type="bibr" rid="R9">9</xref>]. Furthermore, somatic CNAs are a key feature of cancer, where they contribute to carcinogenesis by deleting and upregulating biological functions [<xref ref-type="bibr" rid="R10">10</xref>]. There are also more extreme cases where the ploidies of whole chromosomes (e.g., trisomy 21) or the full genome (i.e., whole-genome duplications) are affected. We recently described a panel of putative eSTRs in colorectal cancer [<xref ref-type="bibr" rid="R4">4</xref>]. However, since current STR variant callers do not account for CNAs, our eSTR detection approach had to exclude all STRs that were located in regions affected by CNAs. This lead to a substantial fraction of information — around 15% of all calls — being removed, meaning we may have missed important eSTR loci. Besides not addressing aneuploidies or CNAs, the focus of current STR variant callers on the human genome also means that such tools cannot be readily used to study STRs in polyploid organisms. While polyploidy occurs sporadically in animals, it is widespread in plants [<xref ref-type="bibr" rid="R11">11</xref>]. Among the polyploid plants are many important food crops like wheat, maize, and banana [<xref ref-type="bibr" rid="R11">11</xref>, <xref ref-type="bibr" rid="R12">12</xref>, <xref ref-type="bibr" rid="R13">13</xref>]. Despite the societal importance of such species, current computational tools do not allow for the extension of findings regarding the phenotypic effects of STR variants to polyploid organisms.</p><p id="P5">To address these open issues, we here introduce a new STR variant caller named ConSTRain (<underline><bold>co</bold></underline>py number guided <underline><bold>STR</bold></underline> <underline><bold>a</bold></underline>llele <underline><bold>in</bold></underline>ference). The fundamental idea of ConSTRain is that the copy number of each STR locus is explicitly considered in the variant calling process. The copy number can be set at the chromosome level by specifying the karyotype of the organism. Furthermore, ConSTRain allows the copy numbers of specific genomic regions to be changed by specifying CNAs known to be present in a sample.</p><p id="P6">We demonstrate that our new method is highly competitive: ConSTRain’s accuracy is at least as high as state-of-the-art STR variant callers on a euploid human benchmark, while the runtime is substantially lower (especially when running multithreaded). Furthermore, we apply ConSTRain in aneuploid settings on simulated trisomy 21 data, and on whole genome sequencing (WGS) data from a triploid <italic>Musa acuminata</italic> Dwarf Cavendish banana. The original publication of this <italic>M. acuminata</italic> sequencing data reported a large duplication on the long arm of chromosome 2 [<xref ref-type="bibr" rid="R13">13</xref>]. We show that ConSTRain is able to account for this duplication when the coordinates of the affected region are provided. Finally, we analyse STRs in four WGS samples from a microsatellite instable (MSI) colorectal cancer (CRC) tumoroid [<xref ref-type="bibr" rid="R14">14</xref>, <xref ref-type="bibr" rid="R15">15</xref>]. One of these samples represents the original tumoroid line and the other three are clonal organoids, two of which have undergone whole-genome duplication. While these samples stem from the same tumour, we observe differences in STR allele lengths in pairwise sample comparisons. This indicates that ConSTRain can be useful for analysing tumour heterogeneity and tracing clonal lineages in cancer, even in closely related samples. Overall, ConSTRain is a flexible, fast, and accurate STR variant caller that can genotype repeats in human and non-human sequencing data while addressing ploidy-altering events.</p></sec><sec id="S2" sec-type="materials | methods"><title>Materials and Methods</title><sec id="S3"><title>ConSTRain implementation</title><p id="P7">ConSTRain is an STR variant caller implemented in Rust. It relies on the htslib C library [<xref ref-type="bibr" rid="R16">16</xref>] through the rust-htslib crate [<xref ref-type="bibr" rid="R17">17</xref>]. All analyses reported in this manuscript were performed using ConSTRain version 0.9.1. A visual overview of ConSTRain’s genotyping approach is shown in <xref ref-type="fig" rid="F1">Figure 1</xref>. ConSTRain requires three input files: an alignment of sequencing reads to a reference genome (SAM/BAM/CRAM format), a file specifying the locations of STR loci (BED format), and a file specifying the karyotype (i.e, the ploidy of each chromosome) (JSON format). If the alignment file is in CRAM format, the reference genome must also be supplied (FASTA format). Optionally, a file specifying the location and copy number of regions affected by CNAs can be supplied (BED format). The estimated STR genotypes for each locus in the input STR panel are written to stdout in VCF format. Source code, details of input and output file formats, and an overview of available command line arguments are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/acg-team/ConSTRain">https://github.com/acg-team/ConSTRain</ext-link>.</p></sec><sec id="S4"><title>Vocabulary</title><p id="P8">Different fields and research groups use inconsistent terminology to describe the various characteristics of STRs. To avoid confusion, we will explicitly define the vocabulary used by ConSTRain here: STRs are made up of a sequence of repeated <italic>units.</italic> Currently, ConSTRain allows only perfect STRs, without any mismatches, insertions, or deletions between the different units of a locus. The number of nucleotides in the unit is referred to as the <italic>period.</italic> The number of times a unit is repeated is called the STR <italic>allele length.</italic> A <italic>genotype</italic> is the combination of allele lengths that exist for an STR locus in a sample. Finally, each STR has a <italic>copy number,</italic> which indicates how many instances of the STR locus exist in the genome.</p></sec><sec id="S5"><title>Initialisation</title><p id="P9">ConSTRain starts by reading STR loci from the STR panel file and the ploidy of contigs from the karyotype file. The copy number of an STR is initially set based on the ploidy of the contig it is located on. E.g., the copy number will typically be set to two for STRs located on human autosomal chromosomes. However, if a file with CNAs is provided and the coordinates of the STR intersect with the coordinates of a CNA, the copy number of the STR is updated to that of the CNA. Subsequently, ConSTRain fetches all reads from the alignment file that fully span the STR locus and parses CIGAR strings to extract the STR allele length from each read. This yields the observed allele length distribution for that STR. For reasons that are discussed below in ‘Generating all possible genotypes’, the distribution is sorted such that the STR allele lengths are listed according to their observed frequencies, in descending order (<xref ref-type="fig" rid="F1">Figure 1</xref>, step 3). The main task for ConSTRain is to infer the most likely genotype for each STR locus, given its observed allele length distribution and copy number.</p></sec><sec id="S6"><title>Estimating the most likely STR genotype</title><p id="P10">Rather than using a heuristic optimisation approach to estimate the most likely genotype, ConSTRain explicitly generates all possible genotypes for an STR locus. From each of these possible genotypes, an expected allele length distribution is generated. The genotype for which the expected allele length distribution has the lowest absolute error (Manhattan distance) to the observed allele length distribution is chosen as the most likely genotype. To make this process tractable, ConSTRain operates under three assumptions: <list list-type="order" id="L1"><list-item><p id="P11">STRs exist at integer copy numbers.</p></list-item><list-item><p id="P12">There are at most as many distinct allele lengths as the STR copy number.</p></list-item><list-item><p id="P13">Each STR allele in the genotype contributes an equal number of reads to the allele length distribution.</p></list-item></list>
</p><p id="P14">Under these assumptions ConSTRain can generate all possible genotypes for an STR locus, given its copy number. ConSTRain only considers genotypes where the alleles are in descending order of abundance (‘Generating all possible genotypes’ for details). Thus, if the STR has copy number two the possible genotypes are ‘AA’ and ‘AB’, if the copy number is three, the possible genotypes are ‘AAA’, ‘AAB’, and ‘ABC’, etc. Internally, ConSTRain represents genotypes as matrices. E.g., for copy number three the possible genotypes are: <disp-formula id="FD1"><label>(1)</label><mml:math id="M1"><mml:mrow><mml:mi>G</mml:mi><mml:mo>×</mml:mo><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>→</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mi>A</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>B</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>C</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula> where each row in <italic>G</italic> represents a possible genotype, each column represents an STR allele length (encoded in <inline-formula><mml:math id="M2"><mml:mover accent="true"><mml:mi>a</mml:mi><mml:mo>→</mml:mo></mml:mover></mml:math></inline-formula>), and each value represents the number of times an STR allele length is present in a genotype. For a given locus, the shape of <italic>G</italic> will always be such that the number of columns equals the copy number of the locus, and the number of rows equals the number of integer partitions that exist for that copy number (‘Generating all possible genotypes’ for details). Next, ConSTRain uses <italic>G</italic> to generate a matrix of expected allele length distributions, denoted as <italic>D</italic>. To do this, ConSTRain must first know the number of reads each allele in the genotype is expected to contribute to the STR allele length distribution. Under assumptions (2) and (3) we can find this number by dividing the total number of reads mapped to the STR locus by the copy number of the STR locus. ConSTRain multiplies <italic>G</italic> by this scalar which results in matrix <italic>D</italic> where each row contains the expected allele length distribution for the corresponding row in <italic>G.</italic> For each row in <italic>D</italic>, the absolute error to the observed allele length distribution of the STR is calculated. If the number of allele lengths observed for a locus is greater than the copy number (such as in <xref ref-type="fig" rid="F1">Figure 1</xref>) only as many alleles as the copy number are considered. Conversely, if the number of observed alleles is fewer than the copy number, zero values are appended to the observed allele length distribution until its length equals the copy number. ConSTRain reports the genotype in <italic>G</italic> for which the associated expected allele length distribution in <italic>D</italic> has the lowest error to the observed allele length distribution. In cases where multiple genotypes are equally likely, ConSTRain does not report a genotype and sets a VCF filter tag to indicate why a genotype was not inferred. However, the observed allele length distribution will still be included in the VCF record’s FORMAT field.</p></sec><sec id="S7"><title>Generating all possible genotypes</title><p id="P15">As noted above, ConSTRain does not consider genotypes where allele abundances are not in descending order. Under assumption (3) it is not possible for an STR allele that is less abundant to contribute more reads to the allele length distribution than another allele that is more abundant. By sorting the observed allele length distribution we thus do not need to consider genotypes with non-descending allele abundances. Genotypes of this form would result in expected allele length distributions that are impossible under ConSTRain’s assumptions. Sorting the observed allele length distribution is a way to reduce the combinatorial space of possible genotypes: without doing this the number of genotypes to generate for a locus would be equal to the number of weak integer compositions of a size equal to the STR copy number. A weak integer composition refers to the representation of an integer as the sum of a sequence of non-negative integers. For a given integer, the number of weak compositions of a specific size (i.e., the number of terms to represent the integer as) is given by: <disp-formula id="FD2"><label>(2)</label><mml:math id="M3"><mml:mrow><mml:mi>n</mml:mi><mml:mi>u</mml:mi><mml:mi>m</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mspace width="0.2em"/><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mspace width="0.2em"/><mml:mi>w</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi><mml:mspace width="0.2em"/><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>m</mml:mi><mml:mi>p</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>n</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula> where <italic>n</italic> is the integer and <italic>k</italic> is the composition size. For our purposes <italic>n</italic> equals <italic>k</italic> equals the STR copy number. By sorting the observed allele length distribution we instead only need to generate a number of genotypes equal to the number of integer partitions of the STR copy number. Integer partitions differ from compositions in that the terms of the partition are not ordered, i.e., different orders of the same terms are considered identical. No closed-form solution is known to determine the number of partitions for an integer, but Sloane’s sequence A000041 enumerates the number of partitions for a range of integers [<xref ref-type="bibr" rid="R18">18</xref>]. Going back to the example in equation <xref ref-type="disp-formula" rid="FD1">Equation 1</xref>, we can use <xref ref-type="disp-formula" rid="FD2">Equation 2</xref> to calculate that there exist ten weak integer compositions when <italic>n</italic> and <italic>k</italic> are both three. On the other hand, A000041 tells us that there are three integer partitions — a difference of seven. This may not seem very impactful, but the difference becomes much more pronounced for higher copy numbers: for <italic>n</italic> = 20 there exist more than 68.9 × 10<sup>9</sup> weak compositions of size 20, but only 627 partitions. Further, given that an STR panel can contain hundreds of thousands of loci (e.g., over 1.7 × 10<sup>6</sup> for the human genome), even small optimisations make a difference in overall runtime.</p></sec><sec id="S8"><title>Updating an existing VCF file</title><p id="P16">Besides the standard mode of running ConSTRain outlined above, ConSTRain also supports reanalysing previously generated VCF files. This may be useful if novel CNA information for a sample becomes available after an input alignment has already been analysed, or if it is necessary to adjust filtering parameters. It also prevents having to re-download large alignment files from remote repositories. This is possible because ConSTRain includes the observed allele length distribution of each STR in a FORMAT field of the output VCF. Since it is much faster to read the observed allele length distribution from a VCF file than to extract it from sequencing reads in an alignment, running ConSTRain in this mode is typically a matter of seconds.</p></sec><sec id="S9"><title>Filtering ConSTRain output</title><p id="P17">Genomic regions where the depth of coverage is lower or higher than expected may indicate a large number of technical artifacts for that region. This can lead to inaccurate variant calls. To address this, ConSTRain allows for the filtering of STR loci based on their normalised depth of coverage. The normalised depth is calculated by dividing the number of mapped reads by the locus copy number. This normalisation is important because the copy number of a locus is expected to affect the depth of coverage. When analysing an alignment of human male sequencing reads, for instance, loci on the sex chromosomes are expected to have roughly half the depth of coverage as loci on autosomes. Similar effects exist for genomic regions that are amplified or deleted by structural variants. Dividing the depth of coverage by the locus copy number will force all loci to occupy the same range of normalised depth values, which makes filtering more straightforward. The desired minimum and maximum normalised depth values can be set at the command line via the <monospace>--min-norm-depth</monospace> (default: 1.0) and <monospace>--max-norm-depth</monospace> (not set by default) arguments, respectively. These upper and lower bounds can be set manually to reasonable values before running ConSTRain. Another option is to first run ConSTRain without filters and then set bounds based on the observed distribution of normalised sequencing depths across all loci in the sample. This can help identify the range of acceptable normalised depth values for a specific sample. Once the minimum and maximum values are found, ConSTRain can be rerun on the VCF file with the updated filtering parameters. Since running ConSTRain on a VCF file is extremely fast (around 20 seconds for 1733646 loci on a 2020 MacBook Pro) this only marginally increases the overall computational workload. A Python script to generate a distribution of normalised depth values from a ConSTRain VCF file is included in the ConSTRain GitHub repository.</p></sec><sec id="S10"><title>STR reference panels</title><p id="P18">ConSTRain needs a reference panel of STR loci to know where STRs are located in the reference genome. The reference panel that was used in all experiments involving human data reported in this manuscript is based on the GRCh38 version 13 reference panel provided by GangSTR [<xref ref-type="bibr" rid="R7">7</xref>]. While ConSTRain is primarily aimed at genotyping STRs with periods between one and six, the repeat panel provided by GangSTR contains a small number (20481) of repeat loci with longer periods (up to 20), which we did not remove. Furthermore, the GangSTR panel does not contain mononucleotide repeats. We therefore extended this panel to include perfect mononucleotide repeats of at least allele length ten, which were identified using mreps [<xref ref-type="bibr" rid="R19">19</xref>]. This resulted in a panel containing 1733646 repeat loci in the GRCh38 human reference genome (<xref ref-type="supplementary-material" rid="SD1">Supplementary Figure 1A</xref>). The total region length of most of these repeats was relatively short, with only 3.38% being longer than 30bp in the reference assembly (<xref ref-type="supplementary-material" rid="SD1">Supplementary Figure 1B</xref>). This suggests that — barring large expansions — the vast majority of repeat loci in this panel should be resolvable with short sequencing reads.</p><p id="P19">We created a novel STR referene panel for the DH-Pahang v4 banana reference genome [<xref ref-type="bibr" rid="R20">20</xref>]. This was also done using mreps [<xref ref-type="bibr" rid="R19">19</xref>], setting command line arguments such that perfect repeats with periods one through six were reported. We subsequently filtered mreps output using custom Python scripts to retain only perfect STRs with at least allele length ten, six, four, three, three, and three for STRs with period one through six, respectively. This yielded a reference panel of 183345 STR loci across the 11 main chromosomes in the DH-Pahang v4 reference.</p></sec><sec id="S11"><title>HG002 benchmark</title><p id="P20">STR genotyping tools were benchmarked using haplotypes provided by the telomere-to-telomere (T2T) consortium’s Q100 project [<xref ref-type="bibr" rid="R21">21</xref>, <xref ref-type="bibr" rid="R22">22</xref>]. The Q100 project provides high-quality, phased haplotypes of the HG002 cell line which have been used previously to benchmark STR variant calls [<xref ref-type="bibr" rid="R22">22</xref>]. To obtain ground-truth allele lengths for loci in our STR reference panel in the HG002 cell line, the Q100 haplotypes were mapped to the GRCh38 reference genome using minimap2 [<xref ref-type="bibr" rid="R23">23</xref>]. The resulting PAF file was parsed to find a ground-truth STR allele lengths in GRCh38 coordinate space. The HG002 allele length could be recovered for 1695865 STR loci in our panel (97.82% of the total).</p><p id="P21">Subsequently, STR variant callers were used to genotype the STR reference panel in an alignment of 2x250 Illumina whole-genome sequencing reads of HG002, which is available through Genome in a Bottle [<xref ref-type="bibr" rid="R24">24</xref>]. STR allele lengths generated by the different variant callers were compared to the ground-truth allele lengths derived from the Q100 haplotypes. Genotyping accuracy was calculated by determining the fraction of loci for which the biallelic genotypes reported by a variant caller exactly matched the allele lengths observed in the Q100 haplotypes.</p></sec><sec id="S12"><title>Simulating trisomy 21</title><p id="P22">We simulated 2x150 paired-end reads from chromosome 21 of the maternal and paternal haplotypes of HG002, as well as GRCh38. Since we were not interested in modelling sequencing errors, we simulated error-free, paired-end reads to a depth of coverage of 15X for each of the three haplotypes using wgsim (<ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/wgsim">https://github.com/lh3/wgsim</ext-link>). Simulated reads from the three haplotypes were then combined to form a 45X sequencing sample of a triploid chromosome 21. These reads were mapped back to the GRCh38 reference genome using minimap2 [<xref ref-type="bibr" rid="R23">23</xref>].</p></sec><sec id="S13"><title><italic>Musa acuminata</italic> whole-genome sequencing data</title><p id="P23">The <italic>M. acuminata</italic> sequencing data used here consist of two sequencing experiments of the same organism, one performed on an Illumina HiSeq1500 machine and the other on an Illumina NextSeq500 [<xref ref-type="bibr" rid="R13">13</xref>]. We downloaded all sequencing reads (European Nucleotide Archive, study PRJEB33317) and combined outputs of sequencing runs into two FASTQ files, one for the HiSeq1500, one for the NextSeq500. The two FASTQ files were mapped to the DH-Pahang v4 reference genome [<xref ref-type="bibr" rid="R20">20</xref>] using minimap2 [<xref ref-type="bibr" rid="R23">23</xref>], removing improper pairs, duplicate alignments, and low-quality alignments. These alignments will be referred to as the ‘HiSeq1500 alignment’ and the ‘NextSeq500 alignment’. Subsequently, the HiSeq1500 and NextSeq500 alignments were concatenated to form the ‘merged alignment’.</p></sec><sec id="S14"><title>Colorectal cancer whole-genome sequencing data</title><p id="P24">We obtained WGS data of a patient-derived cancer CRC tumoroid generated as a part of a previously published mutation accumulation experiment [<xref ref-type="bibr" rid="R14">14</xref>]. These data are available through the European Genome-phenome Archive under accession number EGAD50000000411. Briefly, this experiment was set up so that individual cells were isolated from a CRC tumoroid [<xref ref-type="bibr" rid="R25">25</xref>] and allowed to grow for six weeks. At the six week mark, WGS was performed on each clone to obtain a high-quality representation of the genome of the individually isolated cells. Subsequently, clones were repeatedly bottlenecked to 100 cells every two weeks for six months, followed by WGS of the resulting clones [<xref ref-type="bibr" rid="R14">14</xref>].</p><p id="P25">As a demonstration of ConSTRain’s applicability to cancer sequencing data we analysed four WGS samples from a single microsatellite instable tumoroid. The first of these samples was taken from the original tumoroid line and the other samples represented three different clones (01-0, 05-0, and 07-0) sequenced after six weeks of growth. For each sample, CNA calls generated by Sequenza were available [<xref ref-type="bibr" rid="R14">14</xref>, <xref ref-type="bibr" rid="R26">26</xref>]. These CNA calls indicated that while the original tumoroid line and the 05-0 clone were diploid, the 01-0 and 07-0 clones had undergone whole-genome duplications and were tetraploid. We ran ConSTRain on all four samples, providing the appropriate Sequenza CNA calls each time. Then, we computed pairwise STR-based distances between samples based on the genotypes returned by ConSTRain. We limited this analysis to high confidence STR genotypes where the unit size was between three and six and the normalised depth of coverage was at least 5. For comparisons between diploid and tetraploid samples all genotypes in the diploid sample were artificially duplicated before performing comparisons. This meant that the diploid genotype [<xref ref-type="bibr" rid="R10">10</xref>, <xref ref-type="bibr" rid="R10">10</xref>] would be represented as [<xref ref-type="bibr" rid="R10">10</xref>, <xref ref-type="bibr" rid="R10">10</xref>, <xref ref-type="bibr" rid="R10">10</xref>, <xref ref-type="bibr" rid="R10">10</xref>], and [<xref ref-type="bibr" rid="R8">8</xref>, <xref ref-type="bibr" rid="R9">9</xref>] as [<xref ref-type="bibr" rid="R8">8</xref>, <xref ref-type="bibr" rid="R8">8</xref>, <xref ref-type="bibr" rid="R9">9</xref>, <xref ref-type="bibr" rid="R9">9</xref>], etc. Loci that were annotated with a different copy number in the two samples of a pair were not considered when calculating pairwise distances. The impact of this filter varied depending on which two samples were being compared: when comparing the two 2n samples 4.81% of loci did not have the same copy number, whereas up to 26.85% of loci had to be removed when comparing 4n samples. This is likely due to the fact that accurately calling copy number levels from sequencing data is a difficult task, especially for higher copy numbers. Pairwise sample distances were calculated by taking the sum of Manhattan distances between STR genotypes for all loci with a high confidence call in both samples, normalising by the total number of compared loci. This resulted in a distance between samples with a unit of ‘average difference in allele length per locus’.</p></sec></sec><sec id="S15" sec-type="results"><title>Results</title><sec id="S16"><title>ConSTRain accurately genotypes STRs in euploid human sequencing data</title><p id="P26">We first evaluated ConSTRain’s performance when analysing sequencing data from a euploid human genome. We ran ConSTRain with default parameters on 100X short-read WGS data of the HG002 human cell line. Using high-quality HG002 assemblies as ground truth, we determined ConSTRain’s accuracy (<xref ref-type="fig" rid="F2">Figure 2A&amp;B</xref>, <xref ref-type="supplementary-material" rid="SD1">Supplementary Figure 3</xref>). ConSTRain returned allele length estimates for 1655655 out of the 1695865 repeat loci (97.63%) for which a ground truth was available. For 95.25% of these, the allele length(s) returned by ConSTRain exactly matched those of the ground truth.</p><p id="P27">Next, we investigated if accuracy could be increased by filtering STR loci based on their normalised depth (see <xref ref-type="sec" rid="S2">Methods</xref>). To this end, we generated the distribution of normalised read depths shown in <xref ref-type="fig" rid="F2">Figure 2A</xref>. The distribution is left-skewed. Upon further investigation, we found that this was caused by mononucleotide repeats, whereas the distribution for repeats with higher periods followed a normal distribution (<xref ref-type="supplementary-material" rid="SD1">Supplementary Figure 2</xref>). Therefore, we decided to not consider mononucleotide repeats when defining our filter parameters, and instead used the distribution of loci with periods greater than one. In this distribution, we set bounds such that they excluded loci that fell in the lowest 2.5% and highest 2.5% of normalised depth values. These bounds were then used as parameters to rerun ConSTRain on the VCF (including mononucleotide repeats) previously created from the HG002 alignment. Additionally, we filtered out loci that overlapped known segmental duplications in the human genome. Together, this decreased the number of called loci to 1393426 (82.17% of the total), but increased the accuracy to 98.28% (<xref ref-type="fig" rid="F2">Figure 2B</xref>, <xref ref-type="supplementary-material" rid="SD1">Supplementary Figure 3</xref>).</p><p id="P28">Having found that ConSTRain was able to accurately determine repeat allele lengths in a 100X short-read sequencing alignment, we wanted to see how it performed on samples with lower sequencing depths. To examine this, we downsampled the HG002 alignment to 30X and 10X depth of coverage. The accuracy of unfiltered allele length calls was 94.51% and 93.06% for the 30X and 10X alignments, respectively (<xref ref-type="fig" rid="F2">Figure 2B</xref>). Importantly, normalised depth-based filtering of loci proved to be effective for the downsampled alignments as well. After filtering the genotyping accuracy rose to 96.65% and 94.75% for the 30X and 10X alignments, respectively (<xref ref-type="fig" rid="F2">Figure 2B</xref>).</p></sec><sec id="S17"><title>ConSTRain’s accuracy is competitive with existing STR variant callers</title><p id="P29">Next, we sought to compare ConSTRain’s performance to that of other STR variant callers. We ran GangSTR and HipSTR on the 100X HG002 alignment using the same STR reference panel used for ConSTRain and again compared reported allele lengths to the ground truth haplotypes. For both tools, we analysed their unfiltered outputs, as well as the outputs filtered according to instructions in the respective tool’s documentation. The results are shown in <xref ref-type="table" rid="T1">Table 1</xref>. The accuracy of the filtered outputs of the three methods are very similar: ConSTRain had an accuracy of 98.28%, GangSTR 97.69%, and HipSTR 97.74%. A notable difference between the three methods was that HipSTR called substantially fewer loci (69.28% of the STR reference panel) than both ConSTRain (82.17%) and GangSTR (80.95%). Another major difference was that ConSTRain had a much lower runtime than the other two tools. When running single-threaded, ConSTRain was around 2.2 times as fast as GangSTR, and 1.8 times as fast as HipSTR. Moreover, ConSTRain supports running on multiple threads. With 32 threads, ConSTRain took 19 minutes and 31 seconds to genotype our reference panel of over 1.7 × 10<sup>6</sup> loci in the 100X HG002 alignment, making it 45.8 times as fast as GangSTR and 36.9 times as fast as HipSTR in this benchmark.</p></sec><sec id="S18"><title>ConSTRain resolves STR genotypes in a simulated trisomy 21 sample</title><p id="P30">Having demonstrated that ConSTRain accurately recovers STR allele lengths from sequencing data of a diploid genome, we were curious to see how it performed at other copy numbers. We mimicked a trisomy 21 event by simulating short sequencing reads from three different assemblies of the human chromosome 21 and mapping them to GRCh38 (see <xref ref-type="sec" rid="S2">Methods</xref>). We ran ConSTRain on the resulting alignment, specifying that the ploidy of chromosome 21 was three. After filtering, ConSTRain was able to estimate a genotype for 18241 out of the 21482 loci located on chr21 in our reference panel. At 13465 of these, the ground truth consisted of one distinct allele length (genotype <italic>AAA</italic>) across the three input assemblies. For 3923 and 853 loci two (genotype <italic>AAB</italic>) and three (genotype <italic>ABC</italic>) distinct allele lengths were present in the input haplotypes, respectively. Overall, ConSTRain reported the correct genotype for 98.39% of loci. Accuracy depended on the number of distinct alleles at a locus: ConSTRain reported the correct genotype for all loci with genotype <italic>AAA</italic>, 94.88% of loci with genotype <italic>AAB,</italic> and 92.76% of loci with genotype <italic>ABC</italic>. Similar to the HG002 benchmark, the majority of errors were because the distribution of generated allele lengths was not representative of the underlying genotype. This is possible because there was some stochasticity in the simulation of sequencing reads from reference haplotypes with regards to the depth of coverage along the input sequence. For example, ConSTRain reported an incorrect genotype for a mononucleotide repeat for which the genotype across the three haplotypes consisted of two alleles of length 19 and one of length 20. For this locus, 35 spanning reads with allele length 19 had been generated, and only three reads with allele length 20. Therefore, ConSTRain reported a genotype consisting of three alleles of length 19. Similar observations were made for other incorrectly called loci.</p><p id="P31">We were also interested to see what genotypes HipSTR and GangSTR would report in this setting. We ran both variant callers on the alignment of simulated reads without filtering and parsed their outputs. Both tools reported homozygous genotypes for all repeat loci with genotype <italic>AAA.</italic> For loci with genotype <italic>AAB</italic> they usually reported a genotype that was homozygous for the more abundant of the two alleles, missing the other allele length. In a subset of these loci (7.53% for GangSTR, 6.49% for HipSTR) a heterozygous <italic>AB</italic> genotype was reported. Finally, for the loci with genotype <italic>ABC</italic>, both tools almost always reported heterozygous genotypes containing two of the three alleles. Which of the three alleles at a locus was ignored seemed to be dictated by which allele was represented by the fewest reads.</p></sec><sec id="S19"><title>ConSTRain accounts for CNAs in a triploid <italic>Musa acuminata</italic></title><p id="P32">Given that we could accurately resolve STR genotypes in simulated reads of a triploid chromosome, we were curious how ConSTRain performed on a real polyploid sample. We obtained WGS reads from a <italic>M. acuminata</italic> Dwarf Cavendish banana, which is a triploid, and mapped them to the DH-Pahang v4 reference genome [<xref ref-type="bibr" rid="R20">20</xref>]. This particular sample was reported to have a duplication of around 6 megabases on the long arm of chromosome 02 [<xref ref-type="bibr" rid="R13">13</xref>], making it an even more relevant test case for ConSTRain.</p><p id="P33">There was no ground truth available for STR genotypes in this analysis. However, there were two separate sequencing experiments performed for the same sample (see <xref ref-type="sec" rid="S2">Methods</xref>). Ideally, STR genotypes reported by ConSTRain should be consistent between the two samples [<xref ref-type="bibr" rid="R27">27</xref>]. We tested for consistency by running ConSTRain on the NextSeq500 and HiSeq1500 alignments separately (including coordinates of the chr02 duplication), and comparing STR genotypes between the two outputs (<xref ref-type="fig" rid="F3">Figure 3A</xref>). We considered only genotypes that were exactly the same between the two outputs to be consistent. Initially, we again set the minimum and maximum normalised depth values such that 2.5% of the lowest and 2.5% of the highest depth loci with periods &gt; 1 were excluded from each sample. Even with these rather lenient filter parameters, genotype calls for STRs with periods &gt; 2 were consistent at over 90% of loci (<xref ref-type="fig" rid="F3">Figure 3A</xref>). Genotype calls were much less consistent for mononucleotide (74.29% of calls consistent) and dinucleotide (63.66% of calls consistent) repeats, however. Consistency between samples could be increased by raising the minimum normalised depth value, also reaching around 90% for mono- and dinucleotide repeats when using a threshold of 10. or 15. (<xref ref-type="fig" rid="F3">Figure 3A</xref>).</p><p id="P34">Next, we genotyped our banana STR reference panel using the merged alignment (see <xref ref-type="sec" rid="S2">Methods</xref>), specifying that three copies existed of each chromosome but without providing coordinates for the chr02 duplication. ConSTRain ran in 70 seconds on 16 threads and reported genotypes for 153167 out of 183345 STRs in the panel before filtering. Afterwards, we ran ConSTRain on the resulting VCF file, this time providing coordinates of the duplicated region (<xref ref-type="supplementary-material" rid="SD1">Supplementary Figure 4</xref>). We found that 2699 of the genotyped STR loci were located in the duplicated region. <xref ref-type="fig" rid="F3">Figure 3B</xref> shows the distribution of normalised depths of coverage reported by ConSTRain across STRs. The normalised depth distribution for STRs in the duplicated region is shown separately — both before and after providing duplication coordinates to ConSTRain. The mean normalised depth for the non-amplified STRs was 18.84, while the mean normalised depth for the amplified STRs was 27.29. This difference in mean normalised depth is roughly in line with a tetraploid region being mistakenly analysed as triploid (theoretically, normalised depth at tetraploid loci should be <inline-formula><mml:math id="M4"><mml:mrow><mml:mn>1</mml:mn><mml:mfrac><mml:mn>1</mml:mn><mml:mn>3</mml:mn></mml:mfrac></mml:mrow></mml:math></inline-formula> times that of the normalised depth in triploid loci in this case). Furthermore, the distribution of normalised depths reported for amplified STRs when the duplication coordinates were provided to ConSTRain largely overlapped the distribution for loci in the rest of the genome (<xref ref-type="fig" rid="F3">Figure 3B</xref>). This highlights an additional benefit of setting filter parameters based on the normalised depth of loci observed in a sample: using bounds such that 2.5% of the lowest and 2.5% of the highest normalised depth loci with periods &gt; 1 were excluded genome wide, 27.04% of STRs in the duplicated region were excluded when running ConSTRain without CNA information. When CNA information was provided to ConSTRain, however, only 3.44% of duplicated loci were excluded, since their normalised depth values were much more in line with the rest of the genome. This indicates that when CNA information is not available or is incorrect, a substantial portion of loci with incorrect copy number values may be excluded by filtering on normalised depth of coverage. This effect is expected to be even stronger when the difference between the annotated and true copy number of loci is larger.</p><p id="P35">After filtering, ConSTRain reported genotypes for 148532 STRs, 2612 of which were located in the duplicated region on chr02. At 55.15% of the triploid loci ConSTRain reported one distinct allele, 33.02% had two disctinct allele lengths, and 11.83% had three distinct alleles (<xref ref-type="supplementary-material" rid="SD1">Supplementary Figure 5</xref>). This distribution was very similar for loci located in the duplicated region on chr02 (<xref ref-type="supplementary-material" rid="SD1">Supplementary Figure 5</xref>). Interestingly, we also observed 31 loci with four distinct alleles in the duplicated region, 18 of which had a normalised depth of coverage ≥ 10. While this was only a small fraction of loci in the duplicated region, it suggests that some STR loci may have mutated after the duplication event.</p></sec><sec id="S20"><title>ConSTRain resolves STR genotypes in whole-genome duplicated colorectal cancer</title><p id="P36">Finally, we were curious to see whether ConSTRain can be used to study STRs in cancer sequencing data. To this end, we obtained four WGS samples that were derived from a microsatellite instable CRC tumoroid (see <xref ref-type="sec" rid="S2">Methods</xref>) [<xref ref-type="bibr" rid="R14">14</xref>]. Of the four WGS samples, one was taken directly from the original tumoroid line. The other three samples represented clones 01-0, 05-0, and 07-0 that had been grown from single cells taken from the original tumoroid line, where clones 01-0 and 07-0 had undergone whole-genome duplications.</p><p id="P37">We ran ConSTRain on these four samples, providing CNA information each time. Next, we calculated STR-based pairwise distances between samples by comparing the STR genotypes (see <xref ref-type="sec" rid="S2">Methods</xref>). Even though the four samples were all derived from the same tumoroid with only six weeks between the isolation of individual cells and the sequencing of the resulting clones, there were already some differences in STR genotypes between samples (<xref ref-type="fig" rid="F4">Figure 4</xref>). The smallest distance was observed between the original tumoroid line and the diploid clone 05-0. The two tetraploid clones were more distinct from the original tumoroid line, with the STR-based distances between the original tumoroid line and both tetraploid clones being roughly similar. The largest pairwise distance we observed across this dataset was between the STR genotypes of the two tetraploid clones (<xref ref-type="fig" rid="F4">Figure 4</xref>).</p></sec></sec><sec id="S21" sec-type="discussion"><title>Discussion</title><p id="P38">To the best of our knowledge, ConSTRain is the first STR variant caller that enables rapid and accurate analyses of microsatellites while accounting for copy number alterations and polyploidy.</p><p id="P39">On a benchmark of a euploid human genome ConSTRain reached a genotyping accuracy of 98.28%, which was competitive with state-of-the-art STR variant callers. ConSTRain was faster than the two other STR variant callers included in our analyses, even when running single threaded. ConSTRain’s runtime can be easily reduced even further by using multiple compute threads: for example, when running on 32 threads, ConSTRain genotyped over 1.7 × 10<sup>6</sup> repeats in under 20 minutes from an alignment of 100X WGS reads. We showed that ConSTRain’s genotyping accuracy remained high for a simulated trisomy 21 event, even at loci with three distinct alleles. Then, we demonstrated ConSTRain’s ability to call STR genotypes from sequencing data of a polyploid <italic>M. acuminata</italic> Dwarf Cavendish banana while accounting for a large amplified region on chromosome 02. The final analysis we presented here focused on four WGS samples from an MSI CRC tumoroid. Interestingly, two of these samples had undergone whole-genome duplications and were tetraploid. This is uncharacteristic for microsatellite instable tumours, which are typically chromosomally stable [<xref ref-type="bibr" rid="R14">14</xref>]. When we determined STR-based pairwise distances between all four samples, we found that the comparison between the two tetraploid clones yielded the largest distance in this dataset. This could indicate that these two clones are derived from different lineages within the tumour, meaning that at least two separate whole-genome duplication events occurred. While a more in-depth analysis is needed to determine this for certain, we have shown that ConSTRain could be used for such a study.</p><p id="P40">As with any method, it is important to be aware of ConSTRain’s limitations. In our HG002 benchmark and trisomy 21 analyses, we observed two main sources of errors. First, for some STR loci the observed allele length distribution strongly deviated from the underlying genotype, with some alleles being over- or underrepresented in the distribution. This was the largest source of errors in the HG002 benchmark (79.65% of errors were of this type). We do not consider this an inherent failing of ConSTRain’s genotype estimation approach: it reported the most likely genotype based on the observed allele length distribution in each case. However, it does highlight that an incorrect inference will be made if the observed read distribution strongly deviates from the underlying genotype. This is an issue for variant calling in general, and not specific to our method.</p><p id="P41">The second source of errors in the HG002 benchmark was due to rare instances where STR loci had an insertion or deletion that did not consist of an addition or removal of one or more complete repeat units. Similar to other STR variant callers [<xref ref-type="bibr" rid="R6">6</xref>, <xref ref-type="bibr" rid="R7">7</xref>], ConSTRain only considers in-phase indel mutations, and thus does not return the correct allele lengths at such loci. The fact that this was observed at only 4873 out of 1393426 repeats in the filtered 100X benchmark suggests that this heuristic is reasonable. This is an opportunity for future extensions or updates to ConSTRain, however. To address out-of-phase indels ConSTRain’s core genotype inference approach would not need to be updated, but it would mean that the full sequence in each read mapping to repeat loci needs to be resolved. This is likely to increase runtimes compared to the current implementation, although it is impossible to say in advance by how much.</p><p id="P42">Another potential source of issues is the use of external CNA information, which ConSTRain does not validate. If incorrect information is provided, it is likely to result in incorrect genotype calls. Our <italic>M. acuminata</italic> analysis suggests this may be mitigated by setting filtering parameters based on the distribution of normalised depth values observed across loci in a sample (<xref ref-type="fig" rid="F3">Figure 3B</xref>). An alternative approach could be to estimate the copy number of repeat loci as part of the method itself. However, since it is a non-trivial task and many existing tools are available, we decided not to implement this functionality in ConSTRain at this point.</p><p id="P43">Recent years have seen an increased appreciation of the regulatory roles STR variants play in human physiology and disease. We believe ConSTRain unlocks the extension of such findings to other settings and organisms. By studying how STR variability interacts with other structural variants, we hope to learn more about the role these highly variable genomic elements play in the context of cancer. Furthermore, some of the crops upon which we rely most for our food production have polyploid genomes. By leveraging ConSTRain to analyse microsatellites in these species we may discover more about how their genomes and phenotypes are regulated.</p></sec><sec sec-type="supplementary-material" id="SM"><title>Supplementary Material</title><supplementary-material content-type="local-data" id="SD1"><label>Supplementary Figures</label><media xlink:href="EMS202294-supplement-Supplementary_Figures.pdf" mimetype="application" mime-subtype="pdf" id="d17aAcEbB" position="anchor"/></supplementary-material></sec></body><back><ack id="S22"><title>Funding</title><p>This work was supported by the Swiss National Science Foundation [Sinergia CRSII5 193832 to M.A.]; the Horizon 2020 Marie Sk lodowska-Curie research and innovation program [823886 to M.A.]; and the Associazione Italiana per la Ricerca sul Cancro [5x1000 grant 21091 to A.B.].</p></ack><sec id="S23" sec-type="data-availability"><title>Data Availability</title><p id="P44">Source code and precompiled binaries for ConSTRain, as well as STR reference panels, are available on the ConSTRain GitHub page: <ext-link ext-link-type="uri" xlink:href="https://github.com/acg-team/ConSTRain">https://github.com/acg-team/ConSTRain</ext-link>. Scripts and notebooks that were used to perform analyses and generate visualisations included in this manuscript are available in a separate GitHub repository: <ext-link ext-link-type="uri" xlink:href="https://github.com/acg-team/ConSTRain-analyses/tree/main">https://github.com/acg-team/ConSTRain-analyses/tree/main</ext-link>. HG002 Q100 haplotypes can be downloaded according to instructions on the T2T consortium’s HG002 Q100 GitHub page: <ext-link ext-link-type="uri" xlink:href="https://github.com/marbl/HG002/tree/main">https://github.com/marbl/HG002/tree/main</ext-link>. The aligned Illumina sequencing reads for the HG002 cell line are hosted by NCBI and can be downloaded from <ext-link ext-link-type="uri" xlink:href="https://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio/HG002_NA24385_son/NIST_Illumina_2x250bps/novoalign_bams/">https://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio/HG002_NA24385_son/NIST_Illumina_2x250bps/novoalign_bams/</ext-link>. The <italic>Musa acuminata</italic> sequencing data are hosted by the European Nucleotide Archive under study accession number PRJEB33317. The CRC tumoroid sequencing data are hosted by the European Genome-phenome Archive under accession number EGAD50000000411.</p></sec><fn-group><fn id="FN1" fn-type="conflict"><p id="P45"><bold>Conflict of Interest Disclosure</bold></p><p id="P46">The authors declare no conflict of interest.</p></fn></fn-group><ref-list><ref id="R1"><label>1</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Verbiest</surname><given-names>Max A</given-names></name><name><surname>Maksimov</surname><given-names>M</given-names></name><name><surname>Jin</surname><given-names>Y</given-names></name><name><surname>Anisimova</surname><given-names>M</given-names></name><name><surname>Gymrek</surname><given-names>M</given-names></name><name><surname>Sonay</surname><given-names>T Bilgin</given-names></name></person-group><article-title>Mutation and selection processes regulating short tandem repeats give rise to genetic and phenotypic diversity across species</article-title><source>Journal of Evolutionary Biology</source><year>2023</year><volume>36</volume><issue>2</issue><fpage>321</fpage><lpage>336</lpage><pub-id pub-id-type="pmcid">PMC9990875</pub-id><pub-id pub-id-type="pmid">36289560</pub-id><pub-id pub-id-type="doi">10.1111/jeb.14106</pub-id></element-citation></ref><ref id="R2"><label>2</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fotsing</surname><given-names>Stephanie Feupe</given-names></name><name><surname>Margoliash</surname><given-names>Jonathan</given-names></name><name><surname>Wang</surname><given-names>Catherine</given-names></name><name><surname>Saini</surname><given-names>Shubham</given-names></name><name><surname>Yanicky</surname><given-names>Richard</given-names></name><name><surname>Shleizer-Burko</surname><given-names>Sharona</given-names></name><name><surname>Goren</surname><given-names>Alon</given-names></name><name><surname>Gymrek</surname><given-names>Melissa</given-names></name></person-group><article-title>The impact of short tandem repeat variation on gene expression</article-title><source>Nature Genetics</source><year>2019</year><volume>51</volume><issue>11</issue><fpage>1652</fpage><lpage>1659</lpage><pub-id pub-id-type="pmcid">PMC6917484</pub-id><pub-id pub-id-type="pmid">31676866</pub-id><pub-id pub-id-type="doi">10.1038/s41588-019-0521-9</pub-id></element-citation></ref><ref id="R3"><label>3</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shi</surname><given-names>Yirong</given-names></name><name><surname>Niu</surname><given-names>Yiwei</given-names></name><name><surname>Zhang</surname><given-names>Peng</given-names></name><name><surname>Luo</surname><given-names>Huaxia</given-names></name><name><surname>Liu</surname><given-names>Shuai</given-names></name><name><surname>Zhang</surname><given-names>Sijia</given-names></name><name><surname>Wang</surname><given-names>Jiajia</given-names></name><name><surname>Li</surname><given-names>Yanyan</given-names></name><name><surname>Liu</surname><given-names>Xinyue</given-names></name><name><surname>Song</surname><given-names>Tingrui</given-names></name><name><surname>Xu</surname><given-names>Tao</given-names></name><etal/></person-group><article-title>Characterization of genome-wide STR variation in 6487 human genomes</article-title><source>Nature Communications</source><year>2023</year><volume>14</volume><issue>1</issue><elocation-id>2092</elocation-id><pub-id pub-id-type="pmcid">PMC10097659</pub-id><pub-id pub-id-type="pmid">37045857</pub-id><pub-id pub-id-type="doi">10.1038/s41467-023-37690-8</pub-id></element-citation></ref><ref id="R4"><label>4</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Verbiest</surname><given-names>Max A</given-names></name><name><surname>Lundström</surname><given-names>Oxana</given-names></name><name><surname>Xia</surname><given-names>Feifei</given-names></name><name><surname>Baudis</surname><given-names>Michael</given-names></name><name><surname>Sonay</surname><given-names>Tugce Bilgin</given-names></name><name><surname>Anisimova</surname><given-names>Maria</given-names></name></person-group><article-title>Short tandem repeat mutations regulate gene expression in colorectal cancer</article-title><source>Scientific Reports</source><year>2024</year><volume>14</volume><issue>1</issue><elocation-id>3331</elocation-id><pub-id pub-id-type="pmcid">PMC10858039</pub-id><pub-id pub-id-type="pmid">38336885</pub-id><pub-id pub-id-type="doi">10.1038/s41598-024-53739-0</pub-id></element-citation></ref><ref id="R5"><label>5</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Willems</surname><given-names>Thomas</given-names></name><name><surname>Zielinski</surname><given-names>Dina</given-names></name><name><surname>Yuan</surname><given-names>Jie</given-names></name><name><surname>Gordon</surname><given-names>Assaf</given-names></name><name><surname>Gymrek</surname><given-names>Melissa</given-names></name><name><surname>Erlich</surname><given-names>Yaniv</given-names></name></person-group><article-title>Genome-wide profiling of heritable and de novo STR variations</article-title><source>Nature Methods</source><year>2017</year><volume>14</volume><issue>6</issue><fpage>590</fpage><lpage>592</lpage><pub-id pub-id-type="pmcid">PMC5482724</pub-id><pub-id pub-id-type="pmid">28436466</pub-id><pub-id pub-id-type="doi">10.1038/nmeth.4267</pub-id></element-citation></ref><ref id="R6"><label>6</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dolzhenko</surname><given-names>Egor</given-names></name><name><surname>Deshpande</surname><given-names>Viraj</given-names></name><name><surname>Schlesinger</surname><given-names>Felix</given-names></name><name><surname>Krusche</surname><given-names>Peter</given-names></name><name><surname>Petrovski</surname><given-names>Roman</given-names></name><name><surname>Chen</surname><given-names>Sai</given-names></name><name><surname>Emig-Agius</surname><given-names>Dorothea</given-names></name><name><surname>Gross</surname><given-names>Andrew</given-names></name><name><surname>Narzisi</surname><given-names>Giuseppe</given-names></name><name><surname>Bowman</surname><given-names>Brett</given-names></name><name><surname>Scheffler</surname><given-names>Konrad</given-names></name><etal/></person-group><article-title>ExpansionHunter: a sequence-graph-based tool to analyze variation in short tandem repeat regions</article-title><source>Bioinformatics</source><year>2019</year><volume>35</volume><issue>22</issue><fpage>4754</fpage><lpage>4756</lpage><pub-id pub-id-type="pmcid">PMC6853681</pub-id><pub-id pub-id-type="pmid">31134279</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btz431</pub-id></element-citation></ref><ref id="R7"><label>7</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mousavi</surname><given-names>Nima</given-names></name><name><surname>Shleizer-Burko</surname><given-names>Sharona</given-names></name><name><surname>Yanicky</surname><given-names>Richard</given-names></name><name><surname>Gymrek</surname><given-names>Melissa</given-names></name></person-group><article-title>Profiling the genome-wide landscape of tandem repeat expansions</article-title><source>Nucleic Acids Research</source><year>2019</year><volume>47</volume><issue>15</issue><fpage>e90</fpage><pub-id pub-id-type="pmcid">PMC6735967</pub-id><pub-id pub-id-type="pmid">31194863</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkz501</pub-id></element-citation></ref><ref id="R8"><label>8</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tanudisastro</surname><given-names>Hope A</given-names></name><name><surname>Deveson</surname><given-names>Ira W</given-names></name><name><surname>Dashnow</surname><given-names>Harriet</given-names></name><name><surname>MacArthur</surname><given-names>Daniel G</given-names></name></person-group><article-title>Sequencing and characterizing short tandem repeats in the human genome</article-title><source>Nature Reviews Genetics</source><year>2024</year><fpage>1</fpage><lpage>16</lpage><pub-id pub-id-type="pmid">38366034</pub-id></element-citation></ref><ref id="R9"><label>9</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hu</surname><given-names>Liwen</given-names></name><name><surname>Yao</surname><given-names>Xinyue</given-names></name><name><surname>Huang</surname><given-names>Hairong</given-names></name><name><surname>Guo</surname><given-names>Zhong</given-names></name><name><surname>Cheng</surname><given-names>Xi</given-names></name><name><surname>Xu</surname><given-names>Yang</given-names></name><name><surname>Shen</surname><given-names>Yi</given-names></name><name><surname>Xu</surname><given-names>Biao</given-names></name><name><surname>Li</surname><given-names>Demin</given-names></name></person-group><article-title>Clinical significance of germline copy number variation in susceptibility of human diseases</article-title><source>Journal of Genetics and Genomics = Yi Chuan Xue Bao</source><year>2018</year><volume>45</volume><issue>1</issue><fpage>3</fpage><lpage>12</lpage><pub-id pub-id-type="pmid">29396143</pub-id></element-citation></ref><ref id="R10"><label>10</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Beroukhim</surname><given-names>Rameen</given-names></name><name><surname>Mermel</surname><given-names>Craig H</given-names></name><name><surname>Porter</surname><given-names>Dale</given-names></name><name><surname>Wei</surname><given-names>Guo</given-names></name><name><surname>Raychaudhuri</surname><given-names>Soumya</given-names></name><name><surname>Donovan</surname><given-names>Jerry</given-names></name><name><surname>Barretina</surname><given-names>Jordi</given-names></name><name><surname>Boehm</surname><given-names>Jesse S</given-names></name><name><surname>Dobson</surname><given-names>Jennifer</given-names></name><name><surname>Urashima</surname><given-names>Mitsuyoshi</given-names></name><name><surname>Mc Henry</surname><given-names>Kevin T</given-names></name><etal/></person-group><article-title>The landscape of somatic copy-number alteration across human cancers</article-title><source>Nature</source><year>2010</year><volume>463</volume><issue>7283</issue><fpage>899</fpage><lpage>905</lpage><pub-id pub-id-type="pmcid">PMC2826709</pub-id><pub-id pub-id-type="pmid">20164920</pub-id><pub-id pub-id-type="doi">10.1038/nature08822</pub-id></element-citation></ref><ref id="R11"><label>11</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Otto</surname><given-names>Sarah P</given-names></name><name><surname>Whitton</surname><given-names>Jeannette</given-names></name></person-group><article-title>Polyploid incidence and evolution</article-title><source>Annual Review of Genetics</source><year>2000</year><volume>34</volume><fpage>401</fpage><lpage>437</lpage><comment>(Volume 34, 2000)</comment><pub-id pub-id-type="pmid">11092833</pub-id></element-citation></ref><ref id="R12"><label>12</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Van de Peer</surname><given-names>Yves</given-names></name><name><surname>Mizrachi</surname><given-names>Eshchar</given-names></name><name><surname>Marchal</surname><given-names>Kathleen</given-names></name></person-group><article-title>The evolutionary significance of polyploidy</article-title><source>Nature Reviews Genetics</source><year>2017</year><volume>18</volume><issue>7</issue><fpage>411</fpage><lpage>424</lpage><pub-id pub-id-type="pmid">28502977</pub-id></element-citation></ref><ref id="R13"><label>13</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Busche</surname><given-names>Mareike</given-names></name><name><surname>Pucker</surname><given-names>Boas</given-names></name><name><surname>Viehöver</surname><given-names>Prisca</given-names></name><name><surname>Weisshaar</surname><given-names>Bernd</given-names></name><name><surname>Stracke</surname><given-names>Ralf</given-names></name></person-group><article-title>Genome Sequencing of Musa acuminata Dwarf Cavendish Reveals a Duplication of a Large Segment of Chromosome 2</article-title><source>G3 Genes|Genomes|Genetics</source><year>2020</year><volume>10</volume><issue>1</issue><fpage>37</fpage><lpage>42</lpage><pub-id pub-id-type="pmcid">PMC6945009</pub-id><pub-id pub-id-type="pmid">31712258</pub-id><pub-id pub-id-type="doi">10.1534/g3.119.400847</pub-id></element-citation></ref><ref id="R14"><label>14</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Grassi</surname><given-names>Elena</given-names></name><name><surname>Vurchio</surname><given-names>Valentina</given-names></name><name><surname>Cresswell</surname><given-names>George D</given-names></name><name><surname>Catalano</surname><given-names>Irene</given-names></name><name><surname>Lupo</surname><given-names>Barbara</given-names></name><name><surname>Sassi</surname><given-names>Francesco</given-names></name><name><surname>Galimi</surname><given-names>Francesco</given-names></name><name><surname>Borgato</surname><given-names>Sofia</given-names></name><name><surname>Ferri</surname><given-names>Martina</given-names></name><name><surname>Viviani</surname><given-names>Marco</given-names></name><name><surname>Pompei</surname><given-names>Simone</given-names></name><etal/></person-group><article-title>Heterogeneity and evolution of DNA mutation rates in microsatellite stable colorectal cancer</article-title><year>2024</year></element-citation></ref><ref id="R15"><label>15</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Roerink</surname><given-names>Sophie F</given-names></name><name><surname>Sasaki</surname><given-names>Nobuo</given-names></name><name><surname>Lee-Six</surname><given-names>Henry</given-names></name><name><surname>Young</surname><given-names>Matthew D</given-names></name><name><surname>Alexandrov</surname><given-names>Ludmil B</given-names></name><name><surname>Behjati</surname><given-names>Sam</given-names></name><name><surname>Mitchell</surname><given-names>Thomas J</given-names></name><name><surname>Grossmann</surname><given-names>Sebastian</given-names></name><name><surname>Lightfoot</surname><given-names>Howard</given-names></name><name><surname>Egan</surname><given-names>David A</given-names></name><name><surname>Pronk</surname><given-names>Apollo</given-names></name><etal/></person-group><article-title>Intra-tumour diversification in colorectal cancer at the single-cell level</article-title><source>Nature</source><year>2018</year><volume>556</volume><issue>7702</issue><fpage>457</fpage><lpage>462</lpage><pub-id pub-id-type="pmid">29643510</pub-id></element-citation></ref><ref id="R16"><label>16</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bonfield</surname><given-names>James K</given-names></name><name><surname>Marshall</surname><given-names>John</given-names></name><name><surname>Danecek</surname><given-names>Petr</given-names></name><name><surname>Li</surname><given-names>Heng</given-names></name><name><surname>Ohan</surname><given-names>Valeriu</given-names></name><name><surname>Whitwham</surname><given-names>Andrew</given-names></name><name><surname>Keane</surname><given-names>Thomas</given-names></name><name><surname>Davies</surname><given-names>Robert M</given-names></name></person-group><article-title>HTSlib: C library for reading/writing high-throughput sequencing data</article-title><source>GigaScience</source><year>2021</year><volume>10</volume><issue>2</issue><elocation-id>giab007</elocation-id><pub-id pub-id-type="pmcid">PMC7931820</pub-id><pub-id pub-id-type="pmid">33594436</pub-id><pub-id pub-id-type="doi">10.1093/gigascience/giab007</pub-id></element-citation></ref><ref id="R17"><label>17</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Köster</surname><given-names>Johannes</given-names></name></person-group><article-title>Rust-Bio: a fast and safe bioinformatics library</article-title><source>Bioinformatics</source><year>2016</year><volume>32</volume><issue>3</issue><fpage>444</fpage><lpage>446</lpage><pub-id pub-id-type="pmid">26446134</pub-id></element-citation></ref><ref id="R18"><label>18</label><element-citation publication-type="other"><collab>OEIS Foundation Inc</collab><source>The On-Line Encyclopedia of Integer Sequences</source><year>2024</year></element-citation></ref><ref id="R19"><label>19</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kolpakov</surname><given-names>Roman</given-names></name><name><surname>Bana</surname><given-names>Ghizlane</given-names></name><name><surname>Kucherov</surname><given-names>Gregory</given-names></name></person-group><article-title>mreps: efficient and flexible detection of tandem repeats in DNA</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><issue>13</issue><fpage>3672</fpage><lpage>3678</lpage><pub-id pub-id-type="pmcid">PMC169196</pub-id><pub-id pub-id-type="pmid">12824391</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg617</pub-id></element-citation></ref><ref id="R20"><label>20</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Belser</surname><given-names>Caroline</given-names></name><name><surname>Baurens</surname><given-names>Franc-Christophe</given-names></name><name><surname>Noel</surname><given-names>Benjamin</given-names></name><name><surname>Martin</surname><given-names>Guillaume</given-names></name><name><surname>Cruaud</surname><given-names>Corinne</given-names></name><name><surname>Istace</surname><given-names>Benjamin</given-names></name><name><surname>Yahiaoui</surname><given-names>Nabila</given-names></name><name><surname>Labadie</surname><given-names>Karine</given-names></name><name><surname>Hřibová</surname><given-names>Eva</given-names></name><name><surname>Doležel</surname><given-names>Jaroslav</given-names></name><name><surname>Lemainque</surname><given-names>Arnaud</given-names></name><etal/></person-group><article-title>Telomere-to-telomere gapless chromosomes of banana using nanopore sequencing</article-title><source>Communications Biology</source><year>2021</year><volume>4</volume><issue>1</issue><fpage>1</fpage><lpage>12</lpage><pub-id pub-id-type="pmcid">PMC8423783</pub-id><pub-id pub-id-type="pmid">34493830</pub-id><pub-id pub-id-type="doi">10.1038/s42003-021-02559-3</pub-id></element-citation></ref><ref id="R21"><label>21</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Nurk</surname><given-names>Sergey</given-names></name><name><surname>Koren</surname><given-names>Sergey</given-names></name><name><surname>Rhie</surname><given-names>Arang</given-names></name><name><surname>Rautiainen</surname><given-names>Mikko</given-names></name><name><surname>Bzikadze</surname><given-names>Andrey V</given-names></name><name><surname>Mikheenko</surname><given-names>Alla</given-names></name><name><surname>Vollger</surname><given-names>Mitchell R</given-names></name><name><surname>Altemose</surname><given-names>Nicolas</given-names></name><name><surname>Uralsky</surname><given-names>Lev</given-names></name><name><surname>Gershman</surname><given-names>Ariel</given-names></name><name><surname>Aganezov</surname><given-names>Sergey</given-names></name><etal/></person-group><article-title>The complete sequence of a human genome</article-title><source>Science</source><year>2022</year><volume>376</volume><issue>6588</issue><fpage>44</fpage><lpage>53</lpage><pub-id pub-id-type="pmcid">PMC9186530</pub-id><pub-id pub-id-type="pmid">35357919</pub-id><pub-id pub-id-type="doi">10.1126/science.abj6987</pub-id></element-citation></ref><ref id="R22"><label>22</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Jam</surname><given-names>Helyaneh Ziaei</given-names></name><name><surname>Zook</surname><given-names>Justin M</given-names></name><name><surname>Javadzadeh</surname><given-names>Sara</given-names></name><name><surname>Park</surname><given-names>Jonghun</given-names></name><name><surname>Sehgal</surname><given-names>Aarushi</given-names></name><name><surname>Gymrek</surname><given-names>Melissa</given-names></name></person-group><article-title>LongTR: genome-wide profiling of genetic variation at tandem repeats from long reads</article-title><source>Genome Biology</source><year>2024</year><volume>25</volume><issue>1</issue><fpage>176</fpage><pub-id pub-id-type="pmcid">PMC11229021</pub-id><pub-id pub-id-type="pmid">38965568</pub-id><pub-id pub-id-type="doi">10.1186/s13059-024-03319-2</pub-id></element-citation></ref><ref id="R23"><label>23</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>Heng</given-names></name></person-group><article-title>New strategies to improve minimap2 alignment accuracy</article-title><source>Bioinformatics</source><year>2021</year><volume>37</volume><issue>23</issue><fpage>4572</fpage><lpage>4574</lpage><pub-id pub-id-type="pmcid">PMC8652018</pub-id><pub-id pub-id-type="pmid">34623391</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btab705</pub-id></element-citation></ref><ref id="R24"><label>24</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zook</surname><given-names>Justin M</given-names></name><name><surname>Catoe</surname><given-names>David</given-names></name><name><surname>McDaniel</surname><given-names>Jennifer</given-names></name><name><surname>Vang</surname><given-names>Lindsay</given-names></name><name><surname>Spies</surname><given-names>Noah</given-names></name><name><surname>Sidow</surname><given-names>Arend</given-names></name><name><surname>Weng</surname><given-names>Ziming</given-names></name><name><surname>Liu</surname><given-names>Yuling</given-names></name><name><surname>Mason</surname><given-names>Christopher E</given-names></name><name><surname>Alexander</surname><given-names>Noah</given-names></name><name><surname>Henaff</surname><given-names>Elizabeth</given-names></name><etal/></person-group><article-title>Extensive sequencing of seven human genomes to characterize benchmark reference materials</article-title><source>Scientific Data</source><year>2016</year><volume>3</volume><issue>1</issue><elocation-id>160025</elocation-id><pub-id pub-id-type="pmcid">PMC4896128</pub-id><pub-id pub-id-type="pmid">27271295</pub-id><pub-id pub-id-type="doi">10.1038/sdata.2016.25</pub-id></element-citation></ref><ref id="R25"><label>25</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Leto</surname><given-names>Simonetta M</given-names></name><name><surname>Grassi</surname><given-names>Elena</given-names></name><name><surname>Avolio</surname><given-names>Marco</given-names></name><name><surname>Vurchio</surname><given-names>Valentina</given-names></name><name><surname>Cottino</surname><given-names>Francesca</given-names></name><name><surname>Ferri</surname><given-names>Martina</given-names></name><name><surname>Zanella</surname><given-names>Eugenia R</given-names></name><name><surname>Borgato</surname><given-names>Sofia</given-names></name><name><surname>Corti</surname><given-names>Giorgio</given-names></name><name><surname>di Blasio</surname><given-names>Laura</given-names></name><name><surname>Somale</surname><given-names>Desiana</given-names></name><etal/></person-group><article-title>XENTURION is a population-level multidimensional resource of xenografts and tumoroids from metastatic colorectal cancer patients</article-title><source>Nature Communications</source><year>2024</year><volume>15</volume><issue>1</issue><elocation-id>7495</elocation-id><pub-id pub-id-type="pmcid">PMC11362617</pub-id><pub-id pub-id-type="pmid">39209908</pub-id><pub-id pub-id-type="doi">10.1038/s41467-024-51909-2</pub-id></element-citation></ref><ref id="R26"><label>26</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Favero</surname><given-names>F</given-names></name><name><surname>Joshi</surname><given-names>T</given-names></name><name><surname>Marquard</surname><given-names>AM</given-names></name><name><surname>Birkbak</surname><given-names>NJ</given-names></name><name><surname>Krzystanek</surname><given-names>M</given-names></name><name><surname>Li</surname><given-names>Q</given-names></name><name><surname>Szallasi</surname><given-names>Z</given-names></name><name><surname>Eklund</surname><given-names>AC</given-names></name></person-group><article-title>Sequenza: allele-specific copy number and mutation profiles from tumor sequencing data</article-title><source>Annals of Oncology</source><year>2015</year><volume>26</volume><issue>1</issue><fpage>64</fpage><lpage>70</lpage><pub-id pub-id-type="pmcid">PMC4269342</pub-id><pub-id pub-id-type="pmid">25319062</pub-id><pub-id pub-id-type="doi">10.1093/annonc/mdu479</pub-id></element-citation></ref><ref id="R27"><label>27</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cooke</surname><given-names>Daniel P</given-names></name><name><surname>Wedge</surname><given-names>David C</given-names></name><name><surname>Lunter</surname><given-names>Gerton</given-names></name></person-group><article-title>Benchmarking small-variant genotyping in polyploids</article-title><source>Genome Research</source><year>2022</year><volume>32</volume><issue>2</issue><fpage>403</fpage><lpage>408</lpage><pub-id pub-id-type="pmcid">PMC8805713</pub-id><pub-id pub-id-type="pmid">34965940</pub-id><pub-id pub-id-type="doi">10.1101/gr.275579.121</pub-id></element-citation></ref></ref-list></back><floats-group><fig id="F1" position="float"><label>Fig. 1</label><caption><title>ConSTRain overview and example.</title><p><bold>(1)</bold> An STR locus are loaded from the input files. The locus reference information is parsed from the STR panel. The STR copy number is set based on the karyotype, and optionally updated if the STR is affected by a CNA. <bold>(2)</bold> Reads overlapping the STR region are extracted from the alignment file, and the length of the STR region in each read is determined. <bold>(3)</bold> The observed distribution is sorted, and at most as many allele lengths as the STR copy number are kept. <bold>(4)</bold> This yields the final observed allele length distribution. <bold>(5)</bold> Next, all possible genotypes are generated for the STR copy number and stored in matrix <bold><italic>G</italic></bold>. <bold>(6)</bold> From <bold><italic>G</italic></bold>, the matrix <bold><italic>D</italic></bold> is generated by multiplying it with the total number of mapped reads (51 in the example) divided by the STR copy number (3 in the example). Each row in <bold><italic>D</italic></bold> corresponds to the expected allele length distribution of one of the genotypes in <bold><italic>G</italic></bold>. <bold>(7)</bold> The expected distribution with the lowest error to the observed distribution is found by taking the absolute difference between each row in <bold><italic>D</italic></bold> and the observed distribution, then <bold>(8)</bold> taking the sum of rows and finding the one with the lowest value. <bold>(9)</bold> The genotype in <bold><italic>G</italic></bold> with the lowest error is selected <bold>(10)</bold> and reported in the output. The inferred genotype of the STR locus in this example consists of an allele of 4 <bold><sc>cag</sc></bold> units (present once), an allele of 5 <bold><sc>cag</sc></bold> units (present once), and an allele of 8 <bold>CAG</bold> units (also present once).</p></caption><graphic xlink:href="EMS202294-f001"/></fig><fig id="F2" position="float"><label>Fig. 2</label><caption><title>ConSTRain performance on Q100 benchmark.</title><p>(<bold>A</bold>) Distribution of normalised sequencing depth observed by ConSTRain across 167114 repeat loci in the 100X HG002 WGS sample. The x-axis shows the sequencing depth normalised by the copy number of repeat loci. The left y-axis shows the accuracy of allele length calls (blue line and dots). The right y-axis shows the proportion of loci (grey histogram). Note: only normalised depth values between 0 and 60 are shown for visual clarity. (<bold>B</bold>) Accuracy of unfiltered and filtered ConSTRain STR allele length calls for 100X WGS of HG002, as well as for the same sample downsampled to 30X and 10X depth of coverage. Note: y-axis starts at 0.75.</p></caption><graphic xlink:href="EMS202294-f002"/></fig><fig id="F3" position="float"><label>Fig. 3</label><caption><title>Genotyping STRs in a triploid <italic>M. acuminata</italic> sample with a large duplication on chr02.</title><p><bold>(A)</bold> Consistency of STR genotypes between the HiSeq1500 and NextSeq500 samples for different normalised depth filtering thresholds. X-axis: STR period, y-axis: proportion of loci for which the inferred genotype matched exactly between the two alignments. <bold>(B)</bold> Distributions of the depth of coverage for STR loci normalised by copy number for STRs in the alignment of combined HiSeq1500 and NextSeq500 reads. The blue distribution shows the normalised depths for loci not affected by CNAs. The orange distribution shows the normalised depth reported for loci in the chr02 duplication when CNA information was not provided to ConSTRain. The green distribution shows normalised depth for the loci in the chr02 duplication when CNA information was provided to ConSTRain. Vertical dashed lines indicate filtering bounds that exclude the 2.5% of loci with the highest and the 2.5% of loci with the lowest depth of coverage in the overall sample.</p></caption><graphic xlink:href="EMS202294-f003"/></fig><fig id="F4" position="float"><label>Fig. 4</label><caption><p>Pairwise STR-based distances between four samples stemming from the same patient-derived tumoroid. Each cell represents the comparison between two samples, with the colour and value of cells indicating the normalised distances between samples (average difference in allele length per locus).</p></caption><graphic xlink:href="EMS202294-f004"/></fig><table-wrap id="T1" position="float" orientation="portrait"><label>Table 1</label><caption><title>Results for ConSTRain, GangSTR, and HipSTR on the HG002 human benchmark. Data are shown before and after filtering the output of each tool. The total number of loci in the benchmark was 1695865. The percentage of this number that was called by each variant caller is shown in brackets in the ’Loci called’ columns. The best value in each column is printed in bold.</title></caption><table frame="below" rules="groups"><thead><tr style="border-bottom: 1px solid"><th valign="top" align="left" style="border-bottom: hidden"/><th valign="top" align="left" style="border-bottom: hidden"/><th valign="top" align="left" style="border-bottom: hidden"/><th valign="top" align="left" colspan="2">Unfiltered</th><th valign="top" align="left" colspan="2">Filtered</th></tr><tr><th valign="top" align="left" style="border-right: 1px solid">Method</th><th valign="top" align="left">Runtime (hrs)</th><th valign="top" align="left">Throughput (loci/s)</th><th valign="top" align="left">Loci called (%)</th><th valign="top" align="left">Accuracy</th><th valign="top" align="left">Loci called (%)</th><th valign="top" align="left">Accuracy</th></tr></thead><tbody><tr><td valign="top" align="left" style="border-right: 1px solid">ConSTRain<xref ref-type="table-fn" rid="TFN1">*</xref></td><td valign="top" align="left"><bold>0.33</bold></td><td valign="top" align="left"><bold>1480.48</bold></td><td valign="top" align="left"><bold>1655655 (97.63)</bold></td><td valign="top" align="left">0.9525</td><td valign="top" align="left"><bold>1393426 (82.17)</bold></td><td valign="top" align="left"><bold>0.9828</bold></td></tr><tr><td valign="top" align="left" style="border-right: 1px solid">GangSTR</td><td valign="top" align="left">14.91</td><td valign="top" align="left">32.31</td><td valign="top" align="left">1654569 (97.56)</td><td valign="top" align="left">0.9513</td><td valign="top" align="left">1372842 (80.95)</td><td valign="top" align="left">0.9769</td></tr><tr><td valign="top" align="left" style="border-right: 1px solid">HipSTR</td><td valign="top" align="left">11.99</td><td valign="top" align="left">40.15</td><td valign="top" align="left">1225530 (72.27)</td><td valign="top" align="left"><bold>0.9750</bold></td><td valign="top" align="left">1174890 (69.28)</td><td valign="top" align="left">0.9774</td></tr></tbody></table><table-wrap-foot><fn id="TFN1"><label>*</label><p id="P47">data for ConSTRain running on 32 threads are shown. Single-threaded runtime was 6.73 hours (71.50 loci/s)</p></fn></table-wrap-foot></table-wrap></floats-group></article>